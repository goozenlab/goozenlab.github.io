<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | goozenlab]]></title>
  <link href="http://goozenlab.github.com/goozenlab/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://goozenlab.github.com/goozenlab/"/>
  <updated>2014-12-09T22:20:31+07:00</updated>
  <id>http://goozenlab.github.com/goozenlab/</id>
  <author>
    <name><![CDATA[jin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chromiumの半自動更新]]></title>
    <link href="http://goozenlab.github.com/goozenlab/blog/2013/07/27/chromium-auto-update/"/>
    <updated>2013-07-27T10:07:00+07:00</updated>
    <id>http://goozenlab.github.com/goozenlab/blog/2013/07/27/chromium-auto-update</id>
    <content type="html"><![CDATA[<p>ここ最近、ウイルスに感染したかのようにサファリが良く落ちます。
ということで、Chromeから余計な機能を抜いたChromiumに変更しました。</p>

<p>{% img  https://dl.dropbox.com/u/163521/images/2013-07-27-chromium.png 800  %}</p>

<p>ただし、Chromiumにはオートアップグレード機能（余計な機能の一つ）は付いていません。自分でビルドしてねというスタンス。定期的にXCodeでビルドして使うのはちょっと、、面倒ならChromeを使ってということなのでしょう。</p>

<p>ちょっと調べてみたところ、最新版をビルドしまくっている<a href="https://chromium-build.appspot.com/p/chromium/console">サイト</a>があり、スクリプトを使って最新版に更新できることを<a href="http://hints.macworld.com/article.php?story=20090604081030791">MacWorld</a>で見つけました。（スクリプトは少し調整してます。）</p>

<p>※ 普通にサイトよりダウンロードも出来ます。<a href="https://download-chromium.appspot.com/">こちら</a>から。ずいぶん控えめなところにダウンロードのリンクがあります。<br/>
　情報元:<a href="http://www.chromium.org/getting-involved/download-chromium">http://www.chromium.org/getting-involved/download-chromium</a></p>

<p>ターミナルにてスクリプトを実行します。（スクリプト名はchromium_update.shにしています。）</p>

<p>```
gallo% sh ./chromium_update.sh
Setup...
Checking current version...
 * your/latest build: 8d391c3ad2f0846e9d1366c5d1de5f1b797d799f / 10a20c605130a26efce0e5640c4a7d56a706f5bf
Downloading and unpacking...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>100 53.0M  100 53.0M    0     0  1453k      0  0:00:37  0:00:37 --:--:-- 1282k
Installing...
Done. You're now running build 10a20c605130a26efce0e5640c4a7d56a706f5bf
gallo%
```</p>

<p>ローカルのアプリが最新であれば、</p>

<p><code>
gallo% sh ./chromium_update.sh
Setup...
Checking current version...
 * your/latest build: 8d391c3ad2f0846e9d1366c5d1de5f1b797d799f / 8d391c3ad2f0846e9d1366c5d1de5f1b797d799f
 * build 8d391c3ad2f0846e9d1366c5d1de5f1b797d799f is the latest one.
gallo%
</code></p>

<!-- more -->


<p>と、かなり手入らずです。スクリプトは以下。今のところ問題なく安定して動いてます。一日に数回アップデートされているようです。</p>

<p>{% codeblock chromium_update.sh %}</p>

<h1>!/bin/sh</h1>

<h1>Get current build for Chromium on Mac.</h1>

<h1></h1>

<h1>@version  2009-05-22</h1>

<h1>@author   XXXX</h1>

<h1>@todo     Nothing yet</h1>

<h1>http://hints.macworld.com/article.php?story=20090604081030791</h1>

<h1>setup ------------------------------------------------------------------------</h1>

<p>tempDir="/tmp/<code>whoami</code>/chrome-nightly/";
baseURL="http://commondatastorage.googleapis.com/chromium-browser-snapshots/Mac";
baseName="chrome-mac";
baseExt="zip";
appName="Chromium.app";
appDir="/Applications";
version=~/.CURRENT_CHROME;</p>

<h1>------------------------------------------------------------------------------</h1>

<h1>------------------------------------------------------------------------------</h1>

<p>function checkForErrors {</p>

<pre><code>if [ "$?" != "0" ]; then
    echo "Unkown error (see above for help)!";
    exit 3;
fi
</code></pre>

<p>}</p>

<h1>------------------------------------------------------------------------------</h1>

<h1>------------------------------------------------------------------------------</h1>

<p>echo "Setup...";
mkdir -p "$tempDir";
cd "$tempDir";
checkForErrors;</p>

<h1>------------------------------------------------------------------------------</h1>

<h1>------------------------------------------------------------------------------</h1>

<p>echo "Checking current version...";
touch $version
currentVersion=<code>cat $version</code>;
latestVersion=<code>curl -s $baseURL/LAST_CHANGE</code>;
checkForErrors;
echo " * your/latest build: $currentVersion / $latestVersion";
if [ "$currentVersion" == "$latestVersion" ]; then</p>

<pre><code>echo " * build $currentVersion is the latest one.";
exit 1;
</code></pre>

<p>fi</p>

<h1>------------------------------------------------------------------------------</h1>

<h1>------------------------------------------------------------------------------</h1>

<p>echo "Downloading and unpacking...";
chromePID=<code>ps wwaux|grep -v grep|grep "$appName"|awk '{print $2}'</code>;
if [ "$chromePID" != "" ];then</p>

<pre><code>echo " * chromium is running. Please stop it first.";
exit 2;
</code></pre>

<p>fi
curl -o $baseName.$baseExt "$baseURL/$latestVersion/$baseName.$baseExt";</p>

<p>unzip -qo $baseName.$baseExt;
checkForErrors;</p>

<h1>------------------------------------------------------------------------------</h1>

<h1>------------------------------------------------------------------------------</h1>

<p>echo "Installing...";
cp -r $baseName/$appName $appDir
checkForErrors;
echo $latestVersion > $version;</p>

<h1>------------------------------------------------------------------------------</h1>

<h1>------------------------------------------------------------------------------</h1>

<p>echo "Done. You're now running build $latestVersion";</p>

<h1>------------------------------------------------------------------------------</h1>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[画面のグレー/カラーのスイッチ]]></title>
    <link href="http://goozenlab.github.com/goozenlab/blog/2013/02/25/applescript-switch-grayscale/"/>
    <updated>2013-02-25T10:15:00+07:00</updated>
    <id>http://goozenlab.github.com/goozenlab/blog/2013/02/25/applescript-switch-grayscale</id>
    <content type="html"><![CDATA[<p>最近、ディスプレイを白黒（グレースケール）の表示にしています。そのためグラフィックの作業をする時や、ウェブサイトをカラーで見たい時等はカラーでとシステム環境に出たり入ったりする機会が増えました。</p>

<p>ただ一連の作業がちょっと面倒なので、<strong>アップルスクリプト</strong>＋Alfredを使って作業を簡略化しました。</p>

<p>まずはアップルスクリプトエディタでスクリプトを書きます。色々と調べて割と大変だったのですが仕上がってみるとすごくシンプルです。</p>

<p><strong>※</strong> MountainLionにて動かしてます。SnowLeopardではシステム環境のレイアウトが違ったはずなのでちょっと修正が必要だと思います。</p>

<!-- more -->


<p>``` applescript SwitchBW/Color</p>

<p>tell application "System Preferences"</p>

<pre><code>activate
set current pane to pane "com.apple.preference.universalaccess"
</code></pre>

<p>end tell</p>

<p>tell application "System Events"</p>

<pre><code>tell first window of process "System Preferences"

    tell table 1 of scroll area 1
        set selected of row 2 to true
    end tell
    tell group 1
        click checkbox "Use grayscale"
    end tell

end tell
</code></pre>

<p>end tell</p>

<p>do shell script "terminal-notifier -message \"Color mode has been changed.\" -title \"Diplay\""</p>

<p>tell application "System Preferences" to quit</p>

<p>```</p>

<p>画面上のパーツをどういう風に書いてよいのか分からず四苦八苦しましたが（９行〜１４行目）、下記のコードを走らせる事でGUIのパーツをリスト化してくれます。</p>

<p>``` applescript UIElementのリスト
tell application "System Preferences"</p>

<pre><code>activate
set current pane to pane "com.apple.preference.universalaccess"
--  set current pane to pane "com.apple.preference.sound"
</code></pre>

<p>end tell</p>

<p>tell application "System Events"</p>

<pre><code>if UI elements enabled then
    tell process "System Preferences"
        get every UI element
        --tell tab group 1 of window "Sound" of application process "System Preferences" of application "System Events"
        tell window 1 of application process "System Preferences" of application "System Events"
            --  tell table 1 of scroll area 1 of window 1 of application process "System Preferences" of application "System Events" これで左にあるテーブルの情報が見れます
            get every UI element
            get every UI element of every UI element
        end tell
    end tell
else
    tell application "System Preferences"
        activate
        set current pane to pane "com.apple.preference.universalaccess"
        display dialog "UI element scripting is not enabled."
    end tell
end if
</code></pre>

<p>end tell
```</p>

<p><img src="https://dl.dropbox.com/u/163521/images/2013-02-25-checkUIElements.png" alt="UIElement" /></p>

<p><code>checkbox "Use grayscale" of group 1 of window "Accessibility" of application process "System Preferences" of application "System Events"</code>でこのgroup 1の"Use grayscale"をクリックすれば良い事が分かります。表記の仕方がいくつかあるようで、click checkbox "Use grayscale"はclick checkbox 2、window "Accessibility"はwindow 1, first windowでも動きます。</p>

<p>後はそのパーツに値を入れてあげれば良し。</p>

<p>そして、スクリプトエディターからプログラムとして保存します。私は~/Library/Scriptsに保存してます。そして、お勧めランチャーのアルフレッドに~/Library/Scriptsを登録します。私の環境では以前やって登録したような、、、問題なく動いてます。</p>

<p>スクリプトで登録して、スクリプトメニューバーから操作も可能です。スクリプトエディターの環境設定にメニューバー登録の設定の箇所があります。</p>

<p>アップルスクリプトでいろんな事が出来るのにちょっと驚きです。</p>

<p>ただ、、別にコンピューターの処理速度が遅い訳ではないでしょうが、バシッとは変わらず</p>

<p>、、、トッ（環境設定が立ち上がり）、、、、、（ちょっと心配になる）、、パッ 。</p>

<p>と変わります。この間は一体？？動きの遅いおじいちゃんのようです。しかもアプリケーションで保存したもののほうがなぜか遅いです。ちょっと気が抜けます。</p>

<h2>おまけ</h2>

<p>ドックにアップルスクリプトのアイコンが出てくるのがちょっと、と思う方は、アプリケーションのパッケージ内にある<code>Info.plist</code>に</p>

<p>``` plain</p>

<pre><code>&lt;key&gt;LSUIElement&lt;/key&gt;
&lt;true/&gt;
</code></pre>

<p>```</p>

<p>を追加すると、ドックにアプリケーションのアイコンは表示されません。</p>

<p>そしてついでにノーティフィケーションセンターに登録。terminal-notifierというソフトをつかいます。アップルスクリプトに</p>

<p><code>
do shell script "terminal-notifier -message \"Color mode has been changed.\" -title \"Diplay\""
</code></p>

<p>を追加して、ノーティフィケーションセンターに告知します。インストールと簡単な使い方の説明はマイナビニュースの<a href="http://news.mynavi.jp/column/osxhack/060/index.html">こちらの記事</a>を参照してください。</p>

<p>お次ぎはUSBオーディオの選択/解除かな。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[眼精疲労と白黒モニター]]></title>
    <link href="http://goozenlab.github.com/goozenlab/blog/2012/11/20/use-gray-mode/"/>
    <updated>2012-11-20T16:43:00+07:00</updated>
    <id>http://goozenlab.github.com/goozenlab/blog/2012/11/20/use-gray-mode</id>
    <content type="html"><![CDATA[<p>最近乾燥地域にいるためか眼が疲れています。ショボショボ感がとれないので、気分転換も含め、白黒モードでマックを使ってます。システム環境のアクセシビリティよりグレースケールの所をチェック。コントラストもほんの少しあげてます。</p>

<p>{% img https://dl.dropbox.com/u/163521/images/2012-11-18-gray-preference.png 480 %}</p>

<p>高解像度の液晶を使っているので、老眼兆候のその一でもありますが、カーソルサイズをちょっと大きくもしてます。（OSXライオンからカーソル大きくしてもジャギーでなくなりました。）</p>

<p>※ ちょっと障害のある父もマックを使っていて、使い勝手でちょっとなぁーと、気になる所が改善されるのはありがたいです。（たぶん、どのOSも高齢者や障害者にたいしてはあまりフレンドリーでは無いような。。。）</p>

<p>文字を読んだり書いたりするには割と良いかもしれません。集中できるような気がします。</p>

<!--エロい画像を見るとなんか昭和な古き良きエロ本のようです。-->


<!-- more -->


<p>で、画面はこのようになります。お試しあれ。</p>

<p>{% img https://dl.dropbox.com/u/163521/images/2012-11-18-gray-screen.png 800 %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macの追加設定]]></title>
    <link href="http://goozenlab.github.com/goozenlab/blog/2012/08/20/mac-setting/"/>
    <updated>2012-08-20T19:41:00+07:00</updated>
    <id>http://goozenlab.github.com/goozenlab/blog/2012/08/20/mac-setting</id>
    <content type="html"><![CDATA[<p>{% render_partial computing/mac-my-hidden-setting.markdown %}</p>
]]></content>
  </entry>
  
</feed>
