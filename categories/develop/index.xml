<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Develop on goozenlab</title>
    <link>https://goozenlab.com/categories/develop/</link>
    <description>Recent content in Develop on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Tue, 06 Mar 2018 06:30:00 +0700</lastBuildDate>
    
	<atom:link href="https://goozenlab.com/categories/develop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sati v1.9.5</title>
      <link>https://goozenlab.com/blog/2018/03/sati-195/</link>
      <pubDate>Tue, 06 Mar 2018 06:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2018/03/sati-195/</guid>
      <description> iOS10よりヘルスケアにマインドフルネスの項目ができてました。アップルの審査でちょっと手間取りましたが、瞑想ソフトということもあるので対応をしました。
スクリーンショットが最新ではないとか、 プライベートポリシーについて書かれたWebページが必要とか、 アプリの説明文がなっちゃないなど。 申請時に色々と突っ込まれました。
[1.9.5] - 2018-03-06 @ ChiangMai Added  export data to Health: mindfulness  </description>
    </item>
    
    <item>
      <title>Sati v1.9.4</title>
      <link>https://goozenlab.com/blog/2017/05/sati-194/</link>
      <pubDate>Fri, 19 May 2017 06:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2017/05/sati-194/</guid>
      <description>1.9.3をアップデートし、間髪を入れずにiOS10にて音が ”Tri-Tone” に変わってしまうバグのホットフィックスアップデートです。 ついでに、瞑想開始時にでるアラートを２秒後に自動で消えるようにしました。余計な１タップが減ります。
アプリは一時配信を中断。ダウンロードしてしまったユーザーの方々申し訳有りません。
UNNotification (iOS10) まず、サウンドファイルをSoundと言う名前のフォルダーに入れていたのがよくなかった。
そして、今更ながら、iOS10からは通知の仕様が変更されていたのを知らなかった。
func registerAlarm(_ atDate: Date, soundName: String, identifier: String) { //print(&amp;quot;fire: &amp;quot; + atDate.description + &amp;quot; with sound:&amp;quot; + soundName + &amp;quot; with identifier:&amp;quot; + identifier) if #available(iOS 10.0, *) { let content = UNMutableNotificationContent() // Configure Notification Content content.sound = UNNotificationSound(named: soundName) // Add Trigger let calendar = Calendar(identifier: .gregorian) let components = calendar.dateComponents(in: .current, from: atDate) let date = DateComponents(calendar: calendar, timeZone: .</description>
    </item>
    
    <item>
      <title>サティの通知音</title>
      <link>https://goozenlab.com/blog/2016/10/notification_sound/</link>
      <pubDate>Mon, 10 Oct 2016 10:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/10/notification_sound/</guid>
      <description>iOS10にてサティの通知音が TriTone になっているかもしれません。ネット上で調べたところ、リブート、もしくはハードリブートで直るということです。
がしかし、私のiPhone5Sでは数回リブートを行うも変わりなし。
さらに調べてみると、XCodeからインストールしたものはこのエラーから逃れられない、との事、本当か？、怪しい。
という事で、本末転倒というか、なんというか。。。わざわざiTunesStoreからインストールして検証しました。
結果 音は問題なく出ました。そして、XCode8では問題になっていたカレンダー書き出しとアプリケーションバッジも問題なく動作してるのを確認。
ということは、他のアプリも含めて問題ないということ（だと勝手に解釈。）ということで、XCode8に移行時には少し作業が必要のようですが、上がっているバイナリーは互換性がある。よかった。。
iOS10上にて不具合を見つけた方はご連絡のほど、何卒よろしくお願いします。</description>
    </item>
    
    <item>
      <title>Use Legacy Swift Language Version</title>
      <link>https://goozenlab.com/blog/2016/10/use_legacy_swift_version/</link>
      <pubDate>Fri, 07 Oct 2016 16:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/10/use_legacy_swift_version/</guid>
      <description>四十肩勃発、じわ〜ピッキーーっとした痛みの中、XCode8にてプロジェクトを移行中です。ほとんどのプロジェクトは立ち上げ時に問題なく変換をすることができたのですが、立ち上げるたびに何度も変換を即されて先に進めないプロジェクトがありました。
問題は、Build Settings 内の項目”Use Legacy Swift Language Version”が更新されていないということのようです。なぜにこのプロジェクトにだけにおこるのかはちょっと不明かつ、嫌な感じでもある。
解決法 Swift 3を使うときは「NO」。
Swift 2.3にて動かすときは「YES」です。
そして、プロジェクトの方も変えておきます。</description>
    </item>
    
    <item>
      <title>iPhone 5S始めました</title>
      <link>https://goozenlab.com/blog/2016/09/iphone5s/</link>
      <pubDate>Wed, 21 Sep 2016 09:30:00 +0900</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/iphone5s/</guid>
      <description>母からのお下がり、iphone5Sを頂きました！
全然ヘビーユーザーで無い母ですから状態もすごく良いです。指紋認証すごいですね。これでAppleIDのパスワードに長くて安全なものにできる。でも、ちとでかいな。。母は今SEを使っているので、ちょっとSimLockを解除させてそちらを頂こうかとと、悪魔のささやきが、、。
ともかくありがたいことに、これでiOS10での実機検証が可能になりました。ありがたや。。</description>
    </item>
    
    <item>
      <title>XCode8</title>
      <link>https://goozenlab.com/blog/2016/09/xcode8/</link>
      <pubDate>Mon, 19 Sep 2016 14:30:00 +0900</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/xcode8/</guid>
      <description>日本に一時帰国する。iOS10での動作チェックをしようと思いXCode８をインストールしました。
当分XCode7と共存させて使っていくつもりなので、今まで使っていたXCodeを別の場所にコピーして名前を変更。インストール終了後、移動したXCodeをアプリケーションに戻します。
（アプリケーションに入っている今まで使っているXCodeは名前を変更しても、アップデート時に新しいXCodeに書き換えられてしまいますので、要注意。）
XCode８でプロジェクトを開けると、プロジェクトをSwift3かSwift2.3への書き換えを求められます。書き換えないとビルドができない。これは、今までのバイナリーだと動かないということなのか？？
しかも、書き換えないとビルドでエラー。同様にXCode8にて書き換えを行なったプロジェクトはXCode7ではビルドができなくなる。。XCode8に強制移行が求められるのは気分がよく無い。。。。（ぼやき：オメェ～ヨォ～、その前に新しいMBPを出せよ！）台風接近中だし、蒸し暑いし、気分がよく無い。</description>
    </item>
    
    <item>
      <title>NSRegularExpression</title>
      <link>https://goozenlab.com/blog/2016/09/nsregularexpression/</link>
      <pubDate>Thu, 15 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/nsregularexpression/</guid>
      <description>NSRegularExpressionでのパターンマッチングでドツボ。（NSStringが出てきたりしてちょっと厄介な感じがあります。）
(a)でのmdファイルのパースでちょっとはまりました。強調部分の抜き出しのとこで、nilが戻ってくる。小一時間ぐらいネットをふらつくも手がかりなし。
let pattern = &amp;quot;^(\\*\\*|__)(.*)(\\*\\*|__)$&amp;quot; let regex = try? NSRegularExpression(pattern: pattern, options: NSRegularExpressionOptions.CaseInsensitive) let matches = regex!.firstMatchInString(text, options: [], range: NSMakeRange(0, patternStr.utf16.count)) if let match = matches { title = (text as NSString).substringWithRange(match.rangeAtIndex(2)) ... }  で、しらみ潰しで削ったり変更したりして、どうにか、たどり着いたのが、&amp;rdquo;^&amp;ldquo;（行頭）を削除。で、動くようになりました。&amp;rdquo;^&amp;ldquo;の必要は無いのだけれども、動かなかった理由はわからず。。
let pattern = &amp;quot;(\\*\\*|__)(.*)(\\*\\*|__)$&amp;quot;  </description>
    </item>
    
    <item>
      <title>NSRegularExpression</title>
      <link>https://goozenlab.com/blog/2016/09/nsregularexpression/</link>
      <pubDate>Thu, 15 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/nsregularexpression/</guid>
      <description>NSRegularExpressionでのパターンマッチングでドツボ。（NSStringが出てきたりしてちょっと厄介な感じがあります。）
(a)でのmdファイルのパースでちょっとはまりました。強調部分の抜き出しのとこで、nilが戻ってくる。小一時間ぐらいネットをふらつくも手がかりなし。
let pattern = &amp;quot;^(\\*\\*|__)(.*)(\\*\\*|__)$&amp;quot; let regex = try? NSRegularExpression(pattern: pattern, options: NSRegularExpressionOptions.CaseInsensitive) let matches = regex!.firstMatchInString(text, options: [], range: NSMakeRange(0, patternStr.utf16.count)) if let match = matches { title = (text as NSString).substringWithRange(match.rangeAtIndex(2)) ... }  で、しらみ潰しで削ったり変更したりして、どうにか、たどり着いたのが、&amp;rdquo;^&amp;ldquo;（行頭）を削除。で、動くようになりました。&amp;rdquo;^&amp;ldquo;の必要は無いのだけれども、動かなかった理由はわからず。。
let pattern = &amp;quot;(\\*\\*|__)(.*)(\\*\\*|__)$&amp;quot;  </description>
    </item>
    
    <item>
      <title>ブロック表記</title>
      <link>https://goozenlab.com/blog/2016/09/block-3ways/</link>
      <pubDate>Mon, 12 Sep 2016 09:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/block-3ways/</guid>
      <description> ３つの記述方法があるようです、毎回ブロックにぶち当たると作業が止まるのでメモとして残す。
ブロックでっせ！と、こんな感じで出てきます、
ダブルクリックで、意味がわからなくなる。この前置詞 in ちゅーのが曲者、どこの中じゃ？。
その一 addressString.enumerateLines ({ (line: String, inout stop: Bool) -&amp;gt; () in print(line) })  Trailing closure syntax：（）を抜いてます。 addressString.enumerateLines { (line: String, inout stop: Bool) in print(line) }  XCodeの簡易バージョン これが一番意味がつかめないのですが、最初に出てきたときによく見ろということですな。
addressString.enumerateLines { (line, stop) in println(line) }  </description>
    </item>
    
    <item>
      <title>unWind segway</title>
      <link>https://goozenlab.com/blog/2016/09/segway-unwind/</link>
      <pubDate>Fri, 09 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/segway-unwind/</guid>
      <description>今までは、移行先のデレゲートで処理を行っていた事を、便利そうなSegueのunWindでやってみようと思いました。しかしながら、XCodeのストーリーボードでいろいろ探しても、どこにもそれらしくものが見つかりません。使うのやめようかとも思いましたが、調べました。簡単にどこかでコントロールクリックすればできると思ってましたが、違いました。
使いたい例は、ListVC（リストViewController)からセグウェイでDetailVCに行き、DetailVCにて編集終了後、unWindするという流れ。
 ListVCからDetailVCにセグウェイを設定（コントロールドラッグ） ListVCに下記のコードを追加 DetailVCのexitをクリック、コネクションインスペクターにコードで追加したファンクションが表示される リンクをボタンなりに繋ぐ  ListVCに追加したコードは、
@IBAction func unwind___XXX___(unwindSegue: UIStoryboardSegue, towardsViewController subsequentVC: UIViewController) または (unwindSegue: UIStoryboardSegue) { }  いろいろ試したところ、@IBAction func unwind___XXX___ が入っていれば認識されるよう___XXX___の部分は必要なものに置き換えてください。引数も(unwindSegue: UIStoryboardSegue)が入っていれば問題は無いようですが、こちらも追加・変更可能のようです。
あとListVCでデーターを処理して、以前からのデレゲートでの処理と同じになります。
@IBAction func unwindFromDetailView(unwindSegue: UIStoryboardSegue) { // 処理 let title = unwindSegue.sourceViewController.title ......... }  XCode7では、unwind&amp;hellip;をタイプすると下記のコードを書き出してくれますが動きません。中途半端だ、、ちょっと数時間、嫌〜〜な気分になりました。。。
override func unwindForSegue(unwindSegue: UIStoryboardSegue, towardsViewController subsequentVC: UIViewController) { &amp;lt;#code#&amp;gt; }  やっぱり、ストーリーボードは好きになれません。。</description>
    </item>
    
    <item>
      <title>unWind segway</title>
      <link>https://goozenlab.com/blog/2016/09/segway-unwind/</link>
      <pubDate>Fri, 09 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/segway-unwind/</guid>
      <description>今までは、移行先のデレゲートで処理を行っていた事を、便利そうなSegueのunWindでやってみようと思いました。しかしながら、XCodeのストーリーボードでいろいろ探しても、どこにもそれらしくものが見つかりません。使うのやめようかとも思いましたが、調べました。簡単にどこかでコントロールクリックすればできると思ってましたが、違いました。
使いたい例は、ListVC（リストViewController)からセグウェイでDetailVCに行き、DetailVCにて編集終了後、unWindするという流れ。
 ListVCからDetailVCにセグウェイを設定（コントロールドラッグ） ListVCに下記のコードを追加 DetailVCのexitをクリック、コネクションインスペクターにコードで追加したファンクションが表示される リンクをボタンなりに繋ぐ  ListVCに追加したコードは、
@IBAction func unwind___XXX___(unwindSegue: UIStoryboardSegue, towardsViewController subsequentVC: UIViewController) または (unwindSegue: UIStoryboardSegue) { }  いろいろ試したところ、@IBAction func unwind___XXX___ が入っていれば認識されるよう___XXX___の部分は必要なものに置き換えてください。引数も(unwindSegue: UIStoryboardSegue)が入っていれば問題は無いようですが、こちらも追加・変更可能のようです。
あとListVCでデーターを処理して、以前からのデレゲートでの処理と同じになります。
@IBAction func unwindFromDetailView(unwindSegue: UIStoryboardSegue) { // 処理 let title = unwindSegue.sourceViewController.title ......... }  XCode7では、unwind&amp;hellip;をタイプすると下記のコードを書き出してくれますが動きません。中途半端だ、、ちょっと数時間、嫌〜〜な気分になりました。。。
override func unwindForSegue(unwindSegue: UIStoryboardSegue, towardsViewController subsequentVC: UIViewController) { &amp;lt;#code#&amp;gt; }  やっぱり、ストーリーボードは好きになれません。。</description>
    </item>
    
    <item>
      <title>アイコンとネーミング</title>
      <link>https://goozenlab.com/blog/2016/09/app-icon-naming/</link>
      <pubDate>Wed, 07 Sep 2016 12:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/app-icon-naming/</guid>
      <description>アプリを作る最初の一歩。XCodeでプロジェクを新規、で・・・・。アプリを作ろうと思って最初につまずくところ、アプリの名前。
個人的にアイコン作りと、アプリのネーミングを考えたりするのは好きですが、頭を悩ますところでもあります。 別に新しいことはないと思いますが、自分がどのようにしたのか、ちょっと書いてみたいと思います。（あとで変更は可能なのですが、私は名前が決まらないと、なんか居心地が悪いというか、、）
Naming 理想的に、パッと目に入るような名前だと最高なのですが、、、。
私のアプリの名前のつけ方は簡単に書くと、「作るソフトの機能に関連する言葉を広げていって、いじってみたり、語呂を何かと合わせてみたりして、いくつかに絞り、最終的に響きの良いものを選ぶ」かな、後々パッと浮かんだことは残念ながら無いです。
 liitlist：”little + list” もしくはminimalistてきな ”little + ist” から doop：duplicationを捻って、向かいから見てもdoop、１回転してもdoop。リサイクル管理系のアプリ（エネループも頭にあったかな。） ohaYo：睡眠ログアプリ。Yが大文字なのがこだわり ippuku：「俺働きすぎ？一体いつ一服できんだ？」とアプリを作る時にあった想いから コスパ：シンプルにコストパフォーマンスより tapas：マルチキッチンタイマー、ご存知スペイン料理のおつまみの総称（次点は、タンドリーチキンを変化させて「ダンドリーキッチン」だったかな。） sati：瞑想アプリなので、パーリー語（仏教用語：念、気づき）より  外国語を使うとなんとなくオシャレになる。今度は漢字を使った漢なソフトでも作るかな。
自分でいいなと思ったアプリ名とか商品名をリストしてみて、その共通項や特徴を見つけてみることも良い助けになると思います。
拙作のなかでの傑作ネーミングは、doop littlist と (a) だと、他のソフトは割とありきたりのネーミング、平均点。
※ (a) はアイディアの元になっているファイルの表記方法からとっていて、結局そのプランはダメになってしまったんですが、 日本語にすると、かっこえー（格好えー）になる。
Icon アプリの顔です。個人製作のアプリということを考慮すると割に出来の良い方だと思います。センスも大事だとは思いますが、ちょっとしたルールでそれなりに仕上がると思います。無理しすぎないことが割と重要でないかと、、
個人的に注意していること
 なるべく、アプリで使っているコンポーネントから、親和性 アプリで使っている色、白バックでも黒バックでも問題ないように、 フォントは雰囲気に合ったもの グリッドに合わせる（人間の目って割と精巧で、ずれていると違和感を感じます。） シンプルかつシンプル  色は自分で使う色を絞り込んでまとめています。全部で20色ぐらいのパレットになっています。
数年前の、iOS8よりフラットデザインになってアイコンデザインを結構変えました。それまで、使っていたグラデーションもすごく微妙な感じにして、全体的にシンプルにしました。良い変更例は下記のオハヨのケース。
私のお気に入りは、littlist、doopかな。（littlistは最初からずっと同じデザイン、自画自賛アイコン。）
ちなみに、リスタリアというソフトでは、数字のところにバージョンナンバーが、そして、買い物リストのアプリなので、果物の名前をバージョンごと違うものを入れています。バーコードも適当ではありません。スキャナーで読み取ることもできます。ちょっとしたお遊び。
ちなみにアイコン制作に使っているアプリは、以前はアドビのFireworksで、今はAffinity Designerを使ってます。</description>
    </item>
    
    <item>
      <title>ギットハブ公開</title>
      <link>https://goozenlab.com/blog/2016/09/github-open-sati/</link>
      <pubDate>Tue, 06 Sep 2016 07:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/github-open-sati/</guid>
      <description>ギットハブ公開に向けて行ったこと。XCodeでのプロジェクト設定とこれからの管理について。
 問題点：ギットハブに公開するプロジェクトには、バンドルアイデンティファイヤ、AppleIDを入れたくない。そして、アプストアーに公開するにはコードサインをしなくてはいけない。（アイデンティファイヤ、AppleIDが必要） 解決案：二つのプロジェクトと共有コードの形での運用  一つ目のプロジェクトは、作業用。ギットハブと連動して作業をします。個人情報入れないでも、シミュレーターでアプリを動かすことができます。
もう一つは、アプストアービルド、デプロイ用。プロジェクトファイル以外は、上のプロジェクトからファイルをリンクします。（コピーではなく、シンボリックリンクにみたいなもの？）このプロジェクトには、アプストアーに登録するための情報を入れておきます。ギットは使いません。
作業 サティを公開するための行った作業をちょっと詳しく。まずは今まで作業していたフォルダーを一気にコピー。
一つを、open.sati (公開用） もう一つを sati (デプロイ用）にします。
ともにフレッシュスタートということで、ディレクトリー内にある .git　ディレクトリーを削除します。隠れファイルなので、ターミナルから rm -rf .git/。
sati：アプストアー、実機検証用 satiの中のファイルはフロジェクトファイル、info.plist以外、全て捨ててしまいます。
プロジェクト内は真っ赤になります。一気に消してしまいます。
そして、open.sati のフォルダーからファイルをまとめてドラッグ＆ドロップ。ダイアリグが出ます。コピーのチェックは外します。
残念ながら、Localizable.strings がうまく引き継がれません。（多分ローカライズされたnibファイルなども引き継がれないと思います。）コマンドオプション＋ドラッグのエイリアスでファイルを持ってくるもNG。しかし、XCode上でファイルを一旦 open.sati よりコピーして消し、ターミナルで リンクを ln -s でリンクしてあげれば読み込みます。なんか中途半端ですが動きます。ディレクトリーはこんな感じになります。
そして、README や LICENCE 等、ターゲットに入れないファイルをメンバーから外します。
で、ビルドの設定などは引き継がれたままなので実機でもアプストア用のビルドなども今まで通り動きました。（アップロードはしていませんが、多分大丈夫だと思います。）
こちらのプロジェクトでは、ファイルをいじらないようにします。あくまでも、ビルドと実機テストようにします。
open.sati：ギットハブ、作業用 まずプロジェクトファイルを開けて、公開したくないものを抜きます。そして、リンクしているファイルがないかチェック。（私は、ビルド時にローカルからのファイルを参照しているところがあるので、その設定も抜きます。デプロイ用についていれば問題はない。） 幾つかのファイルは他のアプリと共有しているので、こっちのプロジェクトにコピーをします。
一通りチェックを終えたら、シミュレーターで動くかチェックします。
これで、作業はギットハブのプロジェクトで行う。ギットハブと共有しているプロジェクトでもシミュレーターで動かせることができ、検証機で動かしたい時とアプストアーにアップする時は別のプロジェクトですれば良い。デプロイ用はほとんど手を入れる必要はない、はず。
そして、公開します。
追記： READMEとライセンスはプロジェクトと同じ階層に置いておきましょう。ギットハブではそのREADが読み込まれ表示されます。
ギットハブに公開 公開をするには、ギットハブに載っている方法で行います。
まずはギットの初期化、その後、ファイルを追加して、コミットします。（ちょっとREADMEに何を書けばいいか悩みましたが、）９月６日のくろ～の日に公開。
duvel:open.sati jin$ git init duvel:open.sati jin$ git add . duvel:open.sati jin$ git commit -m &amp;quot;Initial Commit&amp;quot; duvel:open.sati jin$ git remote add origin git@github.</description>
    </item>
    
    <item>
      <title>Podsを使う</title>
      <link>https://goozenlab.com/blog/2016/09/use-pods/</link>
      <pubDate>Sat, 03 Sep 2016 07:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/use-pods/</guid>
      <description>XCode7.3.1にて先日インストール（記事）したポッドを使います。これがびっくり簡単で驚きました。
ただ、ヘッダーをインポートするだけ！です。ブリッジがどうだこうだみたいのを作らないといけないと思っていたので拍子抜け。素晴らしい。
import UIKit import CoreData import ReachabilitySwift import MBProgressHUD import SwiftyDropbox  でも、なんか、XCodeが半落ち状態になることが頻発するようになった。。
ちなみに、Podfileはこんな感じです。
project &#39;(a).xcodeproj&#39; platform :ios, &#39;8.0&#39; target &#39;(a)&#39; do use_frameworks! # Pods for (a) pod &#39;ReachabilitySwift&#39; pod &#39;MBProgressHUD&#39; pod &#39;SwiftyDropbox&#39; end  </description>
    </item>
    
    <item>
      <title>XCodeにてアプリデーターの管理</title>
      <link>https://goozenlab.com/blog/2016/09/device-container/</link>
      <pubDate>Fri, 02 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/device-container/</guid>
      <description>端末のアプリデータをバックアップ、復元。
クリーンインストールでのミス、弊害のひとつ。XCodeにてコードサインの変更またはRevokeによる実機へのインストールがきなくなる不具合。
この不具合は、実機に入っているアプリを消去して再インストールすることで解決はするのですが、中に入っているデーターが消えてしまします。そこで、以前は iExplore というソフトを行って実機からバックアップを取っていたのを、いつからか、XCodeでもできるようになっていたのでメモ。（開発環境がXCode5から一気にXCode7になったので、、まぁ改悪は今の所無いのだけど、、分からんことが一杯だな。。）
データーのバックアップ・復元 まずは、XCodeにて、メニューの Window - Device にて端末を選択します。インストールされたソフトがリストされます。データーをバックアップ・復元したいアプリを選択します。下の＋・ー・歯車の歯車を選択するとコンテナに対するメニューが表示されます。
実機にインストール前に、
 コンテナをダウンロード エラーの出るアプリを消去 アプリを再インストール コンテナのリプレース  にて作業を終えます。
コンテナファイル そこで、コンテナファイルの中身を見てみます。ダウンロードすると以下のような ****.xcappdata が保存されます。Ctr+Clickで中身を見てみると以下のようになってます。
Documentフォルダー内にある *.sql の三つのファイルがアプリのデーターになります。Libraryのなかには設定用のplistファイルがあります。
※そしてこのファイルをシミュレーターに入れることでデーターを更新することもできます。スクリーンショットを撮るためにアプリのデーターが必要だったりする時などに役に立ちます。
シミュレータヘのデーター移行 シミュレータのデーターはちょと厄介なとこにあり、探すのに一苦労します。たくさんインストールする前に、探してどこかにメモしておきましょう。
まずは、Simulatorの識別番号を XCodeのDeviceより確認します。
ファインダーに戻り、ライブラリーに入り。
~/Library/Developer/CoreSimulator/Devices/IDENTIFIER for Simulator/data/Containers/Data/Application/IDENTIFIER for Application/Documents
に移動して、上の*.sql の三つのファイルを上書きます。
シミュレータのデーターを実機で使う 逆に、実機にシミュレーターのデーターを使いたいときは、ダウンロードした、****.xcappdata ファイルのなかの*.sql の三つのファイルをシミュレーターのもので上書きして、実機のコンテナをリプレースします。
iExploreが使えなくなって難儀していたので、同じような問題を抱えた方にお役に立てば。。</description>
    </item>
    
    <item>
      <title>XCodeにてアプリデーターの管理</title>
      <link>https://goozenlab.com/blog/2016/09/device-container/</link>
      <pubDate>Fri, 02 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/device-container/</guid>
      <description>端末のアプリデータをバックアップ、復元。
クリーンインストールでのミス、弊害のひとつ。XCodeにてコードサインの変更またはRevokeによる実機へのインストールがきなくなる不具合。
この不具合は、実機に入っているアプリを消去して再インストールすることで解決はするのですが、中に入っているデーターが消えてしまします。そこで、以前は iExplore というソフトを行って実機からバックアップを取っていたのを、いつからか、XCodeでもできるようになっていたのでメモ。（開発環境がXCode5から一気にXCode7になったので、、まぁ改悪は今の所無いのだけど、、分からんことが一杯だな。。）
データーのバックアップ・復元 まずは、XCodeにて、メニューの Window - Device にて端末を選択します。インストールされたソフトがリストされます。データーをバックアップ・復元したいアプリを選択します。下の＋・ー・歯車の歯車を選択するとコンテナに対するメニューが表示されます。
実機にインストール前に、
 コンテナをダウンロード エラーの出るアプリを消去 アプリを再インストール コンテナのリプレース  にて作業を終えます。
コンテナファイル そこで、コンテナファイルの中身を見てみます。ダウンロードすると以下のような ****.xcappdata が保存されます。Ctr+Clickで中身を見てみると以下のようになってます。
Documentフォルダー内にある *.sql の三つのファイルがアプリのデーターになります。Libraryのなかには設定用のplistファイルがあります。
※そしてこのファイルをシミュレーターに入れることでデーターを更新することもできます。スクリーンショットを撮るためにアプリのデーターが必要だったりする時などに役に立ちます。
シミュレータヘのデーター移行 シミュレータのデーターはちょと厄介なとこにあり、探すのに一苦労します。たくさんインストールする前に、探してどこかにメモしておきましょう。
まずは、Simulatorの識別番号を XCodeのDeviceより確認します。
ファインダーに戻り、ライブラリーに入り。
~/Library/Developer/CoreSimulator/Devices/IDENTIFIER for Simulator/data/Containers/Data/Application/IDENTIFIER for Application/Documents
に移動して、上の*.sql の三つのファイルを上書きます。
シミュレータのデーターを実機で使う 逆に、実機にシミュレーターのデーターを使いたいときは、ダウンロードした、****.xcappdata ファイルのなかの*.sql の三つのファイルをシミュレーターのもので上書きして、実機のコンテナをリプレースします。
iExploreが使えなくなって難儀していたので、同じような問題を抱えた方にお役に立てば。。</description>
    </item>
    
    <item>
      <title>Podsをプロジェクトに</title>
      <link>https://goozenlab.com/blog/2016/09/install-pods/</link>
      <pubDate>Thu, 01 Sep 2016 07:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/09/install-pods/</guid>
      <description>プロジェクトにポッド・ライブラリーを追加します。でこれまたエラーが出る。とりあえず手動でインストールすることにする。
$ pod install Setting up CocoaPods master repo [!] Unable to add a source with url `https://github.com/CocoaPods/Specs.git` named `master`. You can try adding it manually in `~/.cocoapods/repos` or via `pod repo add`.  で、回線状況悪く途中で回線が切断されエラー。（後もーちょいなのに、、）
$ cd .cocoapods/repos/ $ git clone https://github.com/CocoaPods/Specs.git Cloning into &#39;Specs&#39;... remote: Counting objects: 801469, done. remote: Compressing objects: 100% (30/30), done. Receiving objects: 83% (671735/801475), 209.63 MiB | 10.00 KiB/s error: RPC failed; curl 56 SSLRead() return error -980600 KiB/s fatal: The remote end hung up unexpectedly fatal: early EOF fatal: index-pack failed $  思ったよりファイルが大きいです（310MBくらい）。回線状況が悪い中でいるので終了まで結構時間がかかりました。朝の５時に起きて、早朝の誰も使っていないだろう時間帯でようやく完了。 （途中回線が切れること数回、、、）</description>
    </item>
    
    <item>
      <title>Sudo-less Gem &amp; Cocoapods</title>
      <link>https://goozenlab.com/blog/2016/08/install-cocoapods/</link>
      <pubDate>Wed, 31 Aug 2016 13:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/install-cocoapods/</guid>
      <description>ちょっと問題を抱えていたcocoapodsをEl Capitanにインストールしました。
以前インストールした時に、ちょっと須藤&amp;amp;ジェム地獄に陥ったので今回は、sudo-less で ~/.gem 内にインストール。
まずは、bashの設定 ~/.bash_profile を弄ります。
# sudo-less Gem export GEM_HOME=$HOME/.gem export PATH=$GEM_HOME/ruby/2.0.0/bin:$PATH  cocoapodsを普通にインストールをすると、activesupportのインストールの所でエラーになります。ルビーのバージョンが低いとのエラーで、色々と方法はあるのですが、ルビー自体を別にインストールするのも今はちょっと避けたかったので、引っかかりのあるパッケージを手動でインストールすることで問題の解決をはかります。（前のバージョンということか、、）
ディレクトリーを作り、--user-installのオプションをつけインストールをします。
$ cd $ mkdir .gem $ gem install activesupport -v 4.2.6 --user-install $ gem install cocoapods --user-install  $ gem install activesupport -v 4.2.6 --user-install Fetching: i18n-0.7.0.gem (100%) Successfully installed i18n-0.7.0 Fetching: thread_safe-0.3.5.gem (100%) Successfully installed thread_safe-0.3.5 Fetching: tzinfo-1.2.2.gem (100%) Successfully installed tzinfo-1.2.2 Fetching: minitest-5.9.0.gem (100%) Successfully installed minitest-5.9.0 Fetching: activesupport-4.2.6.gem (100%) Successfully installed activesupport-4.</description>
    </item>
    
    <item>
      <title>インストール: Homebrew</title>
      <link>https://goozenlab.com/blog/2016/08/install-homebrew/</link>
      <pubDate>Wed, 31 Aug 2016 13:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/install-homebrew/</guid>
      <description>Homebrew のインストール先は、デフォルトでは /usr/local になっています。インストール先をちょっと除いてみると、なーーんか荒らされている感じがある。
$ cd /usr/local/ total 24 drwxr-xr-x 14 jin admin 476B Mar 29 10:51 .git/ drwxr-xr-x 5 jin admin 170B Feb 20 2016 .github/ -rw-r--r-- 1 jin admin 823B Feb 20 2016 .gitignore -rw-r--r-- 1 jin admin 1.3K Feb 20 2016 .travis.yml -rw-r--r-- 1 jin admin 291B Oct 16 2015 .yardopts -rw-r--r-- 1 jin admin 3.1K Jun 1 2015 CODEOFCONDUCT.md drwxr-xr-x 9 jin admin 306B Apr 18 2015 Cellar/ drwxr-xr-x 3 jin admin 102B Nov 11 2015 Frameworks/ -rw-r--r-- 1 jin admin 1.</description>
    </item>
    
    <item>
      <title> 半透明のモーダルビュー</title>
      <link>https://goozenlab.com/blog/2016/08/modalview-over/</link>
      <pubDate>Sun, 28 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/modalview-over/</guid>
      <description>iOS6の頃はなんか面倒だったような気がした、下のViewが透けて見えるようなモーダルビューの設定。非常に簡単にできるようになってました。
半透明のモーダルビュー設定 まずはモーダルビュー自体を半透明化します。背景色を選び透明度を決めます。
それと、StoryboardにてのSegway設定だとなぜかうまく物と、行かないものがありました。あまり深くは掘り下げていませんが、とりあえず情報まで（解決：下記参照）。
二通りあるようですが、厳密な違いはわからず、表示をテストで行うが全く同じに見えます。。
 override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) { if segue.identifier == &amp;quot;toSettingView&amp;quot; { if let destinationVC = segue.destinationViewController as? SettingViewController { destinationVC.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext // UIModalPresentationStyle.OverFullScreen destinationVC.delegate = self } } }  で、色々といじっていたら、インスペクターのPresentationの所でも変更ができます。コードでうまくいかなかった時にはこちらでいけます。知らなかったわ。。。。
見た感じこんな風になります（使わないけど、悪い例）。まぁ想像通り、使うなら文字色とか背景の色とかを考慮する必要がありますわな。
追記：すぐ上の白点ボタンの位置がずれてるな。。。</description>
    </item>
    
    <item>
      <title>StatusBarメモ</title>
      <link>https://goozenlab.com/blog/2016/08/statusbar-memo/</link>
      <pubDate>Fri, 26 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/statusbar-memo/</guid>
      <description>アプリにて、StatusBarを隠す事が多いのだけれど、いつもやり方を忘れるのでメモしておく。
まずは全体的な設定を、info.plistにて View Controller-based status bar appearance を追加。(ここのところがいつも「どれだったっけ？」とわからなくなる。）
info.plistに直接書き込むなら、以下を追加。
&amp;lt;key&amp;gt;UIViewControllerBasedStatusBarAppearance&amp;lt;/key&amp;gt; &amp;lt;false/&amp;gt;  そして、変更したいビューの適当なところ、ViewDidLoad に追加コード。
UIApplication.sharedApplication().statusBarHidden = true  もしくは、オーバーライドしても動くはず。
override func prefersStatusBarHidden() -&amp;gt; Bool { return true }  そして、ステータスバーの文字色、黒文字を白文字に変えるには、statusBarStyleStyleを .LightContent に変更する。
UIApplication.sharedApplication().statusBarStyle = .LightContent  </description>
    </item>
    
    <item>
      <title>StatusBarメモ</title>
      <link>https://goozenlab.com/blog/2016/08/statusbar-memo/</link>
      <pubDate>Fri, 26 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/statusbar-memo/</guid>
      <description>アプリにて、StatusBarを隠す事が多いのだけれど、いつもやり方を忘れるのでメモしておく。
まずは全体的な設定を、info.plistにて View Controller-based status bar appearance を追加。(ここのところがいつも「どれだったっけ？」とわからなくなる。）
info.plistに直接書き込むなら、以下を追加。
&amp;lt;key&amp;gt;UIViewControllerBasedStatusBarAppearance&amp;lt;/key&amp;gt; &amp;lt;false/&amp;gt;  そして、変更したいビューの適当なところ、ViewDidLoad に追加コード。
UIApplication.sharedApplication().statusBarHidden = true  もしくは、オーバーライドしても動くはず。
override func prefersStatusBarHidden() -&amp;gt; Bool { return true }  そして、ステータスバーの文字色、黒文字を白文字に変えるには、statusBarStyleStyleを .LightContent に変更する。
UIApplication.sharedApplication().statusBarStyle = .LightContent  </description>
    </item>
    
    <item>
      <title>Lite VersionとAdmob</title>
      <link>https://goozenlab.com/blog/2016/08/lite-admob/</link>
      <pubDate>Thu, 25 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/lite-admob/</guid>
      <description>Swiftへの移行がちょっと落ち着いてきたので、お次はライトバージョンの制作に移る。同じプロジェクト内でライト版のターゲットをもつ方法で行います。ライト版では広告を表示するため、コード内のマクロで作業の分離を行います。(XCode7.3.1にて)
 ターゲットのコピーと調整 スキームの変更 新しいInfo.plistのリネーム、変更と移動 コンパイル時のマクロ設定 アイコンの追加  が主な作業の流れになります。
まずはプロジェクトのメインターゲットを Duplicate します。
スキーム名の変更はできないようなので、Editボタンの上の＋より、新しいスキームを追加します。ここの、cosper copyのものは＋の横のーボタンで消去します。
Info.plistのコピーの cosper copy-Info.plist はなぜか諸々のファイルのフォルダーの外に作られます。ちょっと面倒ですが、リネームしリファレンスから除き、プロジェクトにコピーして移動、そしていらなくなったファイルを削除をしましょう。
そしてビルドセッティング内のInfo.plistパラメーターをディレクトリー名を含めたファイル名に変更します。
そして、ターゲットの設定をします。（バンドル名やその他必要なもの）
最後に、コンパイル時のマクロ設定をします。#if LITE で処理を分岐できるようにします。LITE_VERSIONでもFREE_VERSIONでもご自分に適したものにしてください。
マクロの設定は、ビルドセティングより、右のサーチボックスから検索していくと良いです。フル・ライト両方のターゲットで設定が必要です。ライトにて LITE=1 を、
フルバージョンの方には LITE=0 を書き込みます。選択すると入力画面が出てきます。
そして、ライトバージョンでは、コンパイラーのカスタムフラグを設定します。
アイコンもライトバージョン用に追加、変更します。アイコンは、Assets.xcassetsより作成し、ターゲットにて設定します。
これで、ライトバージョンのターゲットが完成です。次に、ライトバージョンに広告を入れたいと思います。
AdMobの追加 iAdは終了してしまいましたので、定番Googleの AdMob をインストールします。CocoaPods を使って簡単にプロジェクトに追加することもできるのですが、私の開発機の不思議な不具合でココポッドを設定していません。。ファイルを落としてフレームワークを追加という手動インストールをします。（また、近くCocoaPodsを使った方法をアップデートするかもしれません。とりあえずココポッドでのインストール時には、Podfileに target &#39;xx lite&#39; do ... で切り分ければいいのかな。）
フレームワーク 必要なフレームワークは、以下。
 GoogleMobileAds.framework: Googleサイトよりダウンロード、プロジェクトにコピー (ターゲットをライトバージョンのみにするのを忘れずに）  プロジェクトからターゲットを選択して、一番下のLinked Frameworks and Librariesより追加、コマンド＋クリックで複数選択可能。
 AdSupport AudioToolbox AVFoundation CoreGraphics CoreTelephony EventKit EventKitUI MessageUI StoreKit SystemConfiguration  以上で準備完了。実装していきます。
コーディング マクロを使って、以下の形で処理を分けることができます。</description>
    </item>
    
    <item>
      <title>Lite VersionとAdmob</title>
      <link>https://goozenlab.com/blog/2016/08/lite-admob/</link>
      <pubDate>Thu, 25 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/lite-admob/</guid>
      <description>Swiftへの移行がちょっと落ち着いてきたので、お次はライトバージョンの制作に移る。同じプロジェクト内でライト版のターゲットをもつ方法で行います。ライト版では広告を表示するため、コード内のマクロで作業の分離を行います。(XCode7.3.1にて)
 ターゲットのコピーと調整 スキームの変更 新しいInfo.plistのリネーム、変更と移動 コンパイル時のマクロ設定 アイコンの追加  が主な作業の流れになります。
まずはプロジェクトのメインターゲットを Duplicate します。
スキーム名の変更はできないようなので、Editボタンの上の＋より、新しいスキームを追加します。ここの、cosper copyのものは＋の横のーボタンで消去します。
Info.plistのコピーの cosper copy-Info.plist はなぜか諸々のファイルのフォルダーの外に作られます。ちょっと面倒ですが、リネームしリファレンスから除き、プロジェクトにコピーして移動、そしていらなくなったファイルを削除をしましょう。
そしてビルドセッティング内のInfo.plistパラメーターをディレクトリー名を含めたファイル名に変更します。
そして、ターゲットの設定をします。（バンドル名やその他必要なもの）
最後に、コンパイル時のマクロ設定をします。#if LITE で処理を分岐できるようにします。LITE_VERSIONでもFREE_VERSIONでもご自分に適したものにしてください。
マクロの設定は、ビルドセティングより、右のサーチボックスから検索していくと良いです。フル・ライト両方のターゲットで設定が必要です。ライトにて LITE=1 を、
フルバージョンの方には LITE=0 を書き込みます。選択すると入力画面が出てきます。
そして、ライトバージョンでは、コンパイラーのカスタムフラグを設定します。
アイコンもライトバージョン用に追加、変更します。アイコンは、Assets.xcassetsより作成し、ターゲットにて設定します。
これで、ライトバージョンのターゲットが完成です。次に、ライトバージョンに広告を入れたいと思います。
AdMobの追加 iAdは終了してしまいましたので、定番Googleの AdMob をインストールします。CocoaPods を使って簡単にプロジェクトに追加することもできるのですが、私の開発機の不思議な不具合でココポッドを設定していません。。ファイルを落としてフレームワークを追加という手動インストールをします。（また、近くCocoaPodsを使った方法をアップデートするかもしれません。とりあえずココポッドでのインストール時には、Podfileに target &#39;xx lite&#39; do ... で切り分ければいいのかな。）
フレームワーク 必要なフレームワークは、以下。
 GoogleMobileAds.framework: Googleサイトよりダウンロード、プロジェクトにコピー (ターゲットをライトバージョンのみにするのを忘れずに）  プロジェクトからターゲットを選択して、一番下のLinked Frameworks and Librariesより追加、コマンド＋クリックで複数選択可能。
 AdSupport AudioToolbox AVFoundation CoreGraphics CoreTelephony EventKit EventKitUI MessageUI StoreKit SystemConfiguration  以上で準備完了。実装していきます。
コーディング マクロを使って、以下の形で処理を分けることができます。</description>
    </item>
    
    <item>
      <title>イフレット</title>
      <link>https://goozenlab.com/blog/2016/08/if-let/</link>
      <pubDate>Thu, 18 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/if-let/</guid>
      <description>fatal error: unexpectedly found nil while unwrapping an Optional value
nil値が戻ってくる可能性のある時の処理方法。
tableCellに値を渡す時を例に、
# if let xx = yy { } else { } if let lock = event.isLocked as? Bool { cell.isLocked = lock } else { cell.isLocked = false }  で新しく、guard let なんてのが出てきて、こんな風に書き換える事ができ、（else以降の役割がよくわからない。）
# guard let xx = y else {] guard let lock = event.isLocked as? Bool else { return } cell.isLocked = lock  そしてしかも、簡略した（?：ニル、？：なの）xx = yy ?</description>
    </item>
    
    <item>
      <title>filteredArrayUsingPredicate</title>
      <link>https://goozenlab.com/blog/2016/08/array_filter/</link>
      <pubDate>Thu, 04 Aug 2016 18:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/array_filter/</guid>
      <description>拙作dandoriのswift移行中、中々進みません。
Objective-Cで使っていた、filteredArrayUsingPredicate が Swiftでは簡略化。.filterメソッドを使い、ブロックで処理を書き込みます。。。
ブロック表記が出てくると目が点になってしまう私。。。
以下 Objective-C での表記
NSArray *myTasks = [[NSArray alloc] initWithArray:[event.tasks allObjects]]; NSPredicate *hotPredicate = [NSPredicate predicateWithFormat:@&amp;quot;isRedHot == YES&amp;quot;]; NSArray *filteredArray = [myTasks filteredArrayUsingPredicate:hotPredicate]; return [filteredArray count] &amp;gt; 0;  Swiftで書き上げにはブロック内に(user: UserDetails) -&amp;gt; Bool in で書き込む方法もあり試すもエラーがでる。。あーーー、ブロック、、意味わからん。。。しかし、救いの神のNSPredicateを使った場合は以下、随分スッキリします。（こっちの方が全然良いわ。。 $0.isRedHot = &amp;quot;YES&amp;quot; 何じゃかんじゃより。。）書き上げるとこんな感じ。
let myTasks = tasks?.allObjects let predicate = NSPredicate(format: &amp;quot;isRedHot == YES&amp;quot;) let filteredArray = myTasks?.filter( { predicate.evaluateWithObject($0) } ) return filteredArray!.count &amp;gt; 0  </description>
    </item>
    
    <item>
      <title>filteredArrayUsingPredicate</title>
      <link>https://goozenlab.com/blog/2016/08/array_filter/</link>
      <pubDate>Thu, 04 Aug 2016 18:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/08/array_filter/</guid>
      <description>拙作dandoriのswift移行中、中々進みません。
Objective-Cで使っていた、filteredArrayUsingPredicate が Swiftでは簡略化。.filterメソッドを使い、ブロックで処理を書き込みます。。。
ブロック表記が出てくると目が点になってしまう私。。。
以下 Objective-C での表記
NSArray *myTasks = [[NSArray alloc] initWithArray:[event.tasks allObjects]]; NSPredicate *hotPredicate = [NSPredicate predicateWithFormat:@&amp;quot;isRedHot == YES&amp;quot;]; NSArray *filteredArray = [myTasks filteredArrayUsingPredicate:hotPredicate]; return [filteredArray count] &amp;gt; 0;  Swiftで書き上げにはブロック内に(user: UserDetails) -&amp;gt; Bool in で書き込む方法もあり試すもエラーがでる。。あーーー、ブロック、、意味わからん。。。しかし、救いの神のNSPredicateを使った場合は以下、随分スッキリします。（こっちの方が全然良いわ。。 $0.isRedHot = &amp;quot;YES&amp;quot; 何じゃかんじゃより。。）書き上げるとこんな感じ。
let myTasks = tasks?.allObjects let predicate = NSPredicate(format: &amp;quot;isRedHot == YES&amp;quot;) let filteredArray = myTasks?.filter( { predicate.evaluateWithObject($0) } ) return filteredArray!.count &amp;gt; 0  </description>
    </item>
    
    <item>
      <title>乱数を発生させる</title>
      <link>https://goozenlab.com/blog/2016/03/arc4random_uniform/</link>
      <pubDate>Fri, 18 Mar 2016 11:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2016/03/arc4random_uniform/</guid>
      <description> rand() 今まではrand()使い、srand()にて乱数の初期化をし数値を得ていた。
 srand(time(nil)); rand()%300;  arc4random_uniform() 上記の形だとSwift時にエラーが出る為、乱数の初期化が不要な物に変更し以下の形に落ち着く。
 Int(arc4random_uniform(300))  </description>
    </item>
    
    <item>
      <title>iOS 9.0.1</title>
      <link>https://goozenlab.com/blog/2015/09/ios901/</link>
      <pubDate>Fri, 25 Sep 2015 06:30:00 +0800</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/09/ios901/</guid>
      <description>未だ実機にはiOS9を入れる事にためらいを感じているさなか、早くも9.0.1がリリースされる。
修正点の中でも気になるのは、
 アラームやタイマーが鳴らないことがある問題を修正  これが、拙作のサティで問題になっている音が出ない問題の解決になっていることをちょっと期待。</description>
    </item>
    
    <item>
      <title>XCode7とElCapitan</title>
      <link>https://goozenlab.com/blog/2015/09/xcode7-elcapitan/</link>
      <pubDate>Thu, 24 Sep 2015 13:30:00 +0800</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/09/xcode7-elcapitan/</guid>
      <description>アプリの不具合がレポートされ、今更ながら、iOS9向けの開発環境を整える事にする。
まず、取り急ぎ実機での検証は先回しにして、シミュレータでの検証のため、SSDの領域を削りElCapitan/XCode7をインストールする。（色々あったが割愛する。）
メインのマシーンが昨年からスペックダウンしてMBA11.2014/4GB.128SSDとなり、かなりタイトな環境。XCode7をインストールしてちょっと使ってみるが、、、、もっさり感と引っかかりが出始める、、 うぅ～～～、レイアウトも崩れているし、、バグもそれなりにありそう。。（溜息）</description>
    </item>
    
    <item>
      <title>iOS9での不具合：Satiの通知音</title>
      <link>https://goozenlab.com/blog/2015/09/ios9-bug-notifications/</link>
      <pubDate>Wed, 23 Sep 2015 15:30:00 +0800</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/09/ios9-bug-notifications/</guid>
      <description>マインドフルな瞑想アプリのサティ、ユーザーの方からiOS9にアップデート以降、音が出なくなったとの報告を受けました。
iOS8がリリースされた時にも、通知で音を出すには事前認証が必須になり、認証のプロセスを追加していなかったので、新規ユーザーの人たちには音が出ないという致命的なバグがありました。OSをアップデートしたインストール済のユーザーには不具合は無かったので、３ヶ月くらい放置していました。
そして、今回もappleの新しい省電力モードや通知機能の拡張により（多分）、同様の不具合が発生。
自分の検証端末がiPhone4S/iOS8.1のため、iOS9へのアップデートはちょっと悩んでいて、、 しかも、開発環境は未だマーベリックスを使っているため、iOS9向けの開発環境が未だ整っていない状態です。 iOS9自体はブラッシュアップ的なアプデートだと認識していたので、まぁ、大丈夫だろうとたかを括ってました。
ネットでちょっと調べて見た所、似たような現象が起こっているのを幾つか発見しました。音の出ない瞑想タイマーではまるっきり体をなさないので、環境を整えて、なるべく速くアップデートしたいと思います。
何か他にも不具合等が起こりましたら、連絡のほどよろしくお願いします。
では、ロシアより愛を込めて、</description>
    </item>
    
    <item>
      <title>iOS9にて気になる機能の3DTouch</title>
      <link>https://goozenlab.com/blog/2015/09/3dtouch/</link>
      <pubDate>Sun, 20 Sep 2015 09:30:00 +0800</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/09/3dtouch/</guid>
      <description>iOS9にて操作動作が、強押し、さらに押込押しと深みが出る。 アップルの使い方のガイドラインではピーク＆ポップという形。 その対象に対しての関心の度合いを操作にしたいう感じ。
自分のアプリで使っている長押しと被るような感じがあるのだが、どう追加して行くか考えている。
例）リトリスト（todoアプリ）にて、
メニューバーの長押しでリストからホットリスト（重要項目のリスト）に移動するようになっている。 これは、強押しで重要項目の表示、さらに押して移動という形にできる。
：おまけ：
自分の検証端末はいまだに iPhone4S （自分の中ではデザイン的に理想の携帯。母から契約終了端末を引き継ぐ）。iPhone6Sは機能的には惹かれるが、どうもハードのデザインに魅力を感じない。次のiphone7でフルモデルチェンジを期待。
バイカル湖、オリフォン島 </description>
    </item>
    
    <item>
      <title>NSUserDefaultsのキーの削除</title>
      <link>https://goozenlab.com/blog/2015/07/userdefaults-remove-keys/</link>
      <pubDate>Mon, 27 Jul 2015 18:30:00 +0500</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/07/userdefaults-remove-keys/</guid>
      <description>アップデートをするたびに名前を変更したり、増えたり、減ったりしてグジャグジャになってしまう UserDefaults。私だけでは無いはず。。
既に設定してしまったUserDefaultsのキーを削除する方法は以下
[NSUserDefaults standardUserDefaults] removeObjectForKey:@&amp;quot;kFontName&amp;quot;]  アップデート時に実行させれば奇麗なままのUserDefaultを維持する事ができます。</description>
    </item>
    
    <item>
      <title>midXで中心を求める</title>
      <link>https://goozenlab.com/blog/2015/07/midx-swift/</link>
      <pubDate>Sat, 11 Jul 2015 09:30:00 +0600</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/07/midx-swift/</guid>
      <description>今までは中心を求めるのに素直に、
let center: CGFloat = self.frame.width / 2  と行ってきたけれども、.midX/midY
let center: CGFloat = self.frame.midX  とスマート、かつ格好良くできます。</description>
    </item>
    
    <item>
      <title>テーブルビューセルの境界線を消す</title>
      <link>https://goozenlab.com/blog/2015/04/tableview-separator/</link>
      <pubDate>Mon, 06 Apr 2015 19:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/04/tableview-separator/</guid>
      <description>テーブルビューセルの境界線を消すには下記のコードを追加。
self.tableView.separatorStyle = UITableViewCellSeparatorStyle.None  StoryBoardを使っている時は以下。</description>
    </item>
    
    <item>
      <title>ShakeはUIEventで</title>
      <link>https://goozenlab.com/blog/2015/03/swift-shake/</link>
      <pubDate>Fri, 27 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/swift-shake/</guid>
      <description>色々と書き込んでいたシェイクの判別はUIEventを使うようになります。 えらく簡単になりました。
 override func viewDidAppear(animated: Bool) { super.viewDidAppear(animated) self.becomeFirstResponder() } override func canBecomeFirstResponder() -&amp;gt; Bool { return true } override func motionEnded(motion: UIEventSubtype, withEvent event: UIEvent!) { if(event.subtype == UIEventSubtype.MotionShake) { // // 処理 // } }  ※まぁ、間違っちゃーいね〜な。。</description>
    </item>
    
    <item>
      <title>performSelectorは無くなる</title>
      <link>https://goozenlab.com/blog/2015/03/performselector-timer/</link>
      <pubDate>Thu, 26 Mar 2015 10:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/performselector-timer/</guid>
      <description>ほぼ全ての拙作のアプリでは、テーブルセルでのバーの色変更タップとアップデートは時間差を使って行っています。
[NSObject cancelPreviousPerformRequestsWithTarget:self selector:@selector(notifiyUpdate) object:nil]; [self performSelector:@selector(notifiyUpdate) withObject:nil afterDelay:kUpdateCellShortInterval];  object-cで上記に書かれたperformSelectorはSwiftでは無くなってしまったようなので、以下のコードでは動かない。
 NSObject.cancelPreviousPerformRequestsWithTarget(self, selector: notify, object: nil) NSObject.performSelector(notify, withObject: self, afterDelay: Interval.UpdateCell)  幾つかの方法があるようですが、タイマーを使った方法が簡易でよいのですが、cancelPreviousPerformRequestsWithTargetが無用になってしまう。処理の事前キャンセルも必要があるので、少し修正して最終的には以下のようになる。
private var tapTimer: NSTimer? // 処理 cancelTimer() tapTimer = NSTimer.scheduledTimerWithTimeInterval(Interval.UpdateCell, target: self, selector: notify, userInfo: nil, repeats: false) // func cancelTimer() { if tappingTimer != nil { tappingTimer!.invalidate() } }  </description>
    </item>
    
    <item>
      <title>printlnは気楽</title>
      <link>https://goozenlab.com/blog/2015/03/println-swift/</link>
      <pubDate>Wed, 25 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/println-swift/</guid>
      <description>NSLogはまだ使えるようですが、swiftではprintln をログの書出しに使います。NSLogだとよく使っていた、 __PRETTY_FUNCTION__ は
Swift では __FILE__, __FUNCTION__, __LINE__ and __COLUMN__ のようになります。 使えそうなのは
 __FILE__ ：ファイル名 __LINE__ ：ライン番号 __FUNCTION__ ：ファンクション名  そして、値を表示したい時はそのままかそのままか\(...)で囲み適当に放り込む。もはや%dや%@は必要ないらしい。 小賢しいウォーニングも出なくなる。
println(__FUNCTION__, self.frame) println(__FUNCTION__,&amp;quot;screen is \(self.frame)&amp;quot;)  戻りは以下
(function, (0.0,706.0,414.0,30.0)) (function, screen is (0.0,706.0,414.0,30.0))  Swift Programming Language に書いてあるらしいので読むべ。</description>
    </item>
    
    <item>
      <title>NSDate() = [NSDate date]</title>
      <link>https://goozenlab.com/blog/2015/03/nsdate-swift/</link>
      <pubDate>Tue, 24 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/nsdate-swift/</guid>
      <description>NSDateでの [NSDate date] はシンプルにイニシャライザーに統合され？、Swiftでは
NSDate()  でよろしい。
[NSDate dateWithTimeIntervalSinceNow:hoursGoodSleep * 60 * 60]  を、Swiftで書いてみると、
NSDate(timeIntervalSinceNow: hoursGoodSleep * 60 * 60)  エラーが出る。hoursGoodSleep は Float だし抜かりは無いような、、、
正しくは、Doubleでエラーは消える。こうゆう所は割と厳しいのね。。</description>
    </item>
    
    <item>
      <title>ビューサイクルとアプリ復帰時の処理</title>
      <link>https://goozenlab.com/blog/2015/03/view-cycle/</link>
      <pubDate>Sat, 21 Mar 2015 12:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/view-cycle/</guid>
      <description> たまに、何処に何の処理を入れれば良いか分からなくなるので、簡単にまとめる。
起動時 アプリの起動時には以下の順で呼ばれる。
 viewDidLoad() viewWillAppear viewDidAppear　※すべての画像の処理が終わった後に呼ばれる。あまり使っていない。  モーダルビューより復帰 モーダルビューより戻ってくると以下の処理が再び呼ばれる。
 viewWillAppear viewDidAppear  ロック・スリープからの復帰時 ロック・スリープからの復帰は処理が行われない（厳密には、AppDelegate内では呼ばれる）ので、アプリの戻ってきた時の処理を追加する。 viewDidLoadに通知の設定する事で可能になる。Setting.bundleでフォントの設定等を変更し、アプリに戻ってきた時に使う。
// Notification Center let app: UIApplication = UIApplication.sharedApplication() NSNotificationCenter.defaultCenter().addObserver(self, selector: &amp;quot;applicationWillEnterForeground:&amp;quot;, name: UIApplicationWillEnterForegroundNotification, object: app)  と処理を追加する。
func applicationWillEnterForeground(notification: NSNotification) { println(__FUNCTION__) }  スリープに移行時 逆にスリープに入る時には復帰時と同じで、ApplicationWillEnterForeground の代わりに ApplicationDidEnterBackground を使えば良い。
 NSNotificationCenter.defaultCenter().addObserver(self, selector: &amp;quot;applicationDidEnterBackground:&amp;quot;, name: UIApplicationDidEnterBackgroundNotification, object: app)  </description>
    </item>
    
    <item>
      <title>NotificationSettings認証設定</title>
      <link>https://goozenlab.com/blog/2015/03/notification-setting/</link>
      <pubDate>Sat, 21 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/notification-setting/</guid>
      <description>iOS8になりアプリケーションバッジや音等、ユーザーの認証が必要になっています。
AppDelegateに処理を入れてしまいます。
 application.registerUserNotificationSettings(UIUserNotificationSettings( forTypes: UIUserNotificationType.Sound | UIUserNotificationType.Alert | UIUserNotificationType.Badge, categories: nil))  以前コピペでUIUserNotificationType.Soundを付け忘れ長い事音が鳴らないソフトになっていた事があるので、ちょっと注意して必要なものだけ入れるようにしてます。（必要なくても全部入れても良いのだけども。。。）</description>
    </item>
    
    <item>
      <title>クラスが読み込めず [解決]</title>
      <link>https://goozenlab.com/blog/2015/03/load-managedobject/</link>
      <pubDate>Fri, 20 Mar 2015 10:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/load-managedobject/</guid>
      <description>もう、わざわざ動いている物をSwiftに移行するのも止めてしまおうか。どうせならAndroidに移植する方がまだよいか、、と思ってしまうほどでしたが、クラスが読み込めずで書いた問題が解決しました。
問題のエラーログ
CoreData: warning: Unable to load class named &#39;Item&#39; for entity &#39;Item&#39;. Class not found, using default NSManagedObject instead.  もしかしたらXcode6.2では問題でなくなっているかもしれませんが、とりあえず解決方法は以下。
 xcdatamodeldファイルを選択 CONFIGURATIONSを選択 右に出てくるEntitiies以下のClass名をディレクトリー名.Entity名にする  ※ 注意点は上記の場合kitchen.Itemでは無くtapas.Itemと、xcdatamodeld名では無く、ディレクトリ名を入れる事。見事にハマりました。
（散歩中に「もしや、ディレクトリー名では。。」と閃きました。なんでわざわざkitchen.xcdatamodeldという名前にしているのかは、自分で作ったのに不明。なんで余計な事をする？と自分に問い詰めたい。。）
うまく行かない場合  キャッシュをクリアーする DerivedDataのデーターを消す 新しいプロジェクトを作って、Modelを移行して試す  ※ 使っていたプロジェクトのままで動いた場合と（tapas)、キャッシュやDerivedDataのデーターを抜いてもうまく行かず、新しいプロジェクトを作り直してうまく行く場合がありました（ohaYo)。
蛇足：ネットでぱっと見て試すもうまく行かず、後で読み返すとその注意点が書いてあったりします。 小学校の通信簿に「少し聞いただけで、全部理解したと思ってしまうところがあります。もう少しじっくりと。（やれどーだこーだ）。」書いてあった事をふと思い出す。</description>
    </item>
    
    <item>
      <title>NSLocalizedString on swift</title>
      <link>https://goozenlab.com/blog/2015/03/nslocalizedstring-swift/</link>
      <pubDate>Thu, 19 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/nslocalizedstring-swift/</guid>
      <description>NSLocalizedStringでエラーがでる
NSLocalizedString(&amp;quot;Timer&amp;quot;, comment: nil)  nilを&amp;quot;&amp;quot;空白に変更する。
NSLocalizedString(&amp;quot;NavigationBar.Button.Timer&amp;quot;, comment: &amp;quot;&amp;quot;)  Swiftではnilの扱いがちょっと掴めず、、至る所で問題になってる。。
ついでに中に入れる文言をかえる。以前は普通に&amp;quot;Timer&amp;quot;と書いていたところを今回からはドコゾの何某か分かるように&amp;quot;NavigationBar.Button.Timer&amp;quot;と少し詳しく書き込むようにする。</description>
    </item>
    
    <item>
      <title>delegate on swift</title>
      <link>https://goozenlab.com/blog/2015/03/delegate-swift/</link>
      <pubDate>Wed, 18 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/delegate-swift/</guid>
      <description>デレゲートするクラス 以下の３つを書き加えればよい。
protocol MainHeaderViewDelegate { func sleepingTimerDidFinish(controller: MainHeaderView) }  var delegate:MainHeaderViewDelegate? = nil   self.delegate!.sleepingTimerDidFinish(self)  デレゲートで値を受け取るクラス MainHeaderViewDelegate と、functionを追加、処理を書き込みます。
class MainViewController: UIViewController, MainHeaderViewDelegate { ////// func sleepingTimerDidFinish(controller: MainHeaderView) { // 処理 } ///// }  ※ ソースは拙作のohayoからコピペ。</description>
    </item>
    
    <item>
      <title>UIButttonをSwiftで書く</title>
      <link>https://goozenlab.com/blog/2015/03/uibutton-swift/</link>
      <pubDate>Tue, 17 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/uibutton-swift/</guid>
      <description>UIButttonをSwiftでプログラム的に書くと
buttonMoodExecelent = UIButton.buttonWithType(UIButtonType.Custom) as UIButton buttonMoodExecelent.frame = CGRect(x: 0, y: 0, width: 30, height: 30) buttonMoodExecelent.tag = TagButtonMood.Execelent buttonMoodExecelent.addTarget(self, action: &amp;quot;selectedMood:&amp;quot;, forControlEvents: .TouchUpInside) buttonMoodExecelent.setBackgroundImage(UIImage(named: &amp;quot;MoodExecelent&amp;quot;), forState: UIControlState.Normal) self.vew.addSubview(buttonMoodExecelent)  テキストタイトルの時には
buttonCancel.setTitle(&amp;quot;cancel&amp;quot;, forState: UIControlState.Normal)  テキストの色を変えるには、
buttonCancel.setTitleColor(UIColor.redColor(), forState: .Normal)  もっと細かく、フォント等も弄りたい時には、
setAttributedTitle:forStateを使うとさ。
※ ソースは拙作のohayoからコピペ。</description>
    </item>
    
    <item>
      <title>SwiftでConstantを扱う</title>
      <link>https://goozenlab.com/blog/2015/03/constants-swift/</link>
      <pubDate>Sat, 14 Mar 2015 09:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/constants-swift/</guid>
      <description>Swiftへの移行はスタンフォードの講義を聞きつつ進めたいところなのですが、ここネパールだとちょっと無理。 ネットでの情報も増えつつはあるように思えるが、まだまだな感じ。。
分からないことが多々あるが、進めていかないと、、
さて、これが正しい方法なのかは分からないけれども（一抹の不安があるが。。）、コンスタンツの扱いをSwiftにて行うには以下のようにしてます。
// // LocalConstants.swift // import Foundation import UIKit let ONE_DAY = 86400 struct UDKey { static let DisplayColorMode = &amp;quot;color_mode&amp;quot; } struct Default { static let ColorMode = &amp;quot;kawaii&amp;quot; }  で、他からのアクセスは
defaults.setValue(Default.ColorMode, forKey: UDKey.DisplayColorMode)  のようにしています。
※ Swiftでのenumが掴めない。意味が分からない。
追記 (3&amp;frasl;22)：import UIKitを追加する。</description>
    </item>
    
    <item>
      <title>クラスが読み込めず</title>
      <link>https://goozenlab.com/blog/2015/03/unable-to-load-class/</link>
      <pubDate>Thu, 12 Mar 2015 16:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/unable-to-load-class/</guid>
      <description>TapasをSwiftに移行中です。一番癖の無いアプリという事で白羽の矢があたりましたが、、、ブログに引っかかったところ等アップしていきたいと思ってます。
さて、さて、まずは、
2015-03-11 16:23:14.627 tapas[9910:539155] CoreData: warning: Unable to load class named &#39;Item&#39; for entity &#39;Item&#39;. Class not found, using default NSManagedObject instead.  というエラーがでる。ファイルはあるのだが、、
これは、動く。
func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) { let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as NSManagedObject var cell = cell as ListViewCell cell.textLabel?.text = item.valueForKey(&amp;quot;name&amp;quot;)!.description }  で、動かなーーーーい。。。
func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) { let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as Item var cell = cell as ListViewCell cell.</description>
    </item>
    
    <item>
      <title>UserDefaultの初期値設定</title>
      <link>https://goozenlab.com/blog/2015/03/userdefault-register-defaults/</link>
      <pubDate>Sun, 08 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/userdefault-register-defaults/</guid>
      <description>AppDelegateで行なう処理の一つのUserDefaultの初期値設定をSwiftにて。
 // UserDefault Initial values var userDefaultsDefaults = NSMutableDictionary() userDefaultsDefaults.setValue(&amp;quot;String&amp;quot;, forKey: KEY_SETTING) userDefaultsDefaults.setValue(50, forKey: KEY_SETTING2) NSUserDefaults.standardUserDefaults().registerDefaults(userDefaultsDefaults)  数値も文字も気にせず書き込んでよいようです。
ポカラの水汲み場</description>
    </item>
    
    <item>
      <title>ライトウェイト マイグレーションでのアトリビュートの名称変更</title>
      <link>https://goozenlab.com/blog/2015/03/lightweight-migration-mapping/</link>
      <pubDate>Mon, 02 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/03/lightweight-migration-mapping/</guid>
      <description>タイトルが長げーーーーーーな。。
さて、lightweight migration での移行で、アトリビュートの名前の変更がうまく行かないときは、マッピングがうまく機能していないのが原因です。（だとおもいます。）
そんなときは、マッピングファイルを作成して、
ファイルを訂正、追加して（source, destinationに注意）
あとは、optionsの設定を加え、
NSDictionary *options = @{NSMigratePersistentStoresAutomaticallyOption: @(YES), NSInferMappingModelAutomaticallyOption: @(YES)}  if (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeURL options:options error:&amp;amp;error]) { # options:nil の箇所を options:options に変更  通常通り処理を行えば、うまく行きます。
- (NSPersistentStoreCoordinator *)persistentStoreCoordinator { // The persistent store coordinator for the application. This implementation creates and return a coordinator, having added the store for the application to it. if (_persistentStoreCoordinator != nil) { return _persistentStoreCoordinator; } // Create the coordinator and store _persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:[self managedObjectModel]]; NSURL *storeURL = [[self applicationDocumentsDirectory] URLByAppendingPathComponent:@&amp;quot;Littlist.</description>
    </item>
    
    <item>
      <title>ニブレスプロジェクト</title>
      <link>https://goozenlab.com/blog/2015/02/xibless-project/</link>
      <pubDate>Thu, 26 Feb 2015 07:25:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/02/xibless-project/</guid>
      <description>swiftに移行中です。折角なのでなるべく奇麗にやり直したい、ずる無しでシンプルに仕上げたい。
ストーリーボードにはどうも馴染めず、結局中途半端にViewのコンポーネントをコードで書き込んだりする事になりそうなので、最初から何もなし状態から始めた方が良いと、、
 まずは storyboard/xib 無しテーブルビューベースのプロジェクト、MasterViewController (UITableViewController) がMainViewController です。  func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&amp;gt; Bool { // Override point for customization after application launch. self.window = UIWindow(frame: UIScreen.mainScreen().bounds) let masterViewController: MasterViewController = MasterViewController() masterViewController.managedObjectContext = self.managedObjectContext let navigationController = UINavigationController(rootViewController: masterViewController) self.window!.rootViewController = navigationController self.window!.makeKeyAndVisible() return true }   お次ぎは、storyboard/xib 無しビューコントローラーベースのプロジェクト、MainViewController (UIViewController) が文字通り MainViewController です。  、、が、、、、色々コンポーネントを追加していけば行くほど、アラートが上がってくる。。。（試行錯誤中）
func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&amp;gt; Bool { // Override point for customization after application launch.</description>
    </item>
    
    <item>
      <title>Reminder：日時の書き込み</title>
      <link>https://goozenlab.com/blog/2015/02/reminder-duedatecomponents/</link>
      <pubDate>Mon, 23 Feb 2015 06:50:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/02/reminder-duedatecomponents/</guid>
      <description>リマインダーへの日時の書き込み
読み込み時には
event.dueDate = eventToRead.dueDateComponents.date; event.timeZone = eventToRead.dueDateComponents.timeZone;  と、あっさりと行くのですが、.dueDateComponents.date は readonly で書き込み時には日時をバラバラにしてまとめて書き込みます。
 NSCalendar *gregorian = [[NSCalendar alloc] initWithCalendarIdentifier:NSGregorianCalendar]; unsigned unitFlags= NSYearCalendarUnit|NSMonthCalendarUnit | NSDayCalendarUnit | NSHourCalendarUnit | NSMinuteCalendarUnit | NSSecondCalendarUnit |NSTimeZoneCalendarUnit; NSDateComponents *dailyComponents=[gregorian components:unitFlags fromDate:eventToExport.dueDate]; eventToWrite.dueDateComponents = dailyComponents; eventToWrite.timeZone = eventToExport.timeZone;  </description>
    </item>
    
    <item>
      <title>Reminderからの読込ではまる</title>
      <link>https://goozenlab.com/blog/2015/02/reminder-completion/</link>
      <pubDate>Sun, 22 Feb 2015 23:47:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>https://goozenlab.com/blog/2015/02/reminder-completion/</guid>
      <description>ここ数日 littlist.2.6.5にReminderへの書込み・取込みの機能の追加作業をしていました。
見事にハマったのが、取込みの
- (id)fetchRemindersMatchingPredicate:(NSPredicate *)predicate completion:(void (^)(NSArray *reminders))  でのブロック処理。 完了時にリマインダーのリストが所得でき、そのリストをセーブすれば簡単なはず、、なのが、、なぜがしっかりと保存されていない。中途半端にブロックから出てきている模様。
いろいろと試し、ネットで探したところ、見つかりました。
 // 事前に calendar の設定等をして、 __block NSArray *remindersToImport = nil; __block BOOL fetching = YES; NSPredicate *predicate = [eventStore predicateForRemindersInCalendars:@[calendar]]; [eventStore fetchRemindersMatchingPredicate:predicate completion:^(NSArray *ekReminders) { LOG_METHOD; remindersToImport = ekReminders; fetching = NO; }]; while (fetching) { [[NSRunLoop currentRunLoop] runUntilDate:[NSDate dateWithTimeIntervalSinceNow:0.05]]; } // 作業がつづく  と、while の所で、処理が終わるまで一服させ、作業を続ける形です。（何のためのブロック処理なのか意味が分かりませんし、こういうのはバグというのでは？？）</description>
    </item>
    
  </channel>
</rss>