<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open on goozenlab</title>
    <link>http://goozenlab.com/categories/open/</link>
    <description>Recent content in Open on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Thu, 25 May 2017 14:30:00 +0700</lastBuildDate>
    
	<atom:link href="http://goozenlab.com/categories/open/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>tapasを公開</title>
      <link>http://goozenlab.com/blog/2017/05/open-tapas/</link>
      <pubDate>Thu, 25 May 2017 14:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2017/05/open-tapas/</guid>
      <description></description>
    </item>
    
    <item>
      <title>(a)を公開</title>
      <link>http://goozenlab.com/blog/2016/11/open-a/</link>
      <pubDate>Tue, 29 Nov 2016 14:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/11/open-a/</guid>
      <description>手を入れたいところは多々あるのですが、(a)をギットハブに公開しました。
ビルドをするには、CocoaPodのインストールと、ドロップボックスのアプキーの入手が必要になります。 現在アプストアーに上がっているものと同じものですので、ちゃんと動くはずです。
リクエストや不具合、こうした方が良いなどのアドバイスなどありましたら、Issueに書き込んでください。</description>
    </item>
    
    <item>
      <title>プラナティスを公開</title>
      <link>http://goozenlab.com/blog/2016/11/open-pranatice/</link>
      <pubDate>Sun, 27 Nov 2016 07:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/11/open-pranatice/</guid>
      <description>カルマヨガシリーズ第二弾のプラナティスをギットハブにソースコードを公開しました。ちょっとまとまりがなく、やけっぱちなSiwft3のソースコードですが、オープンソース化します。
音声の細かい調整や、文言の変更などをしたい方は、ぜひダウンロード・ビルドして使って見てください。</description>
    </item>
    
    <item>
      <title>リスタリアを公開</title>
      <link>http://goozenlab.com/blog/2016/09/open-listaria/</link>
      <pubDate>Thu, 15 Sep 2016 07:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/open-listaria/</guid>
      <description>買物リストアプリのリトリストを、久しぶりのアップデートと共に、ギットハブに公開しました。
アプリは最近はほとんどが外食の毎日のため、使用機会がほとんどなく、アップデートも３年前を最後に放置状態。ちょうど先日アップルから30日以内に新しいバージョンを上げないとアップルストアーから消しますよとのメールが届いたのを機に、このままお蔵入りにしてしまおうと思ってました。
しかし折角作ったものですから、ブログをホストしてもらっているギットハブに恩返しとして公開しようと思うようになり。予定になかったのですが、急遽Swiftに移行作業をしました。
ちょっとビギナー感満載のソースコードではありますが、、、デザインや機能など、バランスの取れているアプリだと思います。
簡単なソフトです。プログラムの基本的な所はわりと網羅していますし、これからiOS開発を勉強する方々には、ちょっと落として中のコードを見たり、いじったりするにも良いかなと、、（私の勉強方法）割と良い教材になるのではと、思ってます。
良いアイディアがあったら、どしどしコメントのほど、
ぼやき：今日の夕方の飛行機で日本に一時帰国をするんですが、なんか気が重い。。</description>
    </item>
    
    <item>
      <title>サティを公開</title>
      <link>http://goozenlab.com/blog/2016/09/open-sati/</link>
      <pubDate>Tue, 06 Sep 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/open-sati/</guid>
      <description>簡単な履歴機能などがついた瞑想タイマーアプリ、サティをギットハブに公開 Link @ github しました。ということは、恥ずかしながらオープンソースにしたということです。ライセンスは無難に、MITライセンスにしました。
プログラマーでない独学万年日曜プログラマーが作ったアプリなので、ある意味、初心者の方には読みやすいコードになっていると思います。別の言い方ですと、幼稚なコードとも言えます。。
XCodeも無償で提供されてますし、XCode7より、実機へのインストールもAppleIDがあれば、有料のプログラムに登録しないでもできるようになりました。 自分に必要なものを自分の思うように作って使うという環境がもう既に整っています。
これからアプリを作ってみたいと思っている人たちへの最初の数歩のお役に立てればと思って公開に踏み切りました。
細かいコードや製作時に考えたことなどについて少しづつ書いてまとめたいと思ってます。
とりあえず新しく
 メモ追加欄を瞑想終了後のムード選択欄に追加 履歴ページにて、瞑想追加ボタンとビュー 設定画面のスタティックビュー化  が先追加したいことのリスト。タイミングを見て追加作成したいと思います。
※公開の方法などはこちらにて書きましたので関心のある方は参照のほど。</description>
    </item>
    
    <item>
      <title>ギットハブ公開</title>
      <link>http://goozenlab.com/blog/2016/09/github-open-sati/</link>
      <pubDate>Tue, 06 Sep 2016 07:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/github-open-sati/</guid>
      <description>ギットハブ公開に向けて行ったこと。XCodeでのプロジェクト設定とこれからの管理について。
 問題点：ギットハブに公開するプロジェクトには、バンドルアイデンティファイヤ、AppleIDを入れたくない。そして、アプストアーに公開するにはコードサインをしなくてはいけない。（アイデンティファイヤ、AppleIDが必要） 解決案：二つのプロジェクトと共有コードの形での運用  一つ目のプロジェクトは、作業用。ギットハブと連動して作業をします。個人情報入れないでも、シミュレーターでアプリを動かすことができます。
もう一つは、アプストアービルド、デプロイ用。プロジェクトファイル以外は、上のプロジェクトからファイルをリンクします。（コピーではなく、シンボリックリンクにみたいなもの？）このプロジェクトには、アプストアーに登録するための情報を入れておきます。ギットは使いません。
作業 サティを公開するための行った作業をちょっと詳しく。まずは今まで作業していたフォルダーを一気にコピー。
一つを、open.sati (公開用） もう一つを sati (デプロイ用）にします。
ともにフレッシュスタートということで、ディレクトリー内にある .git　ディレクトリーを削除します。隠れファイルなので、ターミナルから rm -rf .git/。
sati：アプストアー、実機検証用 satiの中のファイルはフロジェクトファイル、info.plist以外、全て捨ててしまいます。
プロジェクト内は真っ赤になります。一気に消してしまいます。
そして、open.sati のフォルダーからファイルをまとめてドラッグ＆ドロップ。ダイアリグが出ます。コピーのチェックは外します。
残念ながら、Localizable.strings がうまく引き継がれません。（多分ローカライズされたnibファイルなども引き継がれないと思います。）コマンドオプション＋ドラッグのエイリアスでファイルを持ってくるもNG。しかし、XCode上でファイルを一旦 open.sati よりコピーして消し、ターミナルで リンクを ln -s でリンクしてあげれば読み込みます。なんか中途半端ですが動きます。ディレクトリーはこんな感じになります。
そして、README や LICENCE 等、ターゲットに入れないファイルをメンバーから外します。
で、ビルドの設定などは引き継がれたままなので実機でもアプストア用のビルドなども今まで通り動きました。（アップロードはしていませんが、多分大丈夫だと思います。）
こちらのプロジェクトでは、ファイルをいじらないようにします。あくまでも、ビルドと実機テストようにします。
open.sati：ギットハブ、作業用 まずプロジェクトファイルを開けて、公開したくないものを抜きます。そして、リンクしているファイルがないかチェック。（私は、ビルド時にローカルからのファイルを参照しているところがあるので、その設定も抜きます。デプロイ用についていれば問題はない。） 幾つかのファイルは他のアプリと共有しているので、こっちのプロジェクトにコピーをします。
一通りチェックを終えたら、シミュレーターで動くかチェックします。
これで、作業はギットハブのプロジェクトで行う。ギットハブと共有しているプロジェクトでもシミュレーターで動かせることができ、検証機で動かしたい時とアプストアーにアップする時は別のプロジェクトですれば良い。デプロイ用はほとんど手を入れる必要はない、はず。
そして、公開します。
追記： READMEとライセンスはプロジェクトと同じ階層に置いておきましょう。ギットハブではそのREADが読み込まれ表示されます。
ギットハブに公開 公開をするには、ギットハブに載っている方法で行います。
まずはギットの初期化、その後、ファイルを追加して、コミットします。（ちょっとREADMEに何を書けばいいか悩みましたが、）９月６日のくろ～の日に公開。
duvel:open.sati jin$ git init duvel:open.sati jin$ git add . duvel:open.sati jin$ git commit -m &amp;quot;Initial Commit&amp;quot; duvel:open.sati jin$ git remote add origin git@github.</description>
    </item>
    
  </channel>
</rss>