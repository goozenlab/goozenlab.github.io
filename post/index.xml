<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on goozenlab</title>
    <link>http://goozenlab.com/post/</link>
    <description>Recent content in Posts on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Sat, 14 Mar 2015 09:30:00 +0545</lastBuildDate>
    <atom:link href="http://goozenlab.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>IntelliJ IDEA 14 CEとJavaSE</title>
      <link>http://goozenlab.com/blog/2015/03/intellij-setup/</link>
      <pubDate>Sat, 14 Mar 2015 09:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/intellij-setup/</guid>
      <description>

&lt;p&gt;Androidの制作を始めて見ようかなとここ数ヶ月思っていてAndroidStudioとかもインストールはしてみたもののなかなか気が向きませんでした。（Javaがどうもねぇ〜。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-intellij.png&#34; alt=&#34;IntelliJ&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;最近、サイトのブログエンジンを変更するにあたって色々とリサーチをしていて、goLangやKotlinという新しい言語の事を知る。そしてそのKotlinという言語は見た目すごくSwiftに似ている。しかもアンドロイドのアプリも作れるらしい。
「これはSwiftのついでに両方勉強すれば一石二鳥では、あわよくばアプリを移植できるかも、、、」と軽率な考えにおされ、Kotlin の開発元から出ているIDE、しかもAndroidStudioの元になっているIntelliJ IDEA でやってみるべと、、ちょっとスウィッチが入りました。&lt;/p&gt;

&lt;p&gt;ダウンロードする物は以下の４つ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;IntelliJ IDEA（無料版）：&lt;a href=&#34;http://www.jetbrains.com/idea/download/&#34;&gt;ダウンロードサイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android SDK：[ダウンロードサイト]()&lt;/li&gt;
&lt;li&gt;Kotlin： IntelliJ IDEA の pluginsよりインストール。&lt;/li&gt;
&lt;li&gt;GoLang Plugin：&lt;a href=&#34;https://github.com/go-lang-plugin-org/go-lang-idea-plugin/releases/tag/%23164&#34;&gt;ダウンロードサイト&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;intellij-idea:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;IntelliJ IDEA&lt;/h2&gt;

&lt;p&gt;ダウンロードして立ち上げると、Javaはオラクルのものが既にダウンロードされているにもかかわらずJavaSEが必要とのアラートが上がる。(Not Now) をおしキャンセルする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-10-intellij-java-alert.png&#34; alt=&#34;alert to download Java&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;以前AndroidStudioをインストールした時と同じ問題で、これはちょこっとアプリのパッケージに入り込んで &lt;code&gt;info.plist&lt;/code&gt;を修正します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-10-intellij-infopilst.png&#34; alt=&#34;info.plist&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;色が反転している所を書き換え（写真は書き換え済みで、元は&lt;code&gt;1.6*&lt;/code&gt;）るとすぅーーっと起動します。でも、これだと、アップデートした時にまた書き直さなければいけないのか？？&lt;/p&gt;

&lt;h2 id=&#34;android-sdk:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;Android SDK&lt;/h2&gt;

&lt;p&gt;次にダウンロードした &lt;code&gt;android-sdk_r24.0.2-macosx&lt;/code&gt; は解凍し所定の場所に保存します。(AndroidStudioでは&lt;code&gt;~/Library/Android/sdk/&lt;/code&gt;の中がデフォルトのようです）そして、&lt;code&gt;/インストール先/tools/android update sdk&lt;/code&gt; を実行して必要なファイルをインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ インストールのディレクトリ/android-sdk-macosx/tools/android update sdk
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kotlin:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;Kotlin&lt;/h2&gt;

&lt;p&gt;もう一丁、&lt;code&gt;Kotlin&lt;/code&gt; をpluginsより入れる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-intellij-kotlin.png&#34; alt=&#34;Kotlin Install&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;golang-plugin:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;GoLang Plugin&lt;/h2&gt;

&lt;p&gt;おまけに、ダウンロードした &lt;code&gt;Go.164.zip&lt;/code&gt; を plugins から読み込みます。&lt;/p&gt;

&lt;p&gt;これで、一端な2015年Android開発環境が整いました。さぁーー、何から始めよう。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>littlistでのバグ</title>
      <link>http://goozenlab.com/blog/2015/03/littlist-265-bug/</link>
      <pubDate>Fri, 13 Mar 2015 20:00:47 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/littlist-265-bug/</guid>
      <description>&lt;p&gt;iOSを8.2にアップデートして自分の端末を色々と弄っていると、
littlistにて &amp;ldquo;RedHot List&amp;rdquo; と &amp;ldquo;期日付き&amp;rdquo; の表示で落ちます。&lt;/p&gt;

&lt;p&gt;OSアプデートのせいかなと、ちょっとソースを見てみると、、またもやケアレスミス。。&lt;br /&gt;
というか、思い込みがあったのか、、DB移行のため同じような作業を数度行ったせいなのか、、&lt;/p&gt;

&lt;p&gt;アプストアから登録を外しそうと思ったがitunesconnetctに繋がらず、、、&lt;br /&gt;
ちょっと他にも漏れが無いか調べて新しいバージョンを申請します。&lt;/p&gt;

&lt;p&gt;アップデートしてしまったユーザーの方々はしばしご勘弁のほど、、&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HugoとSimplenoteでgitHub-page</title>
      <link>http://goozenlab.com/blog/2015/03/hugo-simplenote/</link>
      <pubDate>Fri, 13 Mar 2015 13:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/hugo-simplenote/</guid>
      <description>

&lt;p&gt;以前は、Octopress+nvALT(SimpleNote Client) でGitHubPageサイトを運用してました。ブログのシステムをHugoに換えたので、nvALTとの連携を再設定しました。&lt;/p&gt;

&lt;p&gt;Octopressでは rake deploy で一発で github に更新できたのですが、Hugoではスクリプトを使って行います。&lt;/p&gt;

&lt;p&gt;まずは、github (githubpage用） と bitbucket (その他のファイル）の登録設定。&lt;/p&gt;

&lt;p&gt;（鍵の登録を行っておくとよいです）&lt;/p&gt;

&lt;h2 id=&#34;github-と-bitbucket-の登録:08d78064a6f6cfd09fd68d36f9666ec4&#34;&gt;github と bitbucket の登録&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public/
$ git init
$ git remote add origin https://YOUR_ACCOUNT@bitbucket.org/YOUR_ACCOUNT/YOUR_REPOSITORY.git
$ git add -A
$ git commit -m &amp;quot;initial commit&amp;quot;
$ git push origin master
Password for &#39;https://YOUR_ACCOUNT@bitbucket.org&#39;:
Counting objects: 166, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (163/163), done.
Writing objects: 100% (166/166), 322.06 KiB | 0 bytes/s, done.
Total 166 (delta 3), reused 0 (delta 0)
To https://YOUR_ACCOUNT@bitbucket.org/YOUR_ACCOUNT/YOUR_REPOSITORY.git
 * [new branch]      master -&amp;gt; master
$ git submodule add https://github.com/YOUR_ACCOUNT/goozenlab.github.io.git public
Cloning into &#39;public&#39;...
remote: Counting objects: 9437, done.
remote: Compressing objects: 100% (419/419), done.
remote: Total 9437 (delta 271), reused 0 (delta 0), pack-reused 8762
Receiving objects: 100% (9437/9437), 47.41 MiB | 30.00 KiB/s, done.
Resolving deltas: 100% (4319/4319), done.
Checking connectivity... done.
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;プレビュー方法:08d78064a6f6cfd09fd68d36f9666ec4&#34;&gt;プレビュー方法&lt;/h2&gt;

&lt;p&gt;nvALT:Simplenoteのデータは、ファイル単位として保存しています。保存先をHugo内のpostフォルダーにしてしまうと、そのフォルダー内のNote &amp;amp; Setting ファイル（nvALTの設定ファイル？）がサイト構築時にエラーの元になります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-11-hugo-alt.png&#34; alt=&#34;nvALT:Simplenote&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;nvALT:SimpleNoteの保存先フォルダーをサイトの外部にし、preview時にrsyncで一方通行の同期を行います。&lt;/p&gt;

&lt;p&gt;※ nvALT、あまり知名度が無いように思えるけれどお勧めです。（ctlキーの長押しでプレビューが表示[離すと消える]されたり（数日前に発見！）する。）&lt;/p&gt;

&lt;p&gt;これも簡単なスクリプトで行います。&lt;code&gt;hugo server --buildDrafts --theme=default&lt;/code&gt; のテーマ部分は自身の設定に合わせてください。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hugo_preview.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32m---- rsync ----\033[0m&amp;quot;

rsync -avz --delete --exclude &#39;Notes &amp;amp; Settings&#39; --exclude &#39;Untitled*&#39; --exclude &#39;.*&#39; /&amp;quot;保存先のフォルダ&amp;quot;/ /&amp;quot;HugoSites&amp;quot;/content/post

echo -e &amp;quot;\033[0;32mhugo preview...\033[0m&amp;quot;

hugo server --buildDrafts --theme=default

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;デプロイの方法:08d78064a6f6cfd09fd68d36f9666ec4&#34;&gt;デプロイの方法&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;deploy.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project. 
# if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`
hugo

# Go To Public folder
cd public

# Copy CNAME 
# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back
cd ..

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;その他のファイルの更新は、タイミングを計って手動でdeployしています。自動でbitbukket にも更新を入れたい時は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo -e &amp;quot;\033[0;32mDeploying updates to Bitbukket...\033[0m&amp;quot;

git add -A
git commit -m &amp;quot;$msg&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;をdeploy.sh に追加すれば良いのかな。&lt;/p&gt;

&lt;p&gt;実行のフラグを付けておしまい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chmod +x deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-13-pockhara.jpg&#34; alt=&#34;Pokhara street&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>クラスが読み込めず</title>
      <link>http://goozenlab.com/blog/2015/03/unable-to-load-class/</link>
      <pubDate>Thu, 12 Mar 2015 16:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/unable-to-load-class/</guid>
      <description>&lt;p&gt;TapasをSwiftに移行中です。一番癖の無いアプリという事で白羽の矢があたりましたが、、、ブログに引っかかったところ等アップしていきたいと思ってます。&lt;/p&gt;

&lt;p&gt;さて、さて、まずは、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2015-03-11 16:23:14.627 tapas[9910:539155] CoreData: warning: 
Unable to load class named &#39;Item&#39; for entity &#39;Item&#39;.  
Class not found, using default NSManagedObject instead.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というエラーがでる。ファイルはあるのだが、、&lt;/p&gt;

&lt;p&gt;これは、動く。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) {
    let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as NSManagedObject
    var cell = cell as ListViewCell
    cell.textLabel?.text = item.valueForKey(&amp;quot;name&amp;quot;)!.description
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、動かなーーーーい。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) {
    let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as Item
    var cell = cell as ListViewCell
    cell.textLabel?.text = item.name
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ネットで調べるにも、、、停電かつ、ネットが途切れ途切れ。。。二進も三進もいかん。。
解決したら加筆します。とりあえず保留。（素直にストーリーボードを使うかな。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-12-pockhara.jpg&#34; alt=&#34;Pokhara street&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>littlist v2.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/littlist-265/</link>
      <pubDate>Wed, 11 Mar 2015 07:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/littlist-265/</guid>
      <description>&lt;p&gt;ちょっとリマインダーをお借りした、ヤドカリ機能を追加しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;追加

&lt;ul&gt;
&lt;li&gt;バックアップを兼ねた、エクスポート&lt;/li&gt;
&lt;li&gt;リマインダーのリスト（※ デフォルトは &amp;ldquo;littlist&amp;rdquo;）からのインポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;変更&lt;/strong&gt;：以前のバージョンでは新規入力のキャンセル時はキャンセルボタンがありましたが、このバージョンより、&lt;strong&gt;シェイク&lt;/strong&gt;で行います。&lt;/li&gt;
&lt;li&gt;DBの構造を整理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やはり入力はコンピューターを使うのが楽です。ウェブサービスを作ったり、それが為のアプリを作るという方法がありますが、どうも、スッキリしない。というより、無理がある。&lt;/p&gt;

&lt;p&gt;間にリマンダーを挟みますが、簡易な方法として悪くないと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;取込み&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;littlist にて＋のボタンより取り込む&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;書出し&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;ホーム＞設定＞littlist より、書出しのスウィッチを&lt;strong&gt;オン&lt;/strong&gt;にします。&lt;/li&gt;
&lt;li&gt;次回 littlist 起動時に確認アラートが上がり実行します。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ リストのデフォルトは ”&lt;strong&gt;littlist&lt;/strong&gt;&amp;rdquo; になっています。ホーム＞設定＞littlistより変更できます。&lt;/p&gt;

&lt;p&gt;※ 簡単な重複のチェックをしてます。取り込んで、右側のバーの色を変更しなければ、重複チェックの項目として扱われます。（再度取り込んでも重複と見なされて取り込みされません）&lt;/p&gt;

&lt;p&gt;バックアップはついでというか、、折角なので、、、控えめに追加しました。本当はDBの移行がうまく行かなかったのでバージョンアップ時での利用を考え追加したのだが、問題は解決したので、将来的に消すか残すかちょっと考えてます。&lt;/p&gt;

&lt;p&gt;このアプリも最近アップデートしているアプリと同様にiOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tapas v1.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/tapas-165/</link>
      <pubDate>Wed, 11 Mar 2015 03:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/tapas-165/</guid>
      <description>&lt;p&gt;iOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;

&lt;p&gt;次期メジャーアップデート向けての準備も兼ねた、マイナーアップデートです。
iOS8ユーザーの方にはアップデートを推奨します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DBの調整&lt;/li&gt;
&lt;li&gt;iOS8での通知許可の設定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;よろしくお願いします。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新しいMacbook</title>
      <link>http://goozenlab.com/blog/2015/03/new-macbook/</link>
      <pubDate>Tue, 10 Mar 2015 05:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/new-macbook/</guid>
      <description>

&lt;p&gt;早起きして、情報をチェック。Apple Watchが発表されました。買わないと思います。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ちょっと、高いのでは、、&lt;/li&gt;
&lt;li&gt;いや、高い。&lt;/li&gt;
&lt;li&gt;単体では使えない&lt;/li&gt;
&lt;li&gt;対応しているiPhoneを持っていない。&lt;strong&gt;（極め手）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;そして、かーーーなーり期待していた「新しいMacbook」ですが、&lt;/p&gt;

&lt;h2 id=&#34;良い点は:c3fb063a5837e63b85cf3a87dfc9ad9c&#34;&gt;良い点は、&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;キーボードに手が加えられた&lt;/li&gt;
&lt;li&gt;レティナでいながら電池は持つ&lt;/li&gt;
&lt;li&gt;色のオプションがある&lt;/li&gt;
&lt;li&gt;軽い&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;で-あまり好きになれない点は:c3fb063a5837e63b85cf3a87dfc9ad9c&#34;&gt;で、あまり好きになれない点は、&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;デザイン（薄さにこだわりすぎ、キーボート上の排気メッシュも好きになれない。）&lt;/li&gt;
&lt;li&gt;プロセッサー（多分充分に速いのだろうけど。。）&lt;/li&gt;
&lt;li&gt;ポート（シンプルさとポートを削るというのは意味合いが少し違うと思う。何も無くなるというのなら（非接触充電で）分かるけど。。）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本当はこれを機会に、機材をすべてを入れ替えようと思ってましたが今回は飛ばします。
昨年MBP15が壊れ、致し方なくタイで買った MacBookAir11 をSSDを大きいものに換えて使い続けようと思います。アップルケアも買っとくかな。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-10-pokhara-damside-bw.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ricoh GR用てるてる坊主カメララップ</title>
      <link>http://goozenlab.com/blog/2015/03/wrapcase-gr/</link>
      <pubDate>Mon, 09 Mar 2015 14:50:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/wrapcase-gr/</guid>
      <description>&lt;p&gt;電動歯ブラシでもついゴシゴシと歯ブラシを動かしてしまう古いタイプの人間ですので、
デジカメも光学のビューファインダーが無いとどうもだめ。&lt;/p&gt;

&lt;p&gt;GRのファインダーは持っているのだが、GRにファインダーを付けてしまうとケースに収まらない。素で持っていると、手で触ってしまったりと気がついたらべとべとでホコリだらけになる。折角のファインダーが曇ってたりすると、興ざめする。写真からえらく遠ざかってました。&lt;/p&gt;

&lt;p&gt;しかしながら、ポカラは山が奇麗で街の至る所から山が見渡せるので、フラフラするのが割と楽しい。
そのおかげで久しぶりにカメラを持ち出す機会が増えて、最初は液晶で撮ってたが、ちょっと思いついた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr1.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;手持ちのヘアバンド（以前長髪でした）と手拭（郡上踊手拭）で、、、首（ファインダー）をバンドで絞め即席ながら完成。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr2.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;

&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr3.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;あまり引っかかりが無く、スッと撮れるので割といい感じ。戻すのがちょっと面倒いが、、&lt;/p&gt;

&lt;p&gt;ただし、左手で手拭を持ったまま写真を撮るとごくたまに手拭が映り込んでしまう事がちょっと難点というか注意点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr4.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;でも、思った以上に快適。ネックストラップが欲しくなってきた。&lt;/p&gt;

&lt;p&gt;普通にそのままテーブルに置いておいても違和感が無いし、ホコリよけにもなると良い事ずくめ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr5.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;（ちょっと、形を整えてこちらの布地で作ってもらうかな。。）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UserDefaultの初期値設定</title>
      <link>http://goozenlab.com/blog/2015/03/userdefault-register-defaults/</link>
      <pubDate>Sun, 08 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/userdefault-register-defaults/</guid>
      <description>&lt;p&gt;AppDelegateで行なう処理の一つのUserDefaultの初期値設定をSwiftにて。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // UserDefault Initial values
 var userDefaultsDefaults = NSMutableDictionary()
 userDefaultsDefaults.setValue(&amp;quot;String&amp;quot;, forKey: KEY_SETTING)
 userDefaultsDefaults.setValue(50, forKey: KEY_SETTING2)
 NSUserDefaults.standardUserDefaults().registerDefaults(userDefaultsDefaults)
 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;数値も文字も気にせず書き込んでよいようです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-08-pokhara-damside.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;ポカラの水汲み場&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>doop v1.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/doop-165/</link>
      <pubDate>Sun, 08 Mar 2015 07:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/doop-165/</guid>
      <description>&lt;p&gt;iOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;

&lt;p&gt;そして、次期メジャーアップデート向けての準備も兼ねた、マイナーアップデートです。
iOS8ユーザーの方にはアップデートを推奨します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DBの調整&lt;/li&gt;
&lt;li&gt;編集画面ナビゲーションボタンの調整（新規登録時にはキャンセルボタンを追加）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;よろしくお願いします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-07-pokhara-damside.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;doopのソートについて考えています。&lt;/p&gt;

&lt;p&gt;今現在のソートパターンは&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;サイクルにかかる平均時間&lt;/li&gt;
&lt;li&gt;0%にたどり着くであろう日付&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;によるソートをナビゲーションバーのロングタップで切り分けています。&lt;/p&gt;

&lt;p&gt;①は頻繁にアクセスする順になり、②は取り替えをする時期が迫っているものが前という順です。&lt;/p&gt;

&lt;p&gt;両方において問題点は、実際のソートと、画面上に出ている情報でユーザーが感じるソートがずれている点。&lt;/p&gt;

&lt;p&gt;色順であれば、画面を見ればすぐにわかると思うし、％で並んでいれば、その様すぐに把握できる。今の状況だと、ぱっと見グジャグジャで、把握が困難。&lt;/p&gt;

&lt;p&gt;では、なぜ％のならびにしないのか？というのは、パーセントが１％を切っていても、そのアイテムのサイクル平均時間によってばらつきが出てしまうからで、ある項目は１％は１０分で、またある項目は１日であったりする可能性があるからです。&lt;/p&gt;

&lt;p&gt;画面上でつかみやすいソートと利用上便宜があるソートの葛藤がある。なにか良いアイディアは無いものか、、次のバージョン（1.8.0：swift化）までは何か考えつきたいと。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ohayo v2.8.2</title>
      <link>http://goozenlab.com/blog/2015/03/ohayo-282/</link>
      <pubDate>Sat, 07 Mar 2015 21:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/ohayo-282/</guid>
      <description>&lt;p&gt;うーーーん、ホットフィックスです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;バグ

&lt;ul&gt;
&lt;li&gt;朝のメッセージがずれてました。。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上です。どこかのアップデート時に直したような気がするのだが、、、。本当は、こそっと別のものと一緒にアップデートしたかったのですが、、。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-08-pokhara-fewa-lake.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HugoのPagenate</title>
      <link>http://goozenlab.com/blog/2015/03/hugo-pagenate/</link>
      <pubDate>Sat, 07 Mar 2015 17:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/hugo-pagenate/</guid>
      <description>&lt;p&gt;ズラーーーっと並んでしまう、インデクスページを整理。ダウンロードした他のテーマファイルを覗き見しながらなんとか形になりました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt;の&lt;code&gt;{{ range $name, $page := .Site.Recent }}&lt;/code&gt; の所を &lt;code&gt;{{ range $name, $page := .Paginator.Pages }}&lt;/code&gt; に変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;five columns offset-by-two&amp;quot;&amp;gt;
  &amp;lt;p style=&amp;quot;margin-bottom:1em;font-weight:bold;color:#333&amp;quot;&amp;gt;posts:&amp;lt;/p&amp;gt;

  &amp;lt;ul class=&amp;quot;posts&amp;quot;&amp;gt;
	{{ $baseurl := .Site.BaseUrl }}
	{{ range $name, $page := .Site.Recent }} 
	{{ if eq .Type &amp;quot;post&amp;quot; }}		
	&amp;lt;li&amp;gt;
	  &amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ $page.Title }}&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そして、&lt;code&gt;config.toml&lt;/code&gt; に表示したい件数を書きます。（なぜか表示されるのは１件少ない）動いているから良いのですが、これも pagenate と　paginator と分かれているのがどうも分からない。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# number of posts shows on MainPage
paginate = 28

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yamlだtomlだと、一体yamlの何が問題なんだろうか。。&lt;/p&gt;

&lt;p&gt;で、とりあえずですが最低限の形が整った。えらく軽いページになりました。移行の作業は苦痛以外何者でもないので、このシンプル路線で当分行きます。あとはブログ更新時にちょっとずつ調整していこうかなと思ってます。でも、nvALTとの連携が切れてしまったのがなにげに痛い。。が、&lt;code&gt;rsync&lt;/code&gt; と &lt;code&gt;hugo server --buildDrafts --theme=default&lt;/code&gt; をまとめてスクリプトで動かせば良いだけのことか。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-05-pokhara-damside2.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugoを少し弄る</title>
      <link>http://goozenlab.com/blog/2015/03/hugo-template/</link>
      <pubDate>Sat, 07 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/hugo-template/</guid>
      <description>

&lt;p&gt;移行のためHugoを&lt;code&gt;nofancy&lt;/code&gt;を基にして色々と調整しています。&lt;/p&gt;

&lt;h2 id=&#34;テンプレート:3664db9b35118110eccce63f298c0cae&#34;&gt;テンプレート&lt;/h2&gt;

&lt;p&gt;このサイトでは、違いは微妙ですがブログ用とアプリ用のテンプレートを２種類使ってます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: app_page
title: &amp;quot;(a)のちょっと詳しい使い方&amp;quot;
subtitle: &amp;quot;タスク管理をマークダウンで&amp;quot;
appid: &amp;quot;929324285&amp;quot;
date: &amp;quot;2015-01-25&amp;quot;
updated: &amp;quot;2015-01-25&amp;quot;
footer: true
---

# アプリページのオクトプレスより移行のyaml

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;layout: app_page&lt;/code&gt; がある事で &lt;code&gt;layout/_default/app_page.html&lt;/code&gt; を探しにいき、もしくはコンテンツファイルを別のフォルダー&lt;code&gt;iapp&lt;/code&gt;に入れておくと、&lt;code&gt;layout: app_page&lt;/code&gt;が無くても&lt;code&gt;layout/iapp/single.html&lt;/code&gt;があれば優先して使われるよう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-07_hugo-template.png&#34; alt=&#34;Hugo Template&#34; /&gt;

&lt;img src=&#34;http://goozenlab.com/images/2015-03-07_hugo-template2.png&#34; alt=&#34;Hugo Template&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;yaml内のカスタム項目を取り込む:3664db9b35118110eccce63f298c0cae&#34;&gt;Yaml内のカスタム項目を取り込む&lt;/h2&gt;

&lt;p&gt;yaml内にあるスマートバナー広告で使う&lt;code&gt;appid: &amp;quot;929324285&amp;quot;&lt;/code&gt;は
以下のようにして &lt;code&gt;partials/header.html&lt;/code&gt; に 取り込む事ができました。だめ元でPage.等を書き込んで試したりしましたが、&lt;code&gt;.Params&lt;/code&gt;を使うのが正解のようです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if .Params.appid }}
  &amp;lt;meta name=&amp;quot;apple-itunes-app&amp;quot; content=&amp;quot;app-id={{ .Params.appid }}&amp;quot;&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかし、未だページングは手に着かず。。でも何となく構造がつかめてきたような、、、&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gem地獄で Hugo に移行</title>
      <link>http://goozenlab.com/blog/2015/03/moving-hugo/</link>
      <pubDate>Thu, 05 Mar 2015 12:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/moving-hugo/</guid>
      <description>&lt;p&gt;ヒンズーエリアですと、今日はホーリーというお祭りの日です。色の着いた粉を塗りかけられます。でも、インドに比べると地味な感じかな。&lt;/p&gt;

&lt;p&gt;ちょっと開発が一段落し一息。温泉に行こうと思ったが、Webの移行をしています。&lt;/p&gt;

&lt;p&gt;そもそもの始まりは、オクトプレスでSWIFTのシンタックスカラーリングで、色々試すも、これのバージョンがどうで、あっちで出るエラーはそのバージョンが問題でと、Ruby野郎でない私はGem地獄に陥る。Jekyllをちょっと試すが、これがまたGem関連でエラー連発。&lt;/p&gt;

&lt;p&gt;仕舞にはオクトプレスのアップデートでファイルが消える。バックアップは取っているのだが、気分は良くない。オクトプレスに不満がある訳ではないが、もう一度インストールするのも気が進まないので、移行する事にする。&lt;/p&gt;

&lt;p&gt;幾つかの選択肢があったのですが、Hugoに決定！もテーマにピンとくるものがありません。シンプルでグリッドな感じのやつで良いのだけど（jekyllでデフォルトの様な）。。。&lt;/p&gt;

&lt;p&gt;帯に短し、襷に、、、、で、オクトプレス時代は字がデケーなと思っていたのにHugoでは文字ちっちゃ、表示範囲がせまっ、みたいな事になっています。ただし、HugoのほうはCSSベースなのでSassで弄るのを断念した私でも弄れそう。ちなみに選んだテーマは&lt;code&gt;nofancy&lt;/code&gt;です。&lt;/p&gt;

&lt;p&gt;でも、ページングの処理がよく分からんから、とりあえずすべてのポストがメインページに羅列されています。。。66KBだからそんなに重くはないので。。。そして、画像もでかいです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ライトウェイト マイグレーションでのアトリビュートの名称変更</title>
      <link>http://goozenlab.com/blog/2015/03/lightweight-migration-mapping/</link>
      <pubDate>Mon, 02 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/lightweight-migration-mapping/</guid>
      <description>&lt;p&gt;タイトルが長げーーーーーーな。。&lt;/p&gt;

&lt;p&gt;さて、lightweight migration での移行で、アトリビュートの名前の変更がうまく行かないときは、マッピングがうまく機能していないのが原因です。（だとおもいます。）&lt;/p&gt;

&lt;p&gt;そんなときは、マッピングファイルを作成して、&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-02-db-migration2.png&#34; alt=&#34;Migration 1&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;ファイルを訂正、追加して（source, destinationに注意）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-02-db-migration1.png&#34; alt=&#34;Migration 2&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;あとは、optionsの設定を加え、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSDictionary *options = @{NSMigratePersistentStoresAutomaticallyOption: @(YES),
                              NSInferMappingModelAutomaticallyOption: @(YES)}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;if (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeURL options:options error:&amp;amp;error]) {

# options:nil の箇所を options:options に変更
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常通り処理を行えば、うまく行きます。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;pre&gt;&lt;code&gt;- (NSPersistentStoreCoordinator *)persistentStoreCoordinator {
    // The persistent store coordinator for the application. This implementation creates and return a coordinator, having added the store for the application to it.
    if (_persistentStoreCoordinator != nil) {
        return _persistentStoreCoordinator;
    }
    
    // Create the coordinator and store
    _persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:[self managedObjectModel]];
    NSURL *storeURL = [[self applicationDocumentsDirectory] URLByAppendingPathComponent:@&amp;quot;Littlist.sqlite&amp;quot;];
   
    // Performing automatic lightweight migration by passing the following dictionary as the options parameter:
    NSDictionary *options = @{NSMigratePersistentStoresAutomaticallyOption: @(YES),
                              NSInferMappingModelAutomaticallyOption: @(YES)};

    NSError *error = nil;
    NSString *failureReason = @&amp;quot;There was an error creating or loading the application&#39;s saved data.&amp;quot;;
    if (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeURL options:options error:&amp;amp;error]) {
        // Report any error we got.
        NSMutableDictionary *dict = [NSMutableDictionary dictionary];
        dict[NSLocalizedDescriptionKey] = @&amp;quot;Failed to initialize the application&#39;s saved data&amp;quot;;
        dict[NSLocalizedFailureReasonErrorKey] = failureReason;
        dict[NSUnderlyingErrorKey] = error;
        error = [NSError errorWithDomain:@&amp;quot;YOUR_ERROR_DOMAIN&amp;quot; code:9999 userInfo:dict];
        // Replace this with code to handle the error appropriately.
        // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.
        NSLog(@&amp;quot;Unresolved error %@, %@&amp;quot;, error, [error userInfo]);
        abort();
    }
    return _persistentStoreCoordinator;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lightweight migrationでマッピングファイルが使えるとは知りませんでした。というかファイルの存在自体も知らなかった。。&lt;/p&gt;

&lt;p&gt;でも、これで変更の流れもつかめるしありがたや。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>