<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on goozenlab</title>
    <link>http://goozenlab.com/post/</link>
    <description>Recent content in Posts on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Mon, 13 Apr 2015 22:20:00 +0545</lastBuildDate>
    <atom:link href="http://goozenlab.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>dandori v2.6.4</title>
      <link>http://goozenlab.com/blog/2015/04/dandori-264/</link>
      <pubDate>Mon, 13 Apr 2015 22:20:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/04/dandori-264/</guid>
      <description>&lt;p&gt;またまた、ケアレスミスのホットフィックスです。&lt;/p&gt;

&lt;p&gt;タスクビュー（第二階層）でのスワイプが機能しない点を修正しました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>メーソート、タイのインターネット事情</title>
      <link>http://goozenlab.com/blog/2015/04/internet-maesot/</link>
      <pubDate>Fri, 10 Apr 2015 20:12:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/04/internet-maesot/</guid>
      <description>&lt;p&gt;カトマンズを出てタイへ。フライ時間は割と短く、スケジュールの30分遅れで離陸し、30分前に到着。機内で久しぶりに飲んだビールが苦かった。&lt;/p&gt;

&lt;p&gt;バンコクには泊まるつもりは無いので、事前に調べた、空港ー＞公共バスステーションー＞モーチットバスステーションのルートでバンコクを脱出。無料のシャトルバスに乗り公共バスステーションに向かう。確認のためモーチットまでの行き方を聞くと、555番のバスをのり77番に乗り換えてモーチットまでと書かれたメモをくれる。調べていた通りには行かず。かつ、バスの料金徴収のおねいさん曰く「チェ〜ン バス、ワン、ツ（リ）ー、エイト」（138番）。それに従い２時間弱でモーチットに着く。ドムアン空港が見えたり、ウィークエンドマーケットの近くを通ったりでかなり遠回り？か？。&lt;/p&gt;

&lt;p&gt;モーチットでは、来週に迎えるタイの新年の為人が多いように感じる。チケットは、取れたらメーソット、だめならスコータイ、それでもだめならピナヌロックと優先順を付けていたけど、人の多さを見たらちょっと無理かなと少し懸念が走る。&lt;/p&gt;

&lt;p&gt;心配をよそに、行く予定のメーソットはミャンマーへのボーダーがある為タイにいるミャンマーの人たちの帰省ラッシュのためにバスがかなり増発していて、チケットも問題なくとれる。&lt;/p&gt;

&lt;p&gt;出発まで２時間半くらい。コンビニでビールでも買ってゆっくりしようかと思うが、売っていない。。しかたなく、ぽけっ〜と、時間をつぶし出発。そして、朝７時半頃到着。&lt;/p&gt;

&lt;p&gt;宿は歩いている途中見つけ、どこかでお勧めと聞いていたLucy&amp;rsquo;sHouseGHの別館のPumpkinGH。&lt;/p&gt;

&lt;p&gt;宿のネットは、&lt;/p&gt;

&lt;p&gt;下り：8.22Mps&lt;br /&gt;
上り：0.60Mps&lt;br /&gt;
(&lt;a href=&#34;http://speedtest.net/&#34;&gt;Speedtest.net&lt;/a&gt;を使用）&lt;/p&gt;

&lt;p&gt;ありがたみが身にしみます。&lt;/p&gt;

&lt;p&gt;酷暑でマンゴの季節です。大きさによりますがキロで20~30バーツ！。
黄色くなるまで食うぜ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ネパール ラップアップ</title>
      <link>http://goozenlab.com/blog/2015/04/wrapup-nepal/</link>
      <pubDate>Wed, 08 Apr 2015 18:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/04/wrapup-nepal/</guid>
      <description>&lt;p&gt;約70日間のネパール ラップアップ。訪問都市は少なめで、カトマンズ、ドゥリケル、バクタプル、ポカラ、ドゥリケル、バクタプル、カトマンズとくるっと回る。観光地はどこも残念だけど、だんだんイヤァーーな感じになってきてるが、バクタプルが個人的には気に入ってます。（入域料を取られるが、、）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;費用：65日間で6万+1万円：お土産代（ヒマラヤコーヒー、イラムティー、マサラ）。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-05-pokhara-damside.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;言葉：ポカラ、カトマンズでは、英語はまま通じます。ネパール語は何となく覚えやすいような気がします。響きも少しかわいい。&lt;/li&gt;
&lt;li&gt;ビザ：１ヶ月：40ドル、３ヶ月：100ドル（日本円でも支払い可能だったのような、幾つかの他の外貨でも支払いは可能。）入国時に支払い。&lt;strong&gt;写真一枚&lt;/strong&gt;が必要（忘れずに）。一年に150日の滞在が上限になっているらしいです。&lt;/li&gt;
&lt;li&gt;治安：夜は暗いです、停電が絡むと真っ暗になります。野良犬が豹変します。外にいてトーチが無いと泣きそうになります。&lt;/li&gt;
&lt;li&gt;天候：２月の半ばくらいから空は少し曇りがちになってきましたが、３月のホーリーというお祭りを境に気温が上がります。ポカラではよい天気が続きました。山を見るならベストは１１月頃から１月の終わり？か？。４月は山は見えないし、雨は降るしとそんなに良くはないように思えるがハイシーズンらしい、、６・７月は雨期だそうです。&lt;/li&gt;
&lt;li&gt;宿：シンプルなシングル（シャワートイレ共有だったりそうでなかったり）NPR350~500。500NPR払えば快適。物価は上がったといえども、宿の競争で値段はこの辺(400-500)が妥当なのでは（数泊滞在の場合）。。&lt;/li&gt;
&lt;li&gt;移動：小さめのバスと大きめなツーリストバスがあります。&lt;/li&gt;
&lt;li&gt;食事

&lt;ul&gt;
&lt;li&gt;朝：揚げたてドーナッツ、プリ、＋タルカリ、チィア（NPR20~60）&lt;/li&gt;
&lt;li&gt;昼：ダルバート（NPR80~180）見た感じでは、こんなに食べられないだろうと思うのですが、なぜか、沢山お腹に入ります。お米がスカスカなのでしょうか？飲み込むようにガッツリ食べてます。私は店を変えて毎日食べていましたが、飽きませんでした。”ミトチャ”（オイシイ）&lt;/li&gt;
&lt;li&gt;夜：昼のダルバートが残ってます、、軽めです。サモサ、シナモンロール、ベジモモ＋チィア（NPR40~80)&lt;/li&gt;
&lt;li&gt;その他：チィア（NPR10~20）、リンゴ１キロ（NPR150）、日本食（NPR300~?：日本食の質は高いですが以前に比べかなり値が上がったような。）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シンプルな生活で一日だいたい ￥800~1,200。ポカラ、カトマンズはちょっと高く、その他は安いです。&lt;/p&gt;

&lt;p&gt;ネパールの問題は電力とネット環境。YouTubeなど動画関連は見れないと思った方が良い。サイズの大きいアップデートも不可能に近い。宿によっては電気の節約なのか10時頃にルーターの電源を切るところもあるし、停電時でもルーターだけは電源を確保してくれるところもある。ネットワーク依存のノマドをしようと思ったら、覚悟のほど。。&lt;/p&gt;

&lt;p&gt;お湯シャワーは電気かソーラー蓄熱式。がソーラー式は天気がよければ驚くほど熱いお湯が出ます。電気式はもちろん停電時（週77時間）には使えません。太陽温水は電気式のお湯より湯あたりも良い気がする。&lt;/p&gt;

&lt;p&gt;※ 野良犬だらけの国です。しつけの悪そうなジャーマンシェパードも沢山居ます。猫はたまに見かけるが、紐で繋がれていたりと、、猫にとってはあまり居心地の良い国ではなさそうです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>テーブルビューセの境界線を消す</title>
      <link>http://goozenlab.com/blog/2015/04/tableview-separator/</link>
      <pubDate>Mon, 06 Apr 2015 19:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/04/tableview-separator/</guid>
      <description>&lt;p&gt;テーブルビューセの境界線を消すには下記のコードを追加。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;self.tableView.separatorStyle = UITableViewCellSeparatorStyle.None
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;StoryBoardを使っている時は以下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-04-06-separator.png&#34; alt=&#34;Separator&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>バックパックの中身</title>
      <link>http://goozenlab.com/blog/2015/04/inside-hackpack/</link>
      <pubDate>Sat, 04 Apr 2015 12:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/04/inside-hackpack/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-04-04-bags.jpg&#34; alt=&#34;写真：全て&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;ちょっと自分でも整理をしたかったので、今回の約４ヶ月間マレーシア・ネパール旅行での持ち物リストを書き出してみました。バックパックを新しくしようかなと、、
全部で多分15キロぐらい、バックパックとブリーフケースに荷物がパツパツに入ってます。
一年の旅行でもリストはほとんど同じだと思います。&lt;/p&gt;

&lt;h2 id=&#34;ブリーフケース:d0186ebfd0ba8f0330384d473d6e61be&#34;&gt;ブリーフケース&lt;/h2&gt;

&lt;p&gt;MBP15が入るブリーフケース。昨年MBP15が故障。MBA11 (-1.4kg)になったというのになにか、まだずっしりとした重さがある。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-04-04-briefcase.jpg&#34; alt=&#34;写真：ブリーフケースの中身&#34; /&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ポケットトートバックのような物にMBA 11と封筒ケース&lt;/li&gt;
&lt;li&gt;Kindle PaperLight&lt;/li&gt;
&lt;li&gt;リコー GR + ViewFinder&lt;/li&gt;
&lt;li&gt;iPhone 4S&lt;/li&gt;
&lt;li&gt;iPod 240GBとヘッドフォン&lt;/li&gt;
&lt;li&gt;A6 システム手帳&lt;/li&gt;
&lt;li&gt;ナカバヤシのノート&lt;/li&gt;
&lt;li&gt;マネーベルト&lt;/li&gt;
&lt;li&gt;長財布と小銭入れ&lt;/li&gt;
&lt;li&gt;書類入れ：A4シート、三折り書類入オレッタ&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;バックパック:d0186ebfd0ba8f0330384d473d6e61be&#34;&gt;バックパック&lt;/h2&gt;

&lt;p&gt;人から譲ってもらった物ですが、サイズはパーフェクト、40L?くらい、REI社製。人に切られたり、ネズミに齧られたりでボロボロ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-04-04-backpack.jpg&#34; alt=&#34;写真：バックパックの中身&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;服飾類:d0186ebfd0ba8f0330384d473d6e61be&#34;&gt;服飾類&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;ハンガー x 3&lt;/li&gt;
&lt;li&gt;衣服メッシュケース（着ている物は除外）

&lt;ol&gt;
&lt;li&gt;タオル、手拭 x 4&lt;/li&gt;
&lt;li&gt;Tシャツ x 2、シャツ x 2&lt;/li&gt;
&lt;li&gt;ズボン、パジャマ&lt;/li&gt;
&lt;li&gt;インドのドーティ(2m x 1.2mくらいの腰巻）&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;寝袋とショール&lt;/li&gt;
&lt;li&gt;眼鏡ケース&lt;/li&gt;
&lt;li&gt;サンダル&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;生活:d0186ebfd0ba8f0330384d473d6e61be&#34;&gt;生活&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;ネティポッドとサプリメント類&lt;/li&gt;
&lt;li&gt;洗顔キット：垢こすり、シャンプー、石けん&lt;/li&gt;
&lt;li&gt;ヘッドライト&lt;/li&gt;
&lt;li&gt;鍵 x 3&lt;/li&gt;
&lt;li&gt;ZipLockやプラスチック数種&lt;/li&gt;
&lt;li&gt;コクヨの筆箱：生活グッズ

&lt;ol&gt;
&lt;li&gt;耳かき、爪切り、髭剃り&lt;/li&gt;
&lt;li&gt;はさみ、定規&lt;/li&gt;
&lt;li&gt;替芯：シャープペンとボールペン&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;デジタル関連:d0186ebfd0ba8f0330384d473d6e61be&#34;&gt;デジタル関連&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;MacBook用電源とユニバーサルアダプター&lt;/li&gt;
&lt;li&gt;Sony GSPロガー&lt;/li&gt;
&lt;li&gt;小型BTスピーカー&lt;/li&gt;
&lt;li&gt;eneloop： charger、AA x 5、AAA x4&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;外付けHD：バックアップ用として持ってくるも、壊れる。&lt;/li&gt;
&lt;li&gt;コクヨの筆箱：デジタルグッズ

&lt;ol&gt;
&lt;li&gt;ケーブル類&lt;/li&gt;
&lt;li&gt;USBアダプタ&lt;/li&gt;
&lt;li&gt;USBメモリースティック&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;etc:d0186ebfd0ba8f0330384d473d6e61be&#34;&gt;etc&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;ユニクロのバッグ：移動時はバックインバックになっている&lt;/li&gt;
&lt;li&gt;防水性のバッグ：バックパックのカバーが無いので、&lt;/li&gt;
&lt;li&gt;マグカップ&lt;/li&gt;
&lt;li&gt;Beefeaterのペットボトル&lt;/li&gt;
&lt;li&gt;塩や香辛料：ほとんど使わず&lt;/li&gt;
&lt;li&gt;ジェットボイルとガス：今回特別参加&lt;/li&gt;
&lt;li&gt;液晶・レンズクリーナー&lt;/li&gt;
&lt;li&gt;ベッド兼ヨガマット&lt;/li&gt;
&lt;li&gt;文具： Kurutoga、消しゴム、Pilotのボールペン&lt;/li&gt;
&lt;li&gt;メッシュケース：S字フックやクリップ等が入ってます&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>ShakeはUIEventで</title>
      <link>http://goozenlab.com/blog/2015/03/swift-shake/</link>
      <pubDate>Fri, 27 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/swift-shake/</guid>
      <description>&lt;p&gt;色々と書き込んでいたシェイクの判別は&lt;code&gt;UIEvent&lt;/code&gt;を使うようになります。
えらく簡単になりました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    override func viewDidAppear(animated: Bool) {
        super.viewDidAppear(animated)
        self.becomeFirstResponder()
    }
    
    override func canBecomeFirstResponder() -&amp;gt; Bool {
        return true
    }
    
    override func motionEnded(motion: UIEventSubtype, withEvent event: UIEvent!) {
        if(event.subtype == UIEventSubtype.MotionShake) {
            // 
            // 処理
            //
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-26-shake-swift.png&#34; alt=&#34;swift shake&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;※まぁ、間違っちゃーいね〜な。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>littlist v2.6.6</title>
      <link>http://goozenlab.com/blog/2015/03/littlist-266/</link>
      <pubDate>Fri, 27 Mar 2015 10:00:47 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/littlist-266/</guid>
      <description>&lt;p&gt;データーベースの更新により起きた、幾つかのバグを修正しました。
どちらもあまり気分の良くない、溜息まじりなケアレスミスなバグです。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&amp;ldquo;RedHot List&amp;rdquo; と &amp;ldquo;期日付き&amp;rdquo; の表示で落ちるバグ&lt;/li&gt;
&lt;li&gt;編集画面で、期日をオフにしてもオフにならないバグ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;申請が通り、アプストアに復帰しました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>performSelectorは無くなる</title>
      <link>http://goozenlab.com/blog/2015/03/performselector-timer/</link>
      <pubDate>Thu, 26 Mar 2015 10:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/performselector-timer/</guid>
      <description>&lt;p&gt;ほぼ全ての拙作のアプリでは、テーブルセルでのバーの色変更タップとアップデートは時間差を使って行っています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[NSObject cancelPreviousPerformRequestsWithTarget:self
                                         selector:@selector(notifiyUpdate)
                                           object:nil];
[self performSelector:@selector(notifiyUpdate)
           withObject:nil
           afterDelay:kUpdateCellShortInterval];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;object-cで上記に書かれた&lt;code&gt;performSelector&lt;/code&gt;はSwiftでは無くなってしまったようなので、以下のコードでは動かない。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; NSObject.cancelPreviousPerformRequestsWithTarget(self, selector: notify, object: nil)
 NSObject.performSelector(notify, withObject: self, afterDelay: Interval.UpdateCell)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;幾つかの方法があるようですが、タイマーを使った方法が簡易でよいのですが、&lt;code&gt;cancelPreviousPerformRequestsWithTarget&lt;/code&gt;が無用になってしまう。処理の事前キャンセルも必要があるので、少し修正して最終的には以下のようになる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private var tapTimer: NSTimer?

// 処理
cancelTimer()
tapTimer = NSTimer.scheduledTimerWithTimeInterval(Interval.UpdateCell, target: self, selector:  notify, userInfo: nil, repeats: false)
//

func cancelTimer() {
    if tappingTimer != nil {
        tappingTimer!.invalidate()
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>printlnは気楽</title>
      <link>http://goozenlab.com/blog/2015/03/println-swift/</link>
      <pubDate>Wed, 25 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/println-swift/</guid>
      <description>&lt;p&gt;NSLogはまだ使えるようですが、swiftではprintln をログの書出しに使います。NSLogだとよく使っていた、 &lt;code&gt;__PRETTY_FUNCTION__&lt;/code&gt; は&lt;/p&gt;

&lt;p&gt;Swift では &lt;code&gt;__FILE__, __FUNCTION__, __LINE__ and __COLUMN__&lt;/code&gt; のようになります。
使えそうなのは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__FILE__&lt;/code&gt;  ：ファイル名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__LINE__&lt;/code&gt; ：ライン番号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__FUNCTION__&lt;/code&gt; ：ファンクション名&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そして、値を表示したい時はそのままかそのままか&lt;code&gt;\(...)&lt;/code&gt;で囲み適当に放り込む。もはや%dや%@は必要ないらしい。
小賢しいウォーニングも出なくなる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;println(__FUNCTION__, self.frame)
println(__FUNCTION__,&amp;quot;screen is \(self.frame)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;戻りは以下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(function, (0.0,706.0,414.0,30.0))
(function, screen is (0.0,706.0,414.0,30.0))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Swift Programming Language に書いてあるらしいので読むべ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NSDate() = [NSDate date]</title>
      <link>http://goozenlab.com/blog/2015/03/nsdate-swift/</link>
      <pubDate>Tue, 24 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/nsdate-swift/</guid>
      <description>&lt;p&gt;NSDateでの &lt;code&gt;[NSDate date]&lt;/code&gt; はシンプルにイニシャライザーに統合され？、Swiftでは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSDate()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でよろしい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[NSDate dateWithTimeIntervalSinceNow:hoursGoodSleep * 60 * 60]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を、Swiftで書いてみると、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSDate(timeIntervalSinceNow: hoursGoodSleep * 60 * 60)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラーが出る。hoursGoodSleep は Float だし抜かりは無いような、、、&lt;br /&gt;
正しくは、&lt;code&gt;Double&lt;/code&gt;でエラーは消える。こうゆう所は割と厳しいのね。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xcode 6.2</title>
      <link>http://goozenlab.com/blog/2015/03/xcode62-downloaded/</link>
      <pubDate>Sun, 22 Mar 2015 17:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/xcode62-downloaded/</guid>
      <description>&lt;p&gt;ポカラを出て、カトマンズに到着するも、宿が珍しくフルという事でドゥリケルまで移動する。&lt;/p&gt;

&lt;p&gt;宿のネットがスピードは相変わらずだが、割と安定しているようなのでXcodeのダウンロードを再びチャレンジする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-22-xcode62-downloaded.png&#34; alt=&#34;XCode 6.2&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;二日掛かりました。これで、iOS8.2にアップデートしてしまった実機にアプリをインストールできる。。&lt;/p&gt;

&lt;p&gt;追記：１ヶ月ぶりに戻ってきて、いつも朝にお世話になっているサモサ屋のサモサが一回り半くらい近く小さくなっている。。衝撃。。でも、まぁ10ルピーですし、、&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ビューサイクルとアプリ復帰時の処理</title>
      <link>http://goozenlab.com/blog/2015/03/view-cycle/</link>
      <pubDate>Sat, 21 Mar 2015 12:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/view-cycle/</guid>
      <description>

&lt;p&gt;たまに、何処に何の処理を入れれば良いか分からなくなるので、簡単にまとめる。&lt;/p&gt;

&lt;h2 id=&#34;起動時:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;起動時&lt;/h2&gt;

&lt;p&gt;アプリの起動時には以下の順で呼ばれる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;viewDidLoad()&lt;/li&gt;
&lt;li&gt;viewWillAppear&lt;/li&gt;
&lt;li&gt;viewDidAppear　※すべての画像の処理が終わった後に呼ばれる。あまり使っていない。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;モーダルビューより復帰:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;モーダルビューより復帰&lt;/h2&gt;

&lt;p&gt;モーダルビューより戻ってくると以下の処理が再び呼ばれる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;viewWillAppear&lt;/li&gt;
&lt;li&gt;viewDidAppear&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;ロック-スリープからの復帰時:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;ロック・スリープからの復帰時&lt;/h2&gt;

&lt;p&gt;ロック・スリープからの復帰は処理が行われない（厳密には、AppDelegate内では呼ばれる）ので、アプリの戻ってきた時の処理を追加する。
viewDidLoadに通知の設定する事で可能になる。&lt;code&gt;Setting.bundle&lt;/code&gt;でフォントの設定等を変更し、アプリに戻ってきた時に使う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Notification Center
let app: UIApplication = UIApplication.sharedApplication()
NSNotificationCenter.defaultCenter().addObserver(self, 
        selector: &amp;quot;applicationWillEnterForeground:&amp;quot;, name: UIApplicationWillEnterForegroundNotification, 
        object: app)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と処理を追加する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func applicationWillEnterForeground(notification: NSNotification) {
    println(__FUNCTION__)
    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;スリープに移行時:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;スリープに移行時&lt;/h2&gt;

&lt;p&gt;逆にスリープに入る時には復帰時と同じで、&lt;code&gt;ApplicationWillEnterForeground&lt;/code&gt; の代わりに &lt;code&gt;ApplicationDidEnterBackground&lt;/code&gt; を使えば良い。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; NSNotificationCenter.defaultCenter().addObserver(self, selector: &amp;quot;applicationDidEnterBackground:&amp;quot;, name: UIApplicationDidEnterBackgroundNotification, object: app)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>クラスが読み込めず [解決]</title>
      <link>http://goozenlab.com/blog/2015/03/load-managedobject/</link>
      <pubDate>Fri, 20 Mar 2015 10:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/load-managedobject/</guid>
      <description>

&lt;p&gt;もう、わざわざ動いている物をSwiftに移行するのも止めてしまおうか。どうせならAndroidに移植する方がまだよいか、、と思ってしまうほどでしたが、&lt;a href=&#34;http://goozenlab.com/blog/2015/03/unable-to-load-class/&#34;&gt;クラスが読み込めず&lt;/a&gt;で書いた問題が解決しました。&lt;/p&gt;

&lt;p&gt;問題のエラーログ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CoreData: warning: 
Unable to load class named &#39;Item&#39; for entity &#39;Item&#39;.  
Class not found, using default NSManagedObject instead.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もしかしたらXcode6.2では問題でなくなっているかもしれませんが、とりあえず解決方法は以下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-20-class-unload1.png&#34; alt=&#34;Class unload1&#34; /&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;xcdatamodeldファイルを選択&lt;/li&gt;
&lt;li&gt;CONFIGURATIONSを選択&lt;/li&gt;
&lt;li&gt;右に出てくるEntitiies以下のClass名を&lt;code&gt;ディレクトリー名.Entity名&lt;/code&gt;にする&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-20-class-unload2.png&#34; alt=&#34;Class unload2&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;※ 注意点は上記の場合&lt;code&gt;kitchen.Item&lt;/code&gt;では無く&lt;code&gt;tapas.Item&lt;/code&gt;と、xcdatamodeld名では無く、ディレクトリ名を入れる事。見事にハマりました。&lt;br /&gt;
（散歩中に「もしや、ディレクトリー名では。。」と閃きました。なんでわざわざ&lt;code&gt;kitchen.xcdatamodeld&lt;/code&gt;という名前にしているのかは、自分で作ったのに不明。なんで余計な事をする？と自分に問い詰めたい。。）&lt;/p&gt;

&lt;h2 id=&#34;うまく行かない場合:dada94b1ca17e9c7da1ee195804dcefb&#34;&gt;うまく行かない場合&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;キャッシュをクリアーする&lt;/li&gt;
&lt;li&gt;DerivedDataのデーターを消す&lt;/li&gt;
&lt;li&gt;新しいプロジェクトを作って、Modelを移行して試す&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;※ 使っていたプロジェクトのままで動いた場合と（tapas)、キャッシュやDerivedDataのデーターを抜いてもうまく行かず、新しいプロジェクトを作り直してうまく行く場合がありました（ohaYo)。&lt;/p&gt;

&lt;p&gt;蛇足：ネットでぱっと見て試すもうまく行かず、後で読み返すとその注意点が書いてあったりします。
小学校の通信簿に「少し聞いただけで、全部理解したと思ってしまうところがあります。もう少しじっくりと。（やれどーだこーだ）。」書いてあった事をふと思い出す。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NSLocalizedString on swift</title>
      <link>http://goozenlab.com/blog/2015/03/nslocalizedstring-swift/</link>
      <pubDate>Thu, 19 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/nslocalizedstring-swift/</guid>
      <description>&lt;p&gt;NSLocalizedStringでエラーがでる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSLocalizedString(&amp;quot;Timer&amp;quot;, comment: nil)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;nil&lt;/code&gt;を&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;空白に変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSLocalizedString(&amp;quot;NavigationBar.Button.Timer&amp;quot;, comment: &amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Swiftではnilの扱いがちょっと掴めず、、至る所で問題になってる。。&lt;/p&gt;

&lt;p&gt;ついでに中に入れる文言をかえる。以前は普通に&lt;code&gt;&amp;quot;Timer&amp;quot;&lt;/code&gt;と書いていたところを今回からはドコゾの何某か分かるように&lt;code&gt;&amp;quot;NavigationBar.Button.Timer&amp;quot;&lt;/code&gt;と少し詳しく書き込むようにする。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>delegate on swift</title>
      <link>http://goozenlab.com/blog/2015/03/delegate-swift/</link>
      <pubDate>Wed, 18 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/delegate-swift/</guid>
      <description>

&lt;h2 id=&#34;デレゲートするクラス:b75dbc75cf3a32d046705843360e6789&#34;&gt;デレゲートするクラス&lt;/h2&gt;

&lt;p&gt;以下の３つを書き加えればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;protocol MainHeaderViewDelegate {
    func sleepingTimerDidFinish(controller: MainHeaderView)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;var delegate:MainHeaderViewDelegate? = nil
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt; self.delegate!.sleepingTimerDidFinish(self)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;デレゲートで値を受け取るクラス:b75dbc75cf3a32d046705843360e6789&#34;&gt;デレゲートで値を受け取るクラス&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;MainHeaderViewDelegate&lt;/code&gt; と、functionを追加、処理を書き込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class MainViewController: UIViewController, MainHeaderViewDelegate {

   //////

   func sleepingTimerDidFinish(controller: MainHeaderView) {
        // 処理
    }

   /////
   
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※ ソースは拙作のohayoからコピペ。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>