<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on goozenlab</title>
    <link>http://goozenlab.com/post/</link>
    <description>Recent content in Posts on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Thu, 12 Mar 2015 16:30:00 +0545</lastBuildDate>
    <atom:link href="http://goozenlab.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>クラスが読み込めず</title>
      <link>http://goozenlab.com/blog/2015/03/unable-to-load-class/</link>
      <pubDate>Thu, 12 Mar 2015 16:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/unable-to-load-class/</guid>
      <description>&lt;p&gt;TapasをSwiftに移行中です。ビルドにて、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2015-03-11 16:23:14.627 tapas[9910:539155] CoreData: warning: Unable to load class named &#39;Item&#39; for entity &#39;Item&#39;.  
Class not found, using default NSManagedObject instead.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というエラーがでる。ファイルはあるのだが、、&lt;/p&gt;

&lt;p&gt;これは、動く。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) {
    let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as NSManagedObject
    var cell = cell as ListViewCell
    cell.textLabel?.text = item.valueForKey(&amp;quot;name&amp;quot;)!.description
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、動かない。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) {
    let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as Item
    var cell = cell as ListViewCell
    cell.textLabel?.text = item.name
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ネットで調べるにも、、、停電かつ、ネットが途切れ途切れ。。。二進も三進もいかん。。
解決したら加筆します。とりあえず保留。（素直にストーリーボードを使うかな。）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>littlist v2.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/littlist-265/</link>
      <pubDate>Wed, 11 Mar 2015 07:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/littlist-265/</guid>
      <description>&lt;p&gt;ちょっとリマインダーをお借りした、ヤドカリ機能を追加しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;追加

&lt;ul&gt;
&lt;li&gt;バックアップを兼ねた、エクスポート&lt;/li&gt;
&lt;li&gt;リマインダーのリスト（※ デフォルトは &amp;ldquo;littlist&amp;rdquo;）からのインポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;変更&lt;/strong&gt;：以前のバージョンでは新規入力のキャンセル時はキャンセルボタンがありましたが、このバージョンより、&lt;strong&gt;シェイク&lt;/strong&gt;で行います。&lt;/li&gt;
&lt;li&gt;DBの構造を整理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やはり入力はコンピューターを使うのが楽です。ウェブサービスを作ったり、それが為のアプリを作るという方法がありますが、どうも、スッキリしない。というより、無理がある。&lt;/p&gt;

&lt;p&gt;間にリマンダーを挟みますが、簡易な方法として悪くないと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;取込み&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;littlist にて＋のボタンより取り込む&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;書出し&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;ホーム＞設定＞littlist より、書出しのスウィッチを&lt;strong&gt;オン&lt;/strong&gt;にします。&lt;/li&gt;
&lt;li&gt;次回 littlist 起動時に確認アラートが上がり実行します。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ リストのデフォルトは ”&lt;strong&gt;littlist&lt;/strong&gt;&amp;rdquo; になっています。ホーム＞設定＞littlistより変更できます。&lt;/p&gt;

&lt;p&gt;※ 簡単な重複のチェックをしてます。取り込んで、右側のバーの色を変更しなければ、重複チェックの項目として扱われます。（再度取り込んでも重複と見なされて取り込みされません）&lt;/p&gt;

&lt;p&gt;バックアップはついでというか、、折角なので、、、控えめに追加しました。本当はDBの移行がうまく行かなかったのでバージョンアップ時での利用を考え追加したのだが、問題は解決したので、将来的に消すか残すかちょっと考えてます。&lt;/p&gt;

&lt;p&gt;このアプリも最近アップデートしているアプリと同様にiOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tapas v1.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/tapas-165/</link>
      <pubDate>Wed, 11 Mar 2015 03:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/tapas-165/</guid>
      <description>&lt;p&gt;iOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;

&lt;p&gt;次期メジャーアップデート向けての準備も兼ねた、マイナーアップデートです。
iOS8ユーザーの方にはアップデートを推奨します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DBの調整&lt;/li&gt;
&lt;li&gt;iOS8での通知許可の設定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;よろしくお願いします。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新しいMacbook</title>
      <link>http://goozenlab.com/blog/2015/03/new-macbook/</link>
      <pubDate>Tue, 10 Mar 2015 05:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/new-macbook/</guid>
      <description>

&lt;p&gt;早起きして、情報をチェック。Apple Watchが発表されました。買わないと思います。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ちょっと、高いのでは、、&lt;/li&gt;
&lt;li&gt;いや、高い。&lt;/li&gt;
&lt;li&gt;単体では使えない&lt;/li&gt;
&lt;li&gt;対応しているiPhoneを持っていない。&lt;strong&gt;（極め手）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;そして、かーーーなーり期待していた「新しいMacbook」ですが、&lt;/p&gt;

&lt;h2 id=&#34;良い点は:c3fb063a5837e63b85cf3a87dfc9ad9c&#34;&gt;良い点は、&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;キーボードに手が加えられた&lt;/li&gt;
&lt;li&gt;レティナでいながら電池は持つ&lt;/li&gt;
&lt;li&gt;色のオプションがある&lt;/li&gt;
&lt;li&gt;軽い&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;で-あまり好きになれない点は:c3fb063a5837e63b85cf3a87dfc9ad9c&#34;&gt;で、あまり好きになれない点は、&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;デザイン（薄さにこだわりすぎ、キーボート上の排気メッシュも好きになれない。）&lt;/li&gt;
&lt;li&gt;プロセッサー（多分充分に速いのだろうけど。。）&lt;/li&gt;
&lt;li&gt;ポート（シンプルさとポートを削るというのは意味合いが少し違うと思う。何も無くなるというのなら（非接触充電で）分かるけど。。）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本当はこれを機会に、機材をすべてを入れ替えようと思ってましたが今回は飛ばします。
昨年MBP15が壊れ、致し方なくタイで買った MacBookAir11 をSSDを大きいものに換えて使い続けようと思います。アップルケアも買っとくかな。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-10-pokhara-damside-bw.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ricoh GR用てるてる坊主カメララップ</title>
      <link>http://goozenlab.com/blog/2015/03/wrapcase-gr/</link>
      <pubDate>Mon, 09 Mar 2015 14:50:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/wrapcase-gr/</guid>
      <description>&lt;p&gt;電動歯ブラシでもついゴシゴシと歯ブラシを動かしてしまう古いタイプの人間ですので、
デジカメも光学のビューファインダーが無いとどうもだめ。&lt;/p&gt;

&lt;p&gt;GRのファインダーは持っているのだが、GRにファインダーを付けてしまうとケースに収まらない。素で持っていると、手で触ってしまったりと気がついたらべとべとでホコリだらけになる。折角のファインダーが曇ってたりすると、興ざめする。写真からえらく遠ざかってました。&lt;/p&gt;

&lt;p&gt;しかしながら、ポカラは山が奇麗で街の至る所から山が見渡せるので、フラフラするのが割と楽しい。
そのおかげで久しぶりにカメラを持ち出す機会が増えて、最初は液晶で撮ってたが、ちょっと思いついた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr1.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;手持ちのヘアバンド（以前長髪でした）と手拭（郡上踊手拭）で、、、首（ファインダー）をバンドで絞め即席ながら完成。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr2.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;

&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr3.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;あまり引っかかりが無く、スッと撮れるので割といい感じ。戻すのがちょっと面倒いが、、&lt;/p&gt;

&lt;p&gt;ただし、左手で手拭を持ったまま写真を撮るとごくたまに手拭が映り込んでしまう事がちょっと難点というか注意点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr4.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;でも、思った以上に快適。ネックストラップが欲しくなってきた。&lt;/p&gt;

&lt;p&gt;普通にそのままテーブルに置いておいても違和感が無いし、ホコリよけにもなると良い事ずくめ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-wrap-gr5.jpg&#34; alt=&#34;WrapCase for GR&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;（ちょっと、形を整えてこちらの布地で作ってもらうかな。。）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UserDefaultの初期値設定</title>
      <link>http://goozenlab.com/blog/2015/03/userdefault-register-defaults/</link>
      <pubDate>Sun, 08 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/userdefault-register-defaults/</guid>
      <description>&lt;p&gt;AppDelegateで行なう処理の一つのUserDefaultの初期値設定をSwiftにて。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // UserDefault Initial values
 var userDefaultsDefaults = NSMutableDictionary()
 userDefaultsDefaults.setValue(&amp;quot;String&amp;quot;, forKey: KEY_SETTING)
 userDefaultsDefaults.setValue(50, forKey: KEY_SETTING2)
 NSUserDefaults.standardUserDefaults().registerDefaults(userDefaultsDefaults)
 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;数値も文字も気にせず書き込んでよいようです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-08-pokhara-damside.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;ポカラの水汲み場&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>doop v1.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/doop-165/</link>
      <pubDate>Sun, 08 Mar 2015 07:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/doop-165/</guid>
      <description>&lt;p&gt;iOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;

&lt;p&gt;そして、次期メジャーアップデート向けての準備も兼ねた、マイナーアップデートです。
iOS8ユーザーの方にはアップデートを推奨します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DBの調整&lt;/li&gt;
&lt;li&gt;編集画面ナビゲーションボタンの調整（新規登録時にはキャンセルボタンを追加）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;よろしくお願いします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-07-pokhara-damside.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;doopのソートについて考えています。&lt;/p&gt;

&lt;p&gt;今現在のソートパターンは&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;サイクルにかかる平均時間&lt;/li&gt;
&lt;li&gt;0%にたどり着くであろう日付&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;によるソートをナビゲーションバーのロングタップで切り分けています。&lt;/p&gt;

&lt;p&gt;①は頻繁にアクセスする順になり、②は取り替えをする時期が迫っているものが前という順です。&lt;/p&gt;

&lt;p&gt;両方において問題点は、実際のソートと、画面上に出ている情報でユーザーが感じるソートがずれている点。&lt;/p&gt;

&lt;p&gt;色順であれば、画面を見ればすぐにわかると思うし、％で並んでいれば、その様すぐに把握できる。今の状況だと、ぱっと見グジャグジャで、把握が困難。&lt;/p&gt;

&lt;p&gt;では、なぜ％のならびにしないのか？というのは、パーセントが１％を切っていても、そのアイテムのサイクル平均時間によってばらつきが出てしまうからで、ある項目は１％は１０分で、またある項目は１日であったりする可能性があるからです。&lt;/p&gt;

&lt;p&gt;画面上でつかみやすいソートと利用上便宜があるソートの葛藤がある。なにか良いアイディアは無いものか、、次のバージョン（1.8.0：swift化）までは何か考えつきたいと。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ohayo v2.8.2</title>
      <link>http://goozenlab.com/blog/2015/03/ohayo-282/</link>
      <pubDate>Sat, 07 Mar 2015 21:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/ohayo-282/</guid>
      <description>&lt;p&gt;うーーーん、ホットフィックスです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;バグ

&lt;ul&gt;
&lt;li&gt;朝のメッセージがずれてました。。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上です。どこかのアップデート時に直したような気がするのだが、、、。本当は、こそっと別のものと一緒にアップデートしたかったのですが、、。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-08-pokhara-fewa-lake.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HugoのPagenate</title>
      <link>http://goozenlab.com/blog/2015/03/hugo-pagenate/</link>
      <pubDate>Sat, 07 Mar 2015 17:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/hugo-pagenate/</guid>
      <description>&lt;p&gt;ズラーーーっと並んでしまう、インデクスページを整理。ダウンロードした他のテーマファイルを覗き見しながらなんとか形になりました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt;の&lt;code&gt;{{ range $name, $page := .Site.Recent }}&lt;/code&gt; の所を &lt;code&gt;{{ range $name, $page := .Paginator.Pages }}&lt;/code&gt; に変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;five columns offset-by-two&amp;quot;&amp;gt;
  &amp;lt;p style=&amp;quot;margin-bottom:1em;font-weight:bold;color:#333&amp;quot;&amp;gt;posts:&amp;lt;/p&amp;gt;

  &amp;lt;ul class=&amp;quot;posts&amp;quot;&amp;gt;
	{{ $baseurl := .Site.BaseUrl }}
	{{ range $name, $page := .Site.Recent }} 
	{{ if eq .Type &amp;quot;post&amp;quot; }}		
	&amp;lt;li&amp;gt;
	  &amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ $page.Title }}&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そして、&lt;code&gt;config.toml&lt;/code&gt; に表示したい件数を書きます。（なぜか表示されるのは１件少ない）動いているから良いのですが、これも pagenate と　paginator と分かれているのがどうも分からない。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# number of posts shows on MainPage
paginate = 28

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yamlだtomlだと、一体yamlの何が問題なんだろうか。。&lt;/p&gt;

&lt;p&gt;で、とりあえずですが最低限の形が整った。えらく軽いページになりました。移行の作業は苦痛以外何者でもないので、このシンプル路線で当分行きます。あとはブログ更新時にちょっとずつ調整していこうかなと思ってます。でも、nvALTとの連携が切れてしまったのがなにげに痛い。。が、&lt;code&gt;rsync&lt;/code&gt; と &lt;code&gt;hugo server --buildDrafts --theme=default&lt;/code&gt; をまとめてスクリプトで動かせば良いだけのことか。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-05-pokhara-damside2.jpg&#34; alt=&#34;Pokhara&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugoを少し弄る</title>
      <link>http://goozenlab.com/blog/2015/03/hugo-template/</link>
      <pubDate>Sat, 07 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/hugo-template/</guid>
      <description>

&lt;p&gt;移行のためHugoを&lt;code&gt;nofancy&lt;/code&gt;を基にして色々と調整しています。&lt;/p&gt;

&lt;h2 id=&#34;テンプレート:3664db9b35118110eccce63f298c0cae&#34;&gt;テンプレート&lt;/h2&gt;

&lt;p&gt;このサイトでは、違いは微妙ですがブログ用とアプリ用のテンプレートを２種類使ってます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: app_page
title: &amp;quot;(a)のちょっと詳しい使い方&amp;quot;
subtitle: &amp;quot;タスク管理をマークダウンで&amp;quot;
appid: &amp;quot;929324285&amp;quot;
date: &amp;quot;2015-01-25&amp;quot;
updated: &amp;quot;2015-01-25&amp;quot;
footer: true
---

# アプリページのオクトプレスより移行のyaml

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;layout: app_page&lt;/code&gt; がある事で &lt;code&gt;layout/_default/app_page.html&lt;/code&gt; を探しにいき、もしくはコンテンツファイルを別のフォルダー&lt;code&gt;iapp&lt;/code&gt;に入れておくと、&lt;code&gt;layout: app_page&lt;/code&gt;が無くても&lt;code&gt;layout/iapp/single.html&lt;/code&gt;があれば優先して使われるよう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-07_hugo-template.png&#34; alt=&#34;Hugo Template&#34; /&gt;

&lt;img src=&#34;http://goozenlab.com/images/2015-03-07_hugo-template2.png&#34; alt=&#34;Hugo Template&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;yaml内のカスタム項目を取り込む:3664db9b35118110eccce63f298c0cae&#34;&gt;Yaml内のカスタム項目を取り込む&lt;/h2&gt;

&lt;p&gt;yaml内にあるスマートバナー広告で使う&lt;code&gt;appid: &amp;quot;929324285&amp;quot;&lt;/code&gt;は
以下のようにして &lt;code&gt;partials/header.html&lt;/code&gt; に 取り込む事ができました。だめ元でPage.等を書き込んで試したりしましたが、&lt;code&gt;.Params&lt;/code&gt;を使うのが正解のようです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if .Params.appid }}
  &amp;lt;meta name=&amp;quot;apple-itunes-app&amp;quot; content=&amp;quot;app-id={{ .Params.appid }}&amp;quot;&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかし、未だページングは手に着かず。。でも何となく構造がつかめてきたような、、、&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gem地獄で Hugo に移行</title>
      <link>http://goozenlab.com/blog/2015/03/moving-hugo/</link>
      <pubDate>Thu, 05 Mar 2015 12:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/moving-hugo/</guid>
      <description>&lt;p&gt;ヒンズーエリアですと、今日はホーリーというお祭りの日です。色の着いた粉を塗りかけられます。でも、インドに比べると地味な感じかな。&lt;/p&gt;

&lt;p&gt;ちょっと開発が一段落し一息。温泉に行こうと思ったが、Webの移行をしています。&lt;/p&gt;

&lt;p&gt;そもそもの始まりは、オクトプレスでSWIFTのシンタックスカラーリングで、色々試すも、これのバージョンがどうで、あっちで出るエラーはそのバージョンが問題でと、Ruby野郎でない私はGem地獄に陥る。Jekyllをちょっと試すが、これがまたGem関連でエラー連発。&lt;/p&gt;

&lt;p&gt;仕舞にはオクトプレスのアップデートでファイルが消える。バックアップは取っているのだが、気分は良くない。オクトプレスに不満がある訳ではないが、もう一度インストールするのも気が進まないので、移行する事にする。&lt;/p&gt;

&lt;p&gt;幾つかの選択肢があったのですが、Hugoに決定！もテーマにピンとくるものがありません。シンプルでグリッドな感じのやつで良いのだけど（jekyllでデフォルトの様な）。。。&lt;/p&gt;

&lt;p&gt;帯に短し、襷に、、、、で、オクトプレス時代は字がデケーなと思っていたのにHugoでは文字ちっちゃ、表示範囲がせまっ、みたいな事になっています。ただし、HugoのほうはCSSベースなのでSassで弄るのを断念した私でも弄れそう。ちなみに選んだテーマは&lt;code&gt;nofancy&lt;/code&gt;です。&lt;/p&gt;

&lt;p&gt;でも、ページングの処理がよく分からんから、とりあえずすべてのポストがメインページに羅列されています。。。66KBだからそんなに重くはないので。。。そして、画像もでかいです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ライトウェイト マイグレーションでのアトリビュートの名称変更</title>
      <link>http://goozenlab.com/blog/2015/03/lightweight-migration-mapping/</link>
      <pubDate>Mon, 02 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/lightweight-migration-mapping/</guid>
      <description>&lt;p&gt;タイトルが長げーーーーーーな。。&lt;/p&gt;

&lt;p&gt;さて、lightweight migration での移行で、アトリビュートの名前の変更がうまく行かないときは、マッピングがうまく機能していないのが原因です。（だとおもいます。）&lt;/p&gt;

&lt;p&gt;そんなときは、マッピングファイルを作成して、&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-02-db-migration2.png&#34; alt=&#34;Migration 1&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;ファイルを訂正、追加して（source, destinationに注意）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-02-db-migration1.png&#34; alt=&#34;Migration 2&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;あとは、optionsの設定を加え、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSDictionary *options = @{NSMigratePersistentStoresAutomaticallyOption: @(YES),
                              NSInferMappingModelAutomaticallyOption: @(YES)}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;if (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeURL options:options error:&amp;amp;error]) {

# options:nil の箇所を options:options に変更
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常通り処理を行えば、うまく行きます。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;pre&gt;&lt;code&gt;- (NSPersistentStoreCoordinator *)persistentStoreCoordinator {
    // The persistent store coordinator for the application. This implementation creates and return a coordinator, having added the store for the application to it.
    if (_persistentStoreCoordinator != nil) {
        return _persistentStoreCoordinator;
    }
    
    // Create the coordinator and store
    _persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:[self managedObjectModel]];
    NSURL *storeURL = [[self applicationDocumentsDirectory] URLByAppendingPathComponent:@&amp;quot;Littlist.sqlite&amp;quot;];
   
    // Performing automatic lightweight migration by passing the following dictionary as the options parameter:
    NSDictionary *options = @{NSMigratePersistentStoresAutomaticallyOption: @(YES),
                              NSInferMappingModelAutomaticallyOption: @(YES)};

    NSError *error = nil;
    NSString *failureReason = @&amp;quot;There was an error creating or loading the application&#39;s saved data.&amp;quot;;
    if (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeURL options:options error:&amp;amp;error]) {
        // Report any error we got.
        NSMutableDictionary *dict = [NSMutableDictionary dictionary];
        dict[NSLocalizedDescriptionKey] = @&amp;quot;Failed to initialize the application&#39;s saved data&amp;quot;;
        dict[NSLocalizedFailureReasonErrorKey] = failureReason;
        dict[NSUnderlyingErrorKey] = error;
        error = [NSError errorWithDomain:@&amp;quot;YOUR_ERROR_DOMAIN&amp;quot; code:9999 userInfo:dict];
        // Replace this with code to handle the error appropriately.
        // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.
        NSLog(@&amp;quot;Unresolved error %@, %@&amp;quot;, error, [error userInfo]);
        abort();
    }
    return _persistentStoreCoordinator;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lightweight migrationでマッピングファイルが使えるとは知りませんでした。というかファイルの存在自体も知らなかった。。&lt;/p&gt;

&lt;p&gt;でも、これで変更の流れもつかめるしありがたや。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>旅仕様 iOS</title>
      <link>http://goozenlab.com/blog/2015/02/travel-home/</link>
      <pubDate>Sat, 28 Feb 2015 20:32:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/02/travel-home/</guid>
      <description>

&lt;p&gt;iOS旅仕様のホーム画面はこんな感じです。お勧めのソフトです。背景はチェ・ゲバラ師匠。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-02-28_travel-home.png&#34; alt=&#34;Home&#34; /&gt;
&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;ドック

&lt;ol&gt;
&lt;li&gt;Google Maps：GPSと合わせて便利です。でも旅ですし、たまには現地の人に聞きましょう。&lt;/li&gt;
&lt;li&gt;SimpleNote：ちょっとしたメモには最適、呟かずメモってます。&lt;/li&gt;
&lt;li&gt;littlist：ToDoソフト、入国日や出発日の把握、イベント日、お土産リストとして使ってます。&lt;/li&gt;
&lt;li&gt;PocketMoney：アイコンは好きではないのですが、お金の管理はAppleのPDA: Newton、PalmOSの時代からずっとこのソフトを使ってます。お小遣い帳です。カードや日本の銀行の使用、残高状況がつかめます。外国の為替にも対応しています。別のものに帰る理由が見つからない。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;ホーム画面には、これらのソフトが置いてあります。

&lt;ol&gt;
&lt;li&gt;カレンダー：カレンダー自体は使っていないのですが、日付表示のため&lt;/li&gt;
&lt;li&gt;時計：目覚まし&lt;/li&gt;
&lt;li&gt;Currency：定番の外貨為替ソフト。外国通貨為替のレートを知るにはこれで十分です。日本円で10,000円が現地でいくらになるかを設定してます。&lt;/li&gt;
&lt;li&gt;Evernote：ちょっと旅情報のメモなどを入れたりしてます。ちょっと重たい物はシンプルノートよりevernoteのほうが良いです。海外で怪我、病気をして病院にお世話になった時に必要な書類（診断書や請求書のフォーム）をPDFで入れておくと便利です。&lt;/li&gt;
&lt;li&gt;写真：&lt;/li&gt;
&lt;li&gt;Momento：ほとんど呟いたりはしていないのですが、両替のレートや日付が必要なメモの保存先として、何となくライフログ的な。。&lt;/li&gt;
&lt;li&gt;ohaYo：睡眠ログのソフト。ちょっと睡眠が安定しない旅先、睡眠時間の管理に使います。タイムゾーンにも対応しているので大陸をドカッと動いても問題なく使えます。&lt;/li&gt;
&lt;li&gt;計算機：昨今計算能力が低下気味ということで、&lt;/li&gt;
&lt;li&gt;設定：&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちなみに、その他は、&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-02-28_2nd-Screen.png&#34; alt=&#34;2nd Page&#34; /&gt;

&lt;img src=&#34;http://goozenlab.com/images/2015-02-28_3rd-Screen.png&#34; alt=&#34;3rd Page&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;という感じ。2ページ目はアプリ検証ページ。そんなに沢山のソフトは入れてません。シンプルです。&lt;/p&gt;

&lt;h3 id=&#34;おまけ-simplenote:d99df43cef69261e36b7f08354f499c5&#34;&gt;おまけ：Simplenote&lt;/h3&gt;

&lt;p&gt;パスポート番号やクレジットカード・トラベラーズチェック紛失時の電話番号などを入力しておきましょう。もし、強盗などにあったときに必要な番号などを記録しておきましょう。&lt;/p&gt;

&lt;p&gt;もし最悪、全ての持ち物をとられてしまったときのために、パスワードを。。。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;どこかに書き込んでおく。（ズボンのポケットの裏地とか）&lt;/li&gt;
&lt;li&gt;実家にメモを置いておく。（ある意味アナログクラウド、母親に捨てられないようにしてくださいね。）&lt;/li&gt;
&lt;li&gt;日本語の文章にして、メールアドレスとともに覚えておく。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>マレーシア ラップアップ</title>
      <link>http://goozenlab.com/blog/2015/02/wrapup-malaysia/</link>
      <pubDate>Fri, 27 Feb 2015 18:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/02/wrapup-malaysia/</guid>
      <description>&lt;p&gt;マレーシア滞在をちょっとまとめる。（50日間で~7万円：８万両替（10,000円が290MYR）してMYR400くらい残る）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;言葉：東南アジアでは問題なく英語が通じる国の一つ。&lt;/li&gt;
&lt;li&gt;治安：KLは分からないが、かなり良い方。&lt;/li&gt;
&lt;li&gt;天候：ちょっと湿っぽい。東は少し湿度が低く感じられた。&lt;/li&gt;
&lt;li&gt;宿：シンプルなシングル（シャワートイレ共有）MYR15~35、朝食付きの宿もある。&lt;/li&gt;
&lt;li&gt;移動：たまに寂れたバスもあるが、大きい国でもなく、移動における体の負担もそれほどなし。夜行バスも座席がかなり倒れるので熟睡できる。（個人差あり）　&lt;/li&gt;
&lt;li&gt;食事

&lt;ul&gt;
&lt;li&gt;朝：ロティチャナイ、イドリ+チャイ（MYR3~4）&lt;/li&gt;
&lt;li&gt;昼：中華素食屋＋中国茶（MYR4~5) 、インドミールス（MYR4~5)&lt;/li&gt;
&lt;li&gt;夜：マサラトーサイ＋チャイ、菜包＋お茶（MYR3.5~4)&lt;/li&gt;
&lt;li&gt;酒：ビール大瓶（MYR16~日本とほぼ同じ)&lt;/li&gt;
&lt;li&gt;その他：豆乳、チャイ（MYR1.2）、ヨーグルト（MYR1.5~2）、ソーダ（MYR1.5~2)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シンプルな酒抜き生活で一日だいたい ￥1,000~1,500。で、ほぼベジタリアンの私にとっては食事に関してはかなり幸せ、理想に近いとも言える。ちなみに個人的にはペナンとマラッカが良い。マレー系の食事なら東側の街が良い感じ。肉食系は多分30％増し？くらい。&lt;/p&gt;

&lt;p&gt;宿の質は当たり前だが、値段によりけり、安かろう悪かろう。ただし、悪いといっても、暗いとか臭うとかの問題。南京虫に食われた事もあるが、汚い宿というのは今のところほとんど無い。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ニブレスプロジェクト</title>
      <link>http://goozenlab.com/blog/2015/02/xibless-project/</link>
      <pubDate>Thu, 26 Feb 2015 07:25:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/02/xibless-project/</guid>
      <description>&lt;p&gt;swiftに移行中です。折角なのでなるべく奇麗にやり直したい、ずる無しでシンプルに仕上げたい。&lt;/p&gt;

&lt;p&gt;ストーリーボードにはどうも馴染めず、結局中途半端にViewのコンポーネントをコードで書き込んだりする事になりそうなので、最初から何もなし状態から始めた方が良いと、、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;まずは storyboard/xib 無しテーブルビューベースのプロジェクト、ListViewController (UITableViewController) がMainViewController です。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&amp;gt; Bool {
      // Override point for customization after application launch.

      self.window = UIWindow(frame: UIScreen.mainScreen().bounds)
      let navigationController = UINavigationController(rootViewController: ListViewController())
      
      let controller = navigationController.topViewController as ListViewController
      controller.managedObjectContext = self.managedObjectContext

      self.window!.rootViewController = navigationController
      self.window!.makeKeyAndVisible()
      return true
}

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;お次ぎは、storyboard/xib 無しビューコントローラーベースのプロジェクト、MainViewController (UIViewController) が文字通り MainViewController です。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;、、が、、、、色々コンポーネントを追加していけば行くほど、アラートが上がってくる。。。（試行錯誤中）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&amp;gt; Bool {
    // Override point for customization after application launch.
    
    self.window = UIWindow(frame: UIScreen.mainScreen().bounds)

    let mainViewController = MainViewController()
    mainViewController.managedObjectContext = self.managedObjectContext

    self.window!.rootViewController = mainViewController
    self.window!.makeKeyAndVisible()
    
    return true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;割と簡単に行きましたが、こんなものまで、調べつつやってます。。。let なのか var なのか、！なのか？なのか。。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>