<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>goozenlab</title>
    <link>http://goozenlab.com/</link>
    <description>Recent content on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Thu, 01 Sep 2016 19:00:00 +0700</lastBuildDate>
    <atom:link href="http://goozenlab.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>cosperの金額表示</title>
      <link>http://goozenlab.com/blog/2016/09/cosper-display/</link>
      <pubDate>Thu, 01 Sep 2016 19:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/cosper-display/</guid>
      <description>&lt;p&gt;うぎゃ〜〜、９月だぁ〜、はえぇーーー。。。&lt;/p&gt;

&lt;p&gt;機能追加に関しての考察（ぼやき）：コスパにさらなる金額表示を、、&lt;/p&gt;

&lt;p&gt;拙作アプリ、コスパ。Version1.9.2より、ナビバーに総額表示を追加しましたが、使っていると、コストパフォーマンスの総額も表示したいなと思い試してみました。そして、表示してみたところ、&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-01-2016-09-01-cosper-display.png&#34; alt=&#34;cosper display&#34; /&gt;&lt;/p&gt;

&lt;p&gt;うーーーーん、少しきつきつだな、しかも結構使ってるな。。。詰めて表示をしてくれるわけでは無いので、カテゴリーの名前次第で窮屈になってしまう。これがドルとかユーロなら収まりも良い感じがするが、残念ながら日本円ではギリギリセーフな感じもするが、無理かな、ちょっと迷う。（ラオスのような１ドル＝7000キップ通貨の国だと大変なことになってしまう。ハイパーインフレだったジンバブエドルなんかやったらどうなることやら。。。）&lt;/p&gt;

&lt;p&gt;もう一回長押しで表示したりすることや、ターブルビューのフッターで表示も考えるが、あまり操作を複雑にするのは気が進まないし、見た目もこれ以上余計なもの入れたく無い。情報の入ったヘッダー部を下に引っ張ってチラ見確認というのはありかな。。と、このポストを書いている最中に思いつくけど、これもちょっと違う感じもする。&lt;/p&gt;

&lt;p&gt;実機に入れ、数日自分で使ってみて決めることにする。&lt;/p&gt;

&lt;p&gt;で、しばし使ってみたけれど今ひとつ決めがたい、、、ってよく考えてみたら、迷ったらユーザーに選んでもらえれば良いじゃ無いかと、、当たり前なことに気づきました。。&lt;/p&gt;

&lt;p&gt;ということで、設定に新しい項目を追加、という流れにします。&lt;/p&gt;

&lt;p&gt;ちょっと他のところもいじっているので更新はしばし後です。乞うご期待。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Podsをプロジェクトに</title>
      <link>http://goozenlab.com/blog/2016/09/install-pods/</link>
      <pubDate>Thu, 01 Sep 2016 07:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/install-pods/</guid>
      <description>&lt;p&gt;プロジェクトにポッド・ライブラリーを追加します。でこれまたエラーが出る。とりあえず手動でインストールすることにする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pod install
Setting up CocoaPods master repo
[!] Unable to add a source with url `https://github.com/CocoaPods/Specs.git` named `master`.
You can try adding it manually in `~/.cocoapods/repos` or via `pod repo add`.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、回線状況悪く途中で回線が切断されエラー。（後もーちょいなのに、、）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd .cocoapods/repos/
$ git clone https://github.com/CocoaPods/Specs.git
Cloning into &#39;Specs&#39;...
remote: Counting objects: 801469, done.
remote: Compressing objects: 100% (30/30), done.
Receiving objects:  83% (671735/801475), 209.63 MiB | 10.00 KiB/s    
error: RPC failed; curl 56 SSLRead() return error -980600 KiB/s     
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;思ったよりファイルが大きいです（310 MiBくらい）。回線状況が悪い中でいるので終了まで結構時間がかかりました。朝の５時に起きて、早朝の誰も使っていないだろう時間帯でようやく完了。
（途中回線が切れること数回、、、）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-01-cocoapod-install.png&#34; alt=&#34;pods install&#34; /&gt;&lt;/p&gt;

&lt;p&gt;で改めて、プロジェクトディレクトリーの移動して、ポッドのインストール。今回は別件でエラーが出るが、まぁスムースに終了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pod install
Downloading dependencies
Installing Alamofire (3.3.1)
Installing Reachability (3.2)
Installing SwiftyDropbox (3.2.0)
Generating Pods project
Integrating client project

[!] Please close any current Xcode sessions and use `(a).xcworkspace` for this project from now on.
Pod installation complete! There are 2 dependencies from the Podfile and 3 total pods installed.
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ネット上では、&lt;code&gt;pod install --no-repo-update --verbose&lt;/code&gt; でインストールというのも見ました。もし引き続きエラーが出る方はお試しを。&lt;/p&gt;

&lt;p&gt;swiftのライブラリーに切り替えたり、ライブラリを追加インストールや削除するときは、Podfileにライブラリを追加・削除し、アップデートします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ $ pod update
Update all pods
Updating local specs repositories
Analyzing dependencies
Removing Reachability
Downloading dependencies
Using Alamofire (3.3.1)
Installing JGProgressHUD (1.4)
Using ReachabilitySwift (2.3.3)
Using SwiftyDropbox (3.2.0)
Generating Pods project
Integrating client project
Pod installation complete! There are 3 dependencies from the Podfile and 4 total pods installed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんな感じで終了。&lt;/p&gt;

&lt;p&gt;安堵。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sudo-less Gem &amp; Cocoapods</title>
      <link>http://goozenlab.com/blog/2016/08/install-cocoapods/</link>
      <pubDate>Wed, 31 Aug 2016 13:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/install-cocoapods/</guid>
      <description>&lt;p&gt;ちょっと問題を抱えていたcocoapodsをEl Capitanにインストールしました。&lt;/p&gt;

&lt;p&gt;以前インストールした時に、ちょっと須藤&amp;amp;ジェム地獄に陥ったので今回は、sudo-less で &lt;code&gt;~/.gem&lt;/code&gt; 内にインストール。&lt;/p&gt;

&lt;p&gt;まずは、bashの設定 &lt;code&gt;~/.bash_profile&lt;/code&gt; を弄ります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# sudo-less Gem
export GEM_HOME=$HOME/.gem
export PATH=$GEM_HOME/ruby/2.0.0/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;cocoapodsを普通にインストールをすると、activesupportのインストールの所でエラーになります。ルビーのバージョンが低いとのエラーで、色々と方法はあるのですが、ルビー自体を別にインストールするのも今はちょっと避けたかったので、引っかかりのあるパッケージを手動でインストールすることで問題の解決をはかります。（前のバージョンということか、、）&lt;/p&gt;

&lt;p&gt;ディレクトリーを作り、&lt;code&gt;--user-install&lt;/code&gt;のオプションをつけインストールをします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd
$ mkdir .gem
$ gem install activesupport -v 4.2.6 --user-install
$ gem install cocoapods --user-install
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ gem install activesupport -v 4.2.6 --user-install
Fetching: i18n-0.7.0.gem (100%)
Successfully installed i18n-0.7.0
Fetching: thread_safe-0.3.5.gem (100%)
Successfully installed thread_safe-0.3.5
Fetching: tzinfo-1.2.2.gem (100%)
Successfully installed tzinfo-1.2.2
Fetching: minitest-5.9.0.gem (100%)
Successfully installed minitest-5.9.0
Fetching: activesupport-4.2.6.gem (100%)
Successfully installed activesupport-4.2.6
Parsing documentation for i18n-0.7.0
Installing ri documentation for i18n-0.7.0
Parsing documentation for thread_safe-0.3.5
Installing ri documentation for thread_safe-0.3.5
Parsing documentation for tzinfo-1.2.2
Installing ri documentation for tzinfo-1.2.2
Parsing documentation for minitest-5.9.0
Installing ri documentation for minitest-5.9.0
Parsing documentation for activesupport-4.2.6
unable to convert &amp;quot;\x84&amp;quot; from ASCII-8BIT to UTF-8 for lib/active_support/values/unicode_tables.dat, skipping
Installing ri documentation for activesupport-4.2.6
5 gems installed
$ gem install cocoapods --user-install
Fetching: nap-1.1.0.gem (100%)
Successfully installed nap-1.1.0
Fetching: fuzzy_match-2.0.4.gem (100%)
Successfully installed fuzzy_match-2.0.4
Fetching: cocoapods-core-1.0.1.gem (100%)
Successfully installed cocoapods-core-1.0.1
Fetching: claide-1.0.0.gem (100%)
Successfully installed claide-1.0.0
Fetching: cocoapods-deintegrate-1.0.0.gem (100%)
Successfully installed cocoapods-deintegrate-1.0.0
Fetching: cocoapods-downloader-1.1.0.gem (100%)
Successfully installed cocoapods-downloader-1.1.0
Fetching: cocoapods-plugins-1.0.0.gem (100%)
Successfully installed cocoapods-plugins-1.0.0
Fetching: cocoapods-search-1.0.0.gem (100%)
Successfully installed cocoapods-search-1.0.0
Fetching: cocoapods-stats-1.0.0.gem (100%)
Successfully installed cocoapods-stats-1.0.0
Fetching: netrc-0.7.8.gem (100%)
Successfully installed netrc-0.7.8
Fetching: cocoapods-trunk-1.0.0.gem (100%)
Successfully installed cocoapods-trunk-1.0.0
Fetching: cocoapods-try-1.1.0.gem (100%)
Successfully installed cocoapods-try-1.1.0
Fetching: molinillo-0.4.5.gem (100%)
Successfully installed molinillo-0.4.5
Fetching: colored-1.2.gem (100%)
Successfully installed colored-1.2
Fetching: xcodeproj-1.2.0.gem (100%)
Successfully installed xcodeproj-1.2.0
Fetching: escape-0.0.4.gem (100%)
Successfully installed escape-0.0.4
Fetching: fourflusher-0.3.2.gem (100%)
Successfully installed fourflusher-0.3.2
Fetching: cocoapods-1.0.1.gem (100%)
Successfully installed cocoapods-1.0.1
Fetching: concurrent-ruby-1.0.2.gem (100%)
Successfully installed concurrent-ruby-1.0.2
Parsing documentation for nap-1.1.0
Installing ri documentation for nap-1.1.0
Parsing documentation for fuzzy_match-2.0.4
Installing ri documentation for fuzzy_match-2.0.4
Parsing documentation for cocoapods-core-1.0.1
Installing ri documentation for cocoapods-core-1.0.1
Parsing documentation for claide-1.0.0
Installing ri documentation for claide-1.0.0
Parsing documentation for cocoapods-deintegrate-1.0.0
Installing ri documentation for cocoapods-deintegrate-1.0.0
Parsing documentation for cocoapods-downloader-1.1.0
Installing ri documentation for cocoapods-downloader-1.1.0
Parsing documentation for cocoapods-plugins-1.0.0
Installing ri documentation for cocoapods-plugins-1.0.0
Parsing documentation for cocoapods-search-1.0.0
Installing ri documentation for cocoapods-search-1.0.0
Parsing documentation for cocoapods-stats-1.0.0
Installing ri documentation for cocoapods-stats-1.0.0
Parsing documentation for netrc-0.7.8
Installing ri documentation for netrc-0.7.8
Parsing documentation for cocoapods-trunk-1.0.0
Installing ri documentation for cocoapods-trunk-1.0.0
Parsing documentation for cocoapods-try-1.1.0
Installing ri documentation for cocoapods-try-1.1.0
Parsing documentation for molinillo-0.4.5
Installing ri documentation for molinillo-0.4.5
Parsing documentation for colored-1.2
Installing ri documentation for colored-1.2
Parsing documentation for xcodeproj-1.2.0
Installing ri documentation for xcodeproj-1.2.0
Parsing documentation for escape-0.0.4
Installing ri documentation for escape-0.0.4
Parsing documentation for fourflusher-0.3.2
Installing ri documentation for fourflusher-0.3.2
Parsing documentation for cocoapods-1.0.1
Installing ri documentation for cocoapods-1.0.1
Parsing documentation for concurrent-ruby-1.0.2
Installing ri documentation for concurrent-ruby-1.0.2
19 gems installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、無事終了、インストールできました。これで、(a)の移行ができる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>インストール: Homebrew</title>
      <link>http://goozenlab.com/blog/2016/08/install-homebrew/</link>
      <pubDate>Wed, 31 Aug 2016 13:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/install-homebrew/</guid>
      <description>

&lt;p&gt;Homebrew のインストール先は、デフォルトでは /usr/local になっています。インストール先をちょっと除いてみると、なーーんか荒らされている感じがある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /usr/local/
total 24
drwxr-xr-x   14 jin  admin   476B Mar 29 10:51 .git/
drwxr-xr-x    5 jin  admin   170B Feb 20  2016 .github/
-rw-r--r--    1 jin  admin   823B Feb 20  2016 .gitignore
-rw-r--r--    1 jin  admin   1.3K Feb 20  2016 .travis.yml
-rw-r--r--    1 jin  admin   291B Oct 16  2015 .yardopts
-rw-r--r--    1 jin  admin   3.1K Jun  1  2015 CODEOFCONDUCT.md
drwxr-xr-x    9 jin  admin   306B Apr 18  2015 Cellar/
drwxr-xr-x    3 jin  admin   102B Nov 11  2015 Frameworks/
-rw-r--r--    1 jin  admin   1.2K Feb 20  2016 LICENSE.txt
drwxr-xr-x   11 jin  admin   374B Mar 29 10:51 Library/
-rw-r--r--    1 jin  admin   3.8K Feb 26  2016 README.md
drwxr-xr-x  135 jin  admin   4.5K Mar 31 21:02 bin/
drwxr-xr-x    4 jin  admin   136B Feb 20  2016 etc/
drwxr-xr-x    8 jin  admin   272B Apr 18  2015 include/
drwxr-xr-x   18 jin  admin   612B Apr 18  2015 lib/
drwxr-xr-x    9 jin  admin   306B Mar 29 10:53 opt/
drwxr-xr-x    4 jin  admin   136B Mar  5  2015 share/
drwxr-xr-x    3 jin  admin   102B Apr  1  2015 var/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;という事で、再インストールは Homebrew のインストール先を変更する事に、スッキリとホームディレクトリー内の&lt;code&gt;~/.brew&lt;/code&gt; にする。（よくよく考えると、&lt;code&gt;~/Library/Homebrew&lt;/code&gt;でも良かったかなと思ったりする。）&lt;/p&gt;

&lt;h2 id=&#34;homebrew-のインストール&#34;&gt;Homebrew のインストール&lt;/h2&gt;

&lt;p&gt;コピーもしくはクローンでインストールできます。私はサイト上にあった方法のコピーでインストールを行いました。ちなみに、gitでは &lt;code&gt;$ git clone https://github.com/Homebrew/brew.git ~/.brew&lt;/code&gt; 。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd
$ mkdir .brew &amp;amp;&amp;amp; curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C .brew
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;実行パスの設定&#34;&gt;実行パスの設定&lt;/h2&gt;

&lt;p&gt;とりあえず、PREFIXなど状況をチェック。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ .brew/bin/brew config
HOMEBREW_VERSION: 0.9.9
ORIGIN: (none)
HEAD: (none)
Last commit: never
Core tap: N/A
HOMEBREW_PREFIX: /Users/jin/.brew
HOMEBREW_REPOSITORY: /Users/jin/.brew
HOMEBREW_CELLAR: /Users/jin/.brew/Cellar
HOMEBREW_BOTTLE_DOMAIN: https://homebrew.bintray.com
CPU: octa-core 64-bit sandybridge
Homebrew Ruby: 2.0.0-p648
Clang: 7.3 build 703
Git: 2.7.4 =&amp;gt; /Applications/Xcode.app/Contents/Developer/usr/bin/git
Perl: /usr/bin/perl
Python: /usr/bin/python
Ruby: /usr/bin/ruby =&amp;gt; /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby
Java: N/A
OS X: 10.11.6-x86_64
Xcode: 7.3.1
CLT: N/A
X11: N/A
$ .brew/bin/brew --cache
/Users/jin/Library/Caches/Homebrew
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;問題は無いようなので、実行パスを&lt;code&gt;.bash_profile&lt;/code&gt;に書き込みます。
そしてCacheの保存先は、&lt;code&gt;/Users/jin/Library/Caches/Homebrew&lt;/code&gt; になっているのでこれもついでに変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PATH=$HOME/.brew/bin:$PATH
export HOMEBREW_CACHE=$HOME/.brew/cache
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;実行をする前に、確認。警告が出るけど、まぁ大丈夫でしょう。。（必要無いような気もするけれど。）そして、hugoをインストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew doctor
Please note that these warnings are just used to help the Homebrew maintainers
with debugging if you file an issue. If everything you use Homebrew for is
working fine: please don&#39;t worry and just ignore them. Thanks!

Warning: Your Homebrew is not installed to /usr/local
You can install Homebrew anywhere you want but some bottles (binary
packages) can only be used in /usr/local and some formulae (packages)
may not build correctly unless you install in /usr/local. Sorry!

$ brew install hugo
Initialized empty Git repository in /Users/jin/.brew/.git/
remote: Counting objects: 1032, done.
remote: Compressing objects: 100% (924/924), done.
remote: Total 1032 (delta 91), reused 650 (delta 67), pack-reused 0
Receiving objects: 100% (1032/1032), 1.03 MiB | 93.00 KiB/s, done.
Resolving deltas: 100% (91/91), done.
From https://github.com/Homebrew/brew
 * [new branch]      master     -&amp;gt; origin/master
HEAD is now at 8e29cf1 Merge pull request #812 from DomT4/at
==&amp;gt; Downloading https://homebrew.bintray.com/bottles/hugo-0.16.el_capitan.bottle.tar.gz
######################################################################## 100.0%
==&amp;gt; Pouring hugo-0.16.el_capitan.bottle.tar.gz
==&amp;gt; Caveats
Bash completion has been installed to:
  /Users/jin/.brew/etc/bash_completion.d
==&amp;gt; Summary
🍺  /Users/jin/.brew/Cellar/hugo/0.16: 29 files, 17.6M
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とりあえず、hugoは動いてます。ちょっとアプリの移行が終わったら、pythonで機械学習の諸々を試してみようかな。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>クリーンインストール</title>
      <link>http://goozenlab.com/blog/2016/08/clean-install/</link>
      <pubDate>Tue, 30 Aug 2016 13:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/clean-install/</guid>
      <description>

&lt;p&gt;新しいOSに変更するたびに、クリーンインストールをしてきました。引越し気分で要らないものを捨てたりするのに良いタイミング。（実はただ色々いじっていくうちに訳がわからない状態になっていることが多い。）&lt;/p&gt;

&lt;p&gt;今回は、初めてタイムマシーンを使ってみましたが、あまりクリーンインストールでは役に立たないことに気づきました。しかも、中に入っているファイルをコピーするのがすごーーく遅いです。。ただ、丸ごと復元するならすごく良いと思います。&lt;br /&gt;
（それ以前はrsyncでバックアップとって、そこから必要なファイルを取っていました。次回からはまた、rsyncでバックアップするつもり。）&lt;/p&gt;

&lt;h2 id=&#34;基本的な動作などの設定&#34;&gt;基本的な動作などの設定。&lt;/h2&gt;

&lt;p&gt;まずはタップでクリックにする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-tap.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;英語版キーボードのキャップロックをコントロールキーに変更。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-caplock.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;右下のホットコーナーを、デスクトップ表示にする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-mission-controll.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;老眼がどんどん進行し、ポインターがどんどんでかくなる。と、2011年MBPなので、透明度を控え目にする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-display.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ドックは自動で出たり入ったり、でもほとんど使ってない気がする。アプリの立ち上げは、Spotlight（かAlfred、どっちにするべか。。）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-dock.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;「誰々さんのコンピューター」のネーミングは恥ずかしいので、コンピューターに名前をつけます。宿とかで丸見え、変えてない人がいかに多いか。。。
ちなみに、私の端末はビール名で統一してます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-naming.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;フォルダーのサイドバーを変更。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-finder.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ことえりも、変換候補文字もデカくして、句読点で変換にする。フォントも細いタイプのものに変更。自動変換と推測変換はオフ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-kotoeri.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;メニューバーのバッテリー表示にパーセンを追加。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-battery-percent.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;スポットライトは、デフォルトの状態では勝手にいろんなものを検索の対象にされてしまうので必要なものに絞ります。別に怪しいファイルがあるわけでは無い。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-spotlight.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これも、バックグランドで動かされるとあまり気分が良いものでは無いのでオフにします。
（旅先が多いので、全てのソフトに対して、自動アップデートはオフにしてます。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-applestore.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そして、シェルの変更を行う。環境設定のユーザーより。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-user-group.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-user-account.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;safari&#34;&gt;Safari&lt;/h2&gt;

&lt;p&gt;サファリでは、検索エンジン、ダウンロードファイルの自動解凍処理のオフ、プライベートウィンドウ表示、エクステンションのインストール。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-search-engine.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-safari.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-clean-install-safari-extension.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;データの移行は、~Library/Safari/ をそのまま新しい環境へ。ただし、Extenstionは再インストールする必要がある。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ ちなみに、現在の最強のブラウザー環境は多分、こんな感じなのかな。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-27-firefox-ublock.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;itunes-と-mail&#34;&gt;iTunes と Mail&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;iTunes：iTunesフォルダーをそのままコピー。&lt;/li&gt;
&lt;li&gt;メールは上記のようにスッキリとはいかない。アカウントは新しく設定し直す。メールのルールは &lt;code&gt;~/Library/Mail/V3/MailData/SyncedRules.plist&lt;/code&gt; 持ってくる。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ヒラギノ角ゴシック</title>
      <link>http://goozenlab.com/blog/2016/08/hiragino-sans-w0/</link>
      <pubDate>Sun, 28 Aug 2016 13:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/hiragino-sans-w0/</guid>
      <description>&lt;p&gt;ちょっと面倒な不具合があり、開発機をクリーンインストールしました。折角なので、シエラも入れてみましたが Brew がまた対応していなくhugoが動かないようなので、結局エルキャピタンで落ち着く事になりました、無念。&lt;/p&gt;

&lt;p&gt;で、偶然見つけた日本語フォント &lt;code&gt;ヒラギノ角ゴシック：Hiragino Sans&lt;/code&gt; がかなりいいです。
シエラで付いてきているのかと思ったら、El Capitanにも入っていました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-28-hiragino-sans.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ウェイトも０〜９！！までと細かくあります。ちょっと細めのフォントが個人的には好きで、品があって読みやすいと思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-28-hiragino-sans-w1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;上のスクリーンショットはW1です。レティナのディスプレイであれば、W0でも奇麗に表示されると思います、うらやましい。。（MBA11にてのW.0はちょっと擦れた感じが出る。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-28-hiragino-sans-input.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;何はともあれ、早く新しいMBPを出してほしい。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title> 半透明のモーダルビュー</title>
      <link>http://goozenlab.com/blog/2016/08/modalview-over/</link>
      <pubDate>Sun, 28 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/modalview-over/</guid>
      <description>

&lt;p&gt;iOS6の頃はなんか面倒だったような気がした、下のViewが透けて見えるようなモーダルビューの設定。非常に簡単にできるようになってました。&lt;/p&gt;

&lt;h2 id=&#34;半透明のモーダルビュー設定&#34;&gt;半透明のモーダルビュー設定&lt;/h2&gt;

&lt;p&gt;まずはモーダルビュー自体を半透明化します。背景色を選び透明度を決めます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-28-modalview-overfull.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;それと、StoryboardにてのSegway設定だとなぜかうまく物と、行かないものがありました。あまり深くは掘り下げていませんが、とりあえず情報まで（解決：下記参照）。&lt;/p&gt;

&lt;p&gt;二通りあるようですが、厳密な違いはわからず、表示をテストで行うが全く同じに見えます。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) { 
        if segue.identifier == &amp;quot;toSettingView&amp;quot; {
            if let destinationVC = segue.destinationViewController as? SettingViewController {
                destinationVC.modalPresentationStyle = 
                        UIModalPresentationStyle.OverCurrentContext
                        // UIModalPresentationStyle.OverFullScreen
                destinationVC.delegate = self
            }
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、色々といじっていたら、インスペクターのPresentationの所でも変更ができます。コードでうまくいかなかった時にはこちらでいけます。知らなかったわ。。。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-28-modalview-presentation.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;見た感じこんな風になります（使わないけど、悪い例）。まぁ想像通り、使うなら文字色とか背景の色とかを考慮する必要がありますわな。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-28-modalview-over_current_context.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;追記：すぐ上の白点ボタンの位置がずれてるな。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>StatusBarメモ</title>
      <link>http://goozenlab.com/blog/2016/08/statusbar-memo/</link>
      <pubDate>Fri, 26 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/statusbar-memo/</guid>
      <description>&lt;p&gt;アプリにて、StatusBarを隠す事が多いのだけれど、いつもやり方を忘れるのでメモしておく。&lt;/p&gt;

&lt;p&gt;まずは全体的な設定を、info.plistにて &lt;code&gt;View Controller-based status bar appearance&lt;/code&gt; を追加。(ここのところがいつも「どれだったっけ？」とわからなくなる。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-26-statusbar-info.png&#34; alt=&#34;StatusBar on Info.plist&#34; /&gt;&lt;/p&gt;

&lt;p&gt;info.plistに直接書き込むなら、以下を追加。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;key&amp;gt;UIViewControllerBasedStatusBarAppearance&amp;lt;/key&amp;gt;
	&amp;lt;false/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;そして、変更したいビューの適当なところ、&lt;code&gt;ViewDidLoad&lt;/code&gt; に追加コード。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;UIApplication.sharedApplication().statusBarHidden = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もしくは、オーバーライドしても動くはず。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;override func prefersStatusBarHidden() -&amp;gt; Bool {
    return true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そして、ステータスバーの文字色、黒文字を白文字に変えるには、statusBarStyleStyleを &lt;code&gt;.LightContent&lt;/code&gt; に変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;UIApplication.sharedApplication().statusBarStyle = .LightContent
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Lite VersionとAdmob</title>
      <link>http://goozenlab.com/blog/2016/08/lite-admob/</link>
      <pubDate>Thu, 25 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/lite-admob/</guid>
      <description>

&lt;p&gt;Swiftへの移行がちょっと落ち着いてきたので、お次はライトバージョンの制作に移る。同じプロジェクト内でライト版のターゲットをもつ方法で行います。ライト版では広告を表示するため、コード内のマクロで作業の分離を行います。(XCode7.3.1にて)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ターゲットのコピーと調整&lt;/li&gt;
&lt;li&gt;スキームの変更&lt;/li&gt;
&lt;li&gt;新しいInfo.plistのリネーム、変更と移動&lt;/li&gt;
&lt;li&gt;コンパイル時のマクロ設定&lt;/li&gt;
&lt;li&gt;アイコンの追加&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;が主な作業の流れになります。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;まずはプロジェクトのメインターゲットを Duplicate します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-duplicate.png&#34; alt=&#34;Duplicate Target&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-duplicate-dailog.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-rename-target.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-manage-scheme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;スキーム名の変更はできないようなので、Editボタンの上の＋より、新しいスキームを追加します。ここの、cosper copyのものは＋の横のーボタンで消去します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-add-scheme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-delete-scheme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Info.plistのコピーの &lt;code&gt;cosper copy-Info.plist&lt;/code&gt; はなぜか諸々のファイルのフォルダーの外に作られます。ちょっと面倒ですが、リネームしリファレンスから除き、プロジェクトにコピーして移動、そしていらなくなったファイルを削除をしましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-rename.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-taget-info-copy.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そしてビルドセッティング内のInfo.plistパラメーターをディレクトリー名を含めたファイル名に変更します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-target-info-rename.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そして、ターゲットの設定をします。（バンドル名やその他必要なもの）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-target-general.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;最後に、コンパイル時のマクロ設定をします。&lt;code&gt;#if LITE&lt;/code&gt; で処理を分岐できるようにします。LITE_VERSIONでもFREE_VERSIONでもご自分に適したものにしてください。&lt;/p&gt;

&lt;p&gt;マクロの設定は、ビルドセティングより、右のサーチボックスから検索していくと良いです。フル・ライト両方のターゲットで設定が必要です。ライトにて &lt;code&gt;LITE=1&lt;/code&gt; を、&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-macro-lite.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;フルバージョンの方には &lt;code&gt;LITE=0&lt;/code&gt; を書き込みます。選択すると入力画面が出てきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-macro-full.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そして、ライトバージョンでは、コンパイラーのカスタムフラグを設定します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-macro-flag.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;アイコンもライトバージョン用に追加、変更します。アイコンは、Assets.xcassetsより作成し、ターゲットにて設定します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-add-icon.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-lite-icon-resource.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これで、ライトバージョンのターゲットが完成です。次に、ライトバージョンに広告を入れたいと思います。&lt;/p&gt;

&lt;h2 id=&#34;admobの追加&#34;&gt;AdMobの追加&lt;/h2&gt;

&lt;p&gt;iAdは終了してしまいましたので、定番Googleの AdMob をインストールします。CocoaPods を使って簡単にプロジェクトに追加することもできるのですが、私の開発機の不思議な不具合でココポッドを設定していません。。ファイルを落としてフレームワークを追加という手動インストールをします。（また、近くCocoaPodsを使った方法をアップデートするかもしれません。とりあえずココポッドでのインストール時には、Podfileに &lt;code&gt;target &#39;xx lite&#39; do ...&lt;/code&gt; で切り分ければいいのかな。）&lt;/p&gt;

&lt;h3 id=&#34;フレームワーク&#34;&gt;フレームワーク&lt;/h3&gt;

&lt;p&gt;必要なフレームワークは、以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GoogleMobileAds.framework: Googleサイトよりダウンロード、プロジェクトに&lt;strong&gt;コピー&lt;/strong&gt; (ターゲットをライトバージョンのみにするのを忘れずに）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-24-admob-copy-framework.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;プロジェクトからターゲットを選択して、一番下のLinked Frameworks and Librariesより追加、コマンド＋クリックで複数選択可能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-24-admob-add-frameworks.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AdSupport&lt;/li&gt;
&lt;li&gt;AudioToolbox&lt;/li&gt;
&lt;li&gt;AVFoundation&lt;/li&gt;
&lt;li&gt;CoreGraphics&lt;/li&gt;
&lt;li&gt;CoreTelephony&lt;/li&gt;
&lt;li&gt;EventKit&lt;/li&gt;
&lt;li&gt;EventKitUI&lt;/li&gt;
&lt;li&gt;MessageUI&lt;/li&gt;
&lt;li&gt;StoreKit&lt;/li&gt;
&lt;li&gt;SystemConfiguration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上で準備完了。実装していきます。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;コーディング&#34;&gt;コーディング&lt;/h3&gt;

&lt;p&gt;マクロを使って、以下の形で処理を分けることができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#if LITE
 	// ライトバージョンで行う処理
#else
 	// フルバージョンでの処理
#endif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記の例は、テーブルビューを使ったアプリでの表示例になっています。テーブルビューのヘッダー部分に広告が表示されます。（実際に使っているコードから引用。）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import UIKit
import CoreData
#if LITE
import GoogleMobileAds
#endif

class ListTableViewController: UITableViewController,NSFetchedResultsControllerDelegate {

    #if LITE
    /// The banner view.
    let GADApplicationID = &amp;quot;ca-app-pub-xxxxxxx/xxxxxxx&amp;quot;
    var bannerView: GADBannerView!
    #endif
    
    .......

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        setNavigationBarGestures()
        self.tableView.showsVerticalScrollIndicator = false
        self.tableView.rowHeight = Cell.Height

      .......

        #if LITE
            loadAdmob()
        #endif
     }

	.......
	
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アドモブ用の処理ファイルを別にします。こちらもターゲットをライトバージョンのみにします。（ちょっとすっきりする。）デレゲートにて広告を受け取ったときにテーブルヘッダーに表示する形をとってます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-24-admob-extensrion.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//
//  Admob.swift
//

import UIKit
import GoogleMobileAds

extension ListTableViewController: GADBannerViewDelegate {
    
    func loadAdmob() {
        print(&amp;quot;Google Mobile Ads SDK version: \(GADRequest.sdkVersion())&amp;quot;)
        
        bannerView = GADBannerView(adSize: kGADAdSizeSmartBannerPortrait)
        bannerView.adUnitID = GADApplicationID
        bannerView.delegate = self
        bannerView.rootViewController = self
//	For Debug      
//        let request:GADRequest = GADRequest()
//        request.testDevices = [kGADSimulatorID]
//        bannerView.loadRequest(request)
        bannerView.loadRequest(GADRequest())
    }
        
    func adViewDidReceiveAd(bannerView: GADBannerView!) {
        print(&amp;quot;Admob:adViewDidReceiveAd&amp;quot;)
        let adMobView = bannerView
        
        UIView.beginAnimations(&amp;quot;AdBannerMoveOnScreen&amp;quot;, context: nil)
        self.bannerView.frame = CGRectMake(0.0, 0.0,
                                           adMobView.frame.size.width, adMobView.frame.size.height)
        self.tableView.tableHeaderView = self.bannerView
        UIView.commitAnimations()
    }
    
    func adView(bannerView: GADBannerView!, didFailToReceiveAdWithError error: GADRequestError!) {
        UIView.beginAnimations(&amp;quot;ClearBannerView&amp;quot;, context: nil)
        bannerView.frame = CGRectMake(0.0, 0.0, bannerView.frame.size.width, 0.0)
        tableView.tableHeaderView = bannerView        
        UIView.commitAnimations()
    }
    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;割とあっさりと行きます。（こんな簡単だったけか？？なんか忘れてんのかと、ちと不安。。）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>句読点で変換</title>
      <link>http://goozenlab.com/blog/2016/08/convert-punctuation/</link>
      <pubDate>Tue, 23 Aug 2016 19:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/convert-punctuation/</guid>
      <description>&lt;p&gt;しばし句読点で変換のオプションをオンして使っています。&lt;/p&gt;

&lt;p&gt;今までは、スペースキーを使って自分の思ったタイミングで変換していました。まずは、今までのその習慣からの脱却が大変でした。ちょっと間のあるタイミングでスペースキーを押していたので、ちょっとその所を抜け出すのに少し時間がかかりました。指が勝手に動く。。多分昔から使っていて、おバカなことえりを信用できないので、短い文節単位で変換する癖がついてしまっているようです。&lt;/p&gt;

&lt;p&gt;ちょっと意識して使ってみると変換効率もそれほど悪くなく、バシバシスペースキーを叩く必要も無いように思えてくる。ことえりも割と賢くなっているようです。さらに、それによって、スペースキーを押す時にちょっとトラックパッドに引っかかりポインターがずれることが少なくなりました。&lt;/p&gt;

&lt;p&gt;贅沢を言えば、；や：でも変換してくれるとありがたい。（感嘆符，疑問符でも変換をしてくれます。）&lt;/p&gt;

&lt;p&gt;人により文体が違うので一概には言えませんが、試してみる価値はあると思います、オススメです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-14-japanese-setting.png&#34; alt=&#34;日本語設定&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>dandori v2.8.0</title>
      <link>http://goozenlab.com/blog/2016/08/dandori-280/</link>
      <pubDate>Mon, 22 Aug 2016 22:20:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/dandori-280/</guid>
      <description>

&lt;p&gt;まだまだ続く、Swift移植シリーズ第七弾。しかしながら、Swiftに関して理解が深まっているとはちょっと思えないのがちょっと悲しい。。&lt;/p&gt;

&lt;p&gt;さて、今回のアップデートも新しい機能追加はありません。Swift移行のみの更新です。&lt;/p&gt;

&lt;p&gt;ちょっと問題があって、iOS9以降の対応になります。本来なら、iOS8でも動くはずなのですが、xibファイルが悪さをしているよう。次のバージョンで治せればと思ってます。という事で、バージョン番号も、2.9.0ではなく、2.8.0でアップしています。整理されていないところがたくさんあるので、もう一度書き直すかな、、。&lt;/p&gt;

&lt;p&gt;わたしの実機（iPhone4S+iOS9.)で動かしてみると、スクロールとか、以前より軽快に動いているような気がする。あと、老眼が進行中しているわけでは無いけれど、表示フォントが少し大きくなりました。&lt;/p&gt;

&lt;h1 id=&#34;change-log&#34;&gt;Change Log&lt;/h1&gt;

&lt;h2 id=&#34;2-8-0-100-swift-release-2016-08-23-chiangmai&#34;&gt;[2.8.0 - 100% Swift release] - 2016-08-23 @ ChiangMai&lt;/h2&gt;

&lt;h3 id=&#34;changed&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;アイコンの変更（数字を完全数に変更：今までは素数。気分転換。）&lt;/li&gt;
&lt;li&gt;iOS9以降でのサポート&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;removed&#34;&gt;Removed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;フラグの透明度を削除。（多分ほとんど使われていないと思う）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;注&#34;&gt;注&lt;/h3&gt;

&lt;p&gt;新しい言語のswiftへの完全に書き直しのため、不具合等がある可能性が多々あると思います。お気付きのことがあったらご連絡のほどよろしくお願いいたします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-dandori-280.png&#34; alt=&#34;Dandori Icon&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cosper v1.9.2</title>
      <link>http://goozenlab.com/blog/2016/08/cosper-192/</link>
      <pubDate>Mon, 22 Aug 2016 05:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/cosper-192/</guid>
      <description>

&lt;p&gt;気になっていた部分の調整と、ちょっとした機能を追加しました。&lt;/p&gt;

&lt;h1 id=&#34;change-log&#34;&gt;Change Log&lt;/h1&gt;

&lt;h2 id=&#34;1-9-2-2016-08-22-chiangmai&#34;&gt;[1.9.2] - 2016-08-22 @ ChiangMai&lt;/h2&gt;

&lt;h3 id=&#34;change&#34;&gt;Change&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;左色バーの切り目を、今まではメモがあるものに自動で付いていたのですが、これからは任意での表示になります。オンオフは、詳細ページのメモ入力欄、右下に切り込みボタンで行います。ちょっとタイトかもしれません。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-cosper-192_cut.png&#34; alt=&#34;Cut Edge on memo&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;add&#34;&gt;Add&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;カテゴリー表示時の長押し状態の時にそのカテゴリの総額を表示するようにしました。（最近自転車を買いまして、色々と部品やらアクセサリーやらを買い足していくうちに思いつきました、結構使っちまったな。。。３つのカテゴリーでは少ないかなと思ってますが、、、増やすには左バーの色を増やすか、カテゴリーの色を２色に削るかしかなく、ちょっとムリがある。宿題の一つかな、アイディアのある方はぜひご教授いただけるとありがたいです。）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-22-cosper-192_sum.png&#34; alt=&#34;Totall money spend&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>イフレット</title>
      <link>http://goozenlab.com/blog/2016/08/if-let/</link>
      <pubDate>Thu, 18 Aug 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/if-let/</guid>
      <description>&lt;p&gt;&lt;code&gt;fatal error: unexpectedly found nil while unwrapping an Optional value&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;nil値が戻ってくる可能性のある時の処理方法。&lt;/p&gt;

&lt;p&gt;tableCellに値を渡す時を例に、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# if let xx  = yy { } else { }

if let lock  = event.isLocked as? Bool {
    cell.isLocked = lock
} else {
    cell.isLocked = false
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で新しく、&lt;code&gt;guard let&lt;/code&gt; なんてのが出てきて、こんな風に書き換える事ができ、（&lt;code&gt;else&lt;/code&gt;以降の役割がよくわからない。）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# guard let xx = y else {]

guard let lock  = event.isLocked as? Bool else { return }
cell.isLocked = lock

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そしてしかも、簡略した（?：ニル、？：なの）&lt;code&gt;xx = yy ??&lt;/code&gt; もある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# xx = yy ??
cell.isLocked = event.isLocked as? Bool ?? false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;基本的に同じものなのだろうか？一番下のものがなんとなく分かりやすい気も個人的にはするのだが、あまり推奨はされていないようにも思われる。。。場合によって使い分けるのが良いのか。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Twitterを復活</title>
      <link>http://goozenlab.com/blog/2016/08/tweet/</link>
      <pubDate>Tue, 16 Aug 2016 13:15:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/tweet/</guid>
      <description>&lt;p&gt;つぶやきたい事がある訳では無いけれど、twitterを復活させました。(
アカウント：goozenlab)&lt;/p&gt;

&lt;p&gt;まぁ、広報活動の一つとして考えてます。面白いことや、ためになることは書きませんので、そこのところは悪しからず。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sati v1.9.2</title>
      <link>http://goozenlab.com/blog/2016/08/sati-192/</link>
      <pubDate>Mon, 15 Aug 2016 06:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/08/sati-192/</guid>
      <description>

&lt;p&gt;またちょっとしたミスを見つけていただきましたのでアップデートします。（なかなか一発で行かない、、先に進まん。）&lt;/p&gt;

&lt;p&gt;ついでと言ってはなんですが、履歴ページでデータの複製機能を付けました。&lt;/p&gt;

&lt;p&gt;サティを使えない環境で座った時等の利用を考えてます。（新規追加というのもありますが、、）テストはしてますが、エラーが出ないことを祈りつつ。&lt;/p&gt;

&lt;h2 id=&#34;1-9-2-2016-08-15-chiangmai&#34;&gt;[1.9.2] - 2016-08-15 @ ChiangMai&lt;/h2&gt;

&lt;h3 id=&#34;added&#34;&gt;Added&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Duplicate function on History View.
(In case user meditate without sati. (on situation like group-sitting)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fixed&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;missing french localized string.&lt;/li&gt;
&lt;li&gt;Localized messege after meditation. (it showed in only english)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-08-15-sati-192.png&#34; alt=&#34;Sati 192&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>