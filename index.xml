<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>goozenlab</title>
    <link>http://goozenlab.com/</link>
    <description>Recent content on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Sat, 21 Mar 2015 08:30:00 +0545</lastBuildDate>
    <atom:link href="http://goozenlab.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ビューサイクルとアプリ復帰時の処理</title>
      <link>http://goozenlab.com/blog/2015/03/view-cycle/</link>
      <pubDate>Sat, 21 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/view-cycle/</guid>
      <description>

&lt;p&gt;たまに、何処に何の処理を入れれば良いか分からなくなるので、簡単にまとめる。&lt;/p&gt;

&lt;h2 id=&#34;起動時:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;起動時&lt;/h2&gt;

&lt;p&gt;アプリの起動時には以下の順で呼ばれる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;viewDidLoad()&lt;/li&gt;
&lt;li&gt;viewWillAppear&lt;/li&gt;
&lt;li&gt;viewDidAppear　※すべての画像の処理が終わった後に呼ばれる。あまり使っていない。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;モーダルビューより復帰:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;モーダルビューより復帰&lt;/h2&gt;

&lt;p&gt;モーダルビューより戻ってくると以下の処理が再び呼ばれる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;viewWillAppear&lt;/li&gt;
&lt;li&gt;viewDidAppear&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;ロック-スリープからの復帰時:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;ロック・スリープからの復帰時&lt;/h2&gt;

&lt;p&gt;ロック・スリープからの復帰は処理が行われない（厳密には、AppDelegate内では呼ばれる）ので、アプリの戻ってきた時の処理を追加する。
viewDidLoadに通知の設定する事で可能になる。&lt;code&gt;Setting.bundle&lt;/code&gt;でフォントの設定等を変更し、アプリに戻ってきた時に使う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Notification Center
let app: UIApplication = UIApplication.sharedApplication()
NSNotificationCenter.defaultCenter().addObserver(self, 
		selector: &amp;quot;applicationWillEnterForeground:&amp;quot;, name: UIApplicationWillEnterForegroundNotification, 
		object: app)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と処理を追加する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func applicationWillEnterForeground(notification: NSNotification) {
    println(__FUNCTION__)
    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;スリープに移行時:205901421f8bb17c75d7ebf5b8a21af9&#34;&gt;スリープに移行時&lt;/h2&gt;

&lt;p&gt;逆にスリープに入る時には復帰時と同じで、&lt;code&gt;ApplicationWillEnterForeground&lt;/code&gt; の代わりに &lt;code&gt;ApplicationDidEnterBackground&lt;/code&gt; を使えば良い。（私はアプバッジの登録はAppDelegateで行ってます。）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; NSNotificationCenter.defaultCenter().addObserver(self, selector: &amp;quot;applicationDidEnterBackground:&amp;quot;, name: UIApplicationDidEnterBackgroundNotification, object: app)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>NSLocalizedString on swift</title>
      <link>http://goozenlab.com/blog/2015/03/nslocalizedstring-swift/</link>
      <pubDate>Thu, 19 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/nslocalizedstring-swift/</guid>
      <description>&lt;p&gt;NSLocalizedStringでエラーがでる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSLocalizedString(&amp;quot;Timer&amp;quot;, comment: nil)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;nil&lt;/code&gt;を&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;空白に変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSLocalizedString(&amp;quot;NavigationBar.Button.Timer&amp;quot;, comment: &amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Swiftではnilの扱いがちょっと掴めず、、至る所で問題になってる。。&lt;/p&gt;

&lt;p&gt;ついでに中に入れる文言をかえる。以前は普通に&lt;code&gt;&amp;quot;Timer&amp;quot;&lt;/code&gt;と書いていたところを今回からはドコゾの何某か分かるように&lt;code&gt;&amp;quot;NavigationBar.Button.Timer&amp;quot;&lt;/code&gt;と少し詳しく書き込むようにする。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>delegate on swift</title>
      <link>http://goozenlab.com/blog/2015/03/delegate-swift/</link>
      <pubDate>Wed, 18 Mar 2015 11:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/delegate-swift/</guid>
      <description>

&lt;h2 id=&#34;デレゲートするクラス:b75dbc75cf3a32d046705843360e6789&#34;&gt;デレゲートするクラス&lt;/h2&gt;

&lt;p&gt;以下の３つを書き加えればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;protocol MainHeaderViewDelegate {
    func sleepingTimerDidFinish(controller: MainHeaderView)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;var delegate:MainHeaderViewDelegate? = nil
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt; self.delegate!.sleepingTimerDidFinish(self)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;デレゲートで値を受け取るクラス:b75dbc75cf3a32d046705843360e6789&#34;&gt;デレゲートで値を受け取るクラス&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;MainHeaderViewDelegate&lt;/code&gt; と、functionを追加、処理を書き込みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class MainViewController: UIViewController, MainHeaderViewDelegate {

   //////

   func sleepingTimerDidFinish(controller: MainHeaderView) {
        // 処理
    }

   /////
   
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※ ソースは拙作のohayoからコピペ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UIButttonをSwiftで書く</title>
      <link>http://goozenlab.com/blog/2015/03/uibutton-swift/</link>
      <pubDate>Tue, 17 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/uibutton-swift/</guid>
      <description>&lt;p&gt;UIButttonをSwiftでプログラム的に書くと&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buttonMoodExecelent = UIButton.buttonWithType(UIButtonType.Custom) as UIButton
buttonMoodExecelent.frame = CGRect(x: 0, y: 0, width: 30, height: 30)
buttonMoodExecelent.tag = TagButtonMood.Execelent
buttonMoodExecelent.addTarget(self, action: &amp;quot;selectedMood:&amp;quot;, forControlEvents: .TouchUpInside)
buttonMoodExecelent.setBackgroundImage(UIImage(named: &amp;quot;MoodExecelent&amp;quot;), forState: UIControlState.Normal)

self.vew.addSubview(buttonMoodExecelent)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テキストタイトルの時には&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buttonCancel.setTitle(&amp;quot;cancel&amp;quot;, forState: UIControlState.Normal)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テキストの色を変えるには、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buttonCancel.setTitleColor(UIColor.redColor(), forState: .Normal)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もっと細かく、フォント等も弄りたい時には、&lt;/p&gt;

&lt;p&gt;&lt;code&gt;setAttributedTitle:forState&lt;/code&gt;を使うとさ。&lt;/p&gt;

&lt;p&gt;※ ソースは拙作のohayoからコピペ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ohayo のデザイン</title>
      <link>http://goozenlab.com/blog/2015/03/ohayo-pop/</link>
      <pubDate>Mon, 16 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/ohayo-pop/</guid>
      <description>&lt;p&gt;Swiftへの移行のついでにちょっとohayoのデザインに手を入れてます。ちょっとポップな感じにしようかな。。と。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-ohayo3.png&#34; alt=&#34;Pop ohayo&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-ohayo4.png&#34; alt=&#34;Pop ohayo&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>！Thanks alot for downloading Sati！</title>
      <link>http://goozenlab.com/blog/2015/03/thanx-dowload-sati/</link>
      <pubDate>Sun, 15 Mar 2015 23:50:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/thanx-dowload-sati/</guid>
      <description>&lt;p&gt;!! Obligado, ขอบคุณ, teşekkür ederim, शुक्रिया., Danke, Merci, Gracias, Спасибо, אַ דאַנק, شكرا !!&lt;/p&gt;

&lt;p&gt;Satiのダウンロードがドカーーンと一気に増えました。ダンンャバーッ。たまにどかっとダウンロードが増える事があっても500ぐらいが頭打ちでしたが今回は14,600ダウンロードと桁違い、、ちとビックリです。エラーも無いしちょっと安心。おかげさまで、ダウンロードグラフが見づらくなりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-sati-download.png&#34; alt=&#34;Sati Download&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;・ 通常時のサティダウンロード：3とかたまに二桁 &amp;mdash;&amp;ndash;&amp;gt; 3/13：42 &amp;mdash;&amp;gt; 3/14：14,600。&lt;/p&gt;

&lt;p&gt;どこかしらで、紹介されたのだろうけど、アプストアーか？かなり影響力のある人？なのでしょうか、すごいです。▲&amp;gt;999%とアップの限界値。&lt;/p&gt;

&lt;p&gt;ダウンロードの詳細は以下。USとCanadaが2Kダウンロードずつと飛び抜けてて、ブラジル、メキシコ、タイと続きます。眠れる巨人、中国ではダウンロードされていない様子。トルコがヨーロッパ圏で一番なのがちょっと意外。カザフスタンとか不思議でもある、行ってみるかな。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-sati-world.png&#34; alt=&#34;Sati Download&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-sati-europe.png&#34; alt=&#34;Sati Download&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-sati-southamerica.png&#34; alt=&#34;Sati Download&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-sati-asia.png&#34; alt=&#34;Sati Download&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-15-sati-asia-east.png&#34; alt=&#34;Sati Download&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;!! Thanks again, Obligado, ขอบคุณ, teşekkür ederim, शुक्रिया., Danke, Merci, Gracias, Спасибо, אַ דאַנק, شكرا !!&lt;/p&gt;

&lt;p&gt;thank you very much for downloading sati.&lt;br /&gt;
please be meditation part of your life, into a life. i hope meditation will help nourishing on compassion within us.&lt;/p&gt;

&lt;p&gt;あとは、皆さん瞑想続けてくださいね。というか、英語のREAMEを書き換えなければ。。。ローカライズがボロボロなんですよね。。。&lt;/p&gt;

&lt;p&gt;感謝。&lt;/p&gt;

&lt;p&gt;追記：&lt;/p&gt;

&lt;p&gt;3/18：いつものパターンのホップ・ステップ・玉砕。ダウンロード数が急降下。システムエラーだったのか？と思わせるくらいです。&lt;/p&gt;

&lt;p&gt;3/16：一日たち25.2Kダウンドード。南米、アフリカでは下降線で、ヨーロッパ、アメリカはまだのびる！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-16-sati-world.png&#34; alt=&#34;Sati Download&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xcode 6.1とiOS8.2</title>
      <link>http://goozenlab.com/blog/2015/03/xcode611-ios82/</link>
      <pubDate>Sun, 15 Mar 2015 17:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/xcode611-ios82/</guid>
      <description>&lt;p&gt;検証機を何の迷いも無くiOS8.2にアップデートする。&lt;/p&gt;

&lt;p&gt;で、XCodeにてアプリをビルドしインストールしようと思ったら、、、、できん。。
このXCodeではサポートしないとの親切なエラーメッセージがでる。新しいバージョンのXCodeをインストールするにも、今いるネパールのネット環境ではXcode:2.58GBを落とすのにかなり時間がかかりそう。。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-14-ios82.png&#34; alt=&#34;Xcode 6.1 with ios8.2&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;まぁ仕方ない。。タイもしくはインドに行くまで、シミュレータでしのぐしか無いな。。&lt;/p&gt;

&lt;p&gt;と思ったが、取りあえず試す。（随時アップデート）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2015-03-15 17:30　ルーターとの接続が10分おきに切れる。で、諦める。&lt;/li&gt;
&lt;li&gt;2015-03-15 13:00　再開するも、ダウンロードにはXCodeを落とせと、、で最初からやり直しになる。。&lt;/li&gt;
&lt;li&gt;2015-03-15 06:00　停電中&lt;/li&gt;
&lt;li&gt;2015-03-14 22:45　ルーターの電源を切られる。&lt;/li&gt;
&lt;li&gt;2015-03-14 22:16　59MB 残り７時間くらいと表示&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>StatusBarをSwiftで隠す</title>
      <link>http://goozenlab.com/blog/2015/03/statusbar-swift/</link>
      <pubDate>Sun, 15 Mar 2015 08:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/statusbar-swift/</guid>
      <description>&lt;p&gt;iOSやXCodeのバーションが上がったりすると必ず分からなくなる。statusbarの扱い。&lt;/p&gt;

&lt;p&gt;iOS8とswiftでは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;override func prefersStatusBarHidden() -&amp;gt; Bool {
    return true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を追加するだけで良い。んっ、こんだけ？だったけ？？問題無く動いているようなので、不問。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IntelliJ IDEA 14 CEとJavaSE</title>
      <link>http://goozenlab.com/blog/2015/03/intellij-setup/</link>
      <pubDate>Sat, 14 Mar 2015 12:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/intellij-setup/</guid>
      <description>

&lt;p&gt;Androidの制作を始めて見ようかなとここ数ヶ月思っていてAndroidStudioとかもインストールはしてみたもののなかなか気が向きませんでした。（Javaがどうもねぇ〜。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-intellij.png&#34; alt=&#34;IntelliJ&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;最近、サイトのブログエンジンを変更するにあたって色々とリサーチをしていて、goLangやKotlinという新しい言語の事を知る。そしてそのKotlinという言語は見た目すごくSwiftに似ている。しかもアンドロイドのアプリも作れるらしい。
「これはSwiftのついでに両方勉強すれば一石二鳥では、あわよくばアプリを移植できるかも、、、」と軽率な考えにおされ、Kotlin の開発元から出ているIDE、しかもAndroidStudioの元になっているIntelliJ IDEA でやってみるべと、、ちょっとスウィッチが入りました。&lt;/p&gt;

&lt;p&gt;ダウンロードする物は以下の４つ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;IntelliJ IDEA（無料版）：&lt;a href=&#34;http://www.jetbrains.com/idea/download/&#34;&gt;ダウンロードサイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android SDK：&lt;a href=&#34;http://developer.android.com/sdk/index.html&#34;&gt;ダウンロードサイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin： IntelliJ IDEA の pluginsよりインストール。&lt;/li&gt;
&lt;li&gt;GoLang Plugin：&lt;a href=&#34;https://github.com/go-lang-plugin-org/go-lang-idea-plugin/releases/tag/%23164&#34;&gt;ダウンロードサイト&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;intellij-idea:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;IntelliJ IDEA&lt;/h2&gt;

&lt;p&gt;ダウンロードして立ち上げると、Javaはオラクルのものが既にダウンロードされているにもかかわらずJavaSEが必要とのアラートが上がる。(Not Now) をおしキャンセルする。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-10-intellij-java-alert.png&#34; alt=&#34;alert to download Java&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;以前AndroidStudioをインストールした時と同じ問題で、これはちょこっとアプリのパッケージに入り込んで &lt;code&gt;info.plist&lt;/code&gt;を修正します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-10-intellij-infopilst.png&#34; alt=&#34;info.plist&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;色が反転している所を書き換え（写真は書き換え済みで、元は&lt;code&gt;1.6*&lt;/code&gt;）るとすぅーーっと起動します。でも、これだと、アップデートした時にまた書き直さなければいけないのか？？&lt;/p&gt;

&lt;h2 id=&#34;android-sdk:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;Android SDK&lt;/h2&gt;

&lt;p&gt;次にダウンロードした &lt;code&gt;android-sdk_r24.0.2-macosx&lt;/code&gt; は解凍し所定の場所に保存します。(AndroidStudioでは&lt;code&gt;~/Library/Android/sdk/&lt;/code&gt;の中がデフォルトのようです）そして、&lt;code&gt;/インストール先/tools/android update sdk&lt;/code&gt; を実行して必要なファイルをインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ インストールのディレクトリ/android-sdk-macosx/tools/android update sdk
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kotlin:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;Kotlin&lt;/h2&gt;

&lt;p&gt;もう一丁、&lt;code&gt;Kotlin&lt;/code&gt; をpluginsより入れる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-09-intellij-kotlin.png&#34; alt=&#34;Kotlin Install&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;golang-plugin:6ffa665a054ca576a7ab1f56231855e0&#34;&gt;GoLang Plugin&lt;/h2&gt;

&lt;p&gt;おまけに、ダウンロードした &lt;code&gt;Go.164.zip&lt;/code&gt; を plugins から読み込みます。&lt;/p&gt;

&lt;p&gt;これで、一端な2015年Android開発環境が整いました。さぁーー、何から始めよう。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SwiftでConstantを扱う</title>
      <link>http://goozenlab.com/blog/2015/03/constants-swift/</link>
      <pubDate>Sat, 14 Mar 2015 09:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/constants-swift/</guid>
      <description>&lt;p&gt;Swiftへの移行はスタンフォードの講義を聞きつつ進めたいところなのですが、ここネパールだとちょっと無理。
ネットでの情報も増えつつはあるように思えるが、まだまだな感じ。。&lt;/p&gt;

&lt;p&gt;分からないことが多々あるが、進めていかないと、、&lt;/p&gt;

&lt;p&gt;さて、これが正しい方法なのかは分からないけれども（一抹の不安があるが。。）、コンスタンツの扱いをSwiftにて行うには以下のようにしてます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//
//  LocalConstants.swift
//

import Foundation

    let ONE_DAY = 86400

struct UDKey {
    static let DisplayColorMode = &amp;quot;color_mode&amp;quot;
}

struct Default {
    static let ColorMode = &amp;quot;kawaii&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、他からのアクセスは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;defaults.setValue(Default.ColorMode, forKey: UDKey.DisplayColorMode)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のようにしています。&lt;/p&gt;

&lt;p&gt;※ Swiftでのenumが掴めない。意味が分からない。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>littlistでのバグ</title>
      <link>http://goozenlab.com/blog/2015/03/littlist-265-bug/</link>
      <pubDate>Fri, 13 Mar 2015 20:00:47 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/littlist-265-bug/</guid>
      <description>&lt;p&gt;iOSを8.2にアップデートして自分の端末を色々と弄っていると、
littlistにて &amp;ldquo;RedHot List&amp;rdquo; と &amp;ldquo;期日付き&amp;rdquo; の表示で落ちます。&lt;/p&gt;

&lt;p&gt;OSアプデートのせいかなと、ちょっとソースを見てみると、、またもやケアレスミス。。&lt;br /&gt;
というか、思い込みがあったのか、、DB移行のため同じような作業を数度行ったせいなのか、、&lt;/p&gt;

&lt;p&gt;アプストアから登録を外しそうと思ったがitunesconnetctに繋がらず、、、&lt;br /&gt;
ちょっと他にも漏れが無いか調べて新しいバージョンを申請します。&lt;/p&gt;

&lt;p&gt;アップデートしてしまったユーザーの方々はしばしご勘弁のほど、、&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-13-itunesconnect.png&#34; alt=&#34;itunesconnetct&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HugoとSimplenoteでgitHub-page</title>
      <link>http://goozenlab.com/blog/2015/03/hugo-simplenote/</link>
      <pubDate>Fri, 13 Mar 2015 13:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/hugo-simplenote/</guid>
      <description>

&lt;p&gt;以前は、Octopress+nvALT(SimpleNote Client) でGitHubPageサイトを運用してました。ブログのシステムをHugoに換えたので、nvALTとの連携とデプロイを再設定しました。&lt;/p&gt;

&lt;p&gt;Octopressでは rake deploy で一発で github に更新できたのですが、Hugoではスクリプトを使って行います。&lt;/p&gt;

&lt;p&gt;まずは、github (githubpage用） と bitbucket (その他のファイル）の登録設定。&lt;/p&gt;

&lt;p&gt;（鍵の登録を行っておくとよいです）&lt;/p&gt;

&lt;h2 id=&#34;github-と-bitbucket-の登録:08d78064a6f6cfd09fd68d36f9666ec4&#34;&gt;github と bitbucket の登録&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public/
$ git init
$ git remote add origin https://YOUR_ACCOUNT@bitbucket.org/YOUR_ACCOUNT/YOUR_REPOSITORY.git
$ git add -A
$ git commit -m &amp;quot;initial commit&amp;quot;
$ git push origin master
Password for &#39;https://YOUR_ACCOUNT@bitbucket.org&#39;:
Counting objects: 166, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (163/163), done.
Writing objects: 100% (166/166), 322.06 KiB | 0 bytes/s, done.
Total 166 (delta 3), reused 0 (delta 0)
To https://YOUR_ACCOUNT@bitbucket.org/YOUR_ACCOUNT/YOUR_REPOSITORY.git
 * [new branch]      master -&amp;gt; master
$ git submodule add https://github.com/YOUR_ACCOUNT/goozenlab.github.io.git public
Cloning into &#39;public&#39;...
remote: Counting objects: 9437, done.
remote: Compressing objects: 100% (419/419), done.
remote: Total 9437 (delta 271), reused 0 (delta 0), pack-reused 8762
Receiving objects: 100% (9437/9437), 47.41 MiB | 30.00 KiB/s, done.
Resolving deltas: 100% (4319/4319), done.
Checking connectivity... done.
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;プレビュー方法:08d78064a6f6cfd09fd68d36f9666ec4&#34;&gt;プレビュー方法&lt;/h2&gt;

&lt;p&gt;nvALT:Simplenoteのデータは、ファイル単位として保存しています。保存先をHugo内のpostフォルダーにしてしまうと、そのフォルダー内のNote &amp;amp; Setting ファイル（nvALTの設定ファイル？）がサイト構築時にエラーの元になります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-11-hugo-alt.png&#34; alt=&#34;nvALT:Simplenote&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;nvALT:SimpleNoteの保存先フォルダーをサイトの外部にし、preview時にrsyncで一方通行の同期を行います。&lt;/p&gt;

&lt;p&gt;※ nvALT、あまり知名度が無いように思えるけれどお勧めです。（ctlキーの長押しでプレビューが表示[離すと消える]されたり（数日前に発見！）する。）&lt;/p&gt;

&lt;p&gt;これも簡単なスクリプトで行います。&lt;code&gt;hugo server --buildDrafts --theme=default&lt;/code&gt; のテーマ部分は自身の設定に合わせてください。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hugo_preview.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32m---- rsync ----\033[0m&amp;quot;

rsync -avz --delete --exclude &#39;Notes &amp;amp; Settings&#39; --exclude &#39;Untitled*&#39; --exclude &#39;.*&#39; /&amp;quot;保存先のフォルダ&amp;quot;/ /&amp;quot;HugoSites&amp;quot;/content/post

echo -e &amp;quot;\033[0;32mhugo preview...\033[0m&amp;quot;

hugo server --buildDrafts --theme=default

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;デプロイの方法:08d78064a6f6cfd09fd68d36f9666ec4&#34;&gt;デプロイの方法&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;deploy.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project. 
# if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`
hugo

# Go To Public folder
cd public

# Copy CNAME 
# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back
cd ..

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;その他のファイルの更新は、タイミングを計って手動でdeployしています。自動でbitbukket にも更新を入れたい時は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo -e &amp;quot;\033[0;32mDeploying updates to Bitbukket...\033[0m&amp;quot;

git add -A
git commit -m &amp;quot;$msg&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;をdeploy.sh に追加すれば良いのかな。&lt;/p&gt;

&lt;p&gt;実行のフラグを付けておしまい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chmod +x deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-13-pockhara.jpg&#34; alt=&#34;Pokhara street&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>クラスが読み込めず</title>
      <link>http://goozenlab.com/blog/2015/03/unable-to-load-class/</link>
      <pubDate>Thu, 12 Mar 2015 16:30:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/unable-to-load-class/</guid>
      <description>&lt;p&gt;TapasをSwiftに移行中です。一番癖の無いアプリという事で白羽の矢があたりましたが、、、ブログに引っかかったところ等アップしていきたいと思ってます。&lt;/p&gt;

&lt;p&gt;さて、さて、まずは、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2015-03-11 16:23:14.627 tapas[9910:539155] CoreData: warning: 
Unable to load class named &#39;Item&#39; for entity &#39;Item&#39;.  
Class not found, using default NSManagedObject instead.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というエラーがでる。ファイルはあるのだが、、&lt;/p&gt;

&lt;p&gt;これは、動く。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) {
    let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as NSManagedObject
    var cell = cell as ListViewCell
    cell.textLabel?.text = item.valueForKey(&amp;quot;name&amp;quot;)!.description
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、動かなーーーーい。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func configureCell(cell: UITableViewCell, atIndexPath indexPath: NSIndexPath) {
    let item = self.fetchedResultsController.objectAtIndexPath(indexPath) as Item
    var cell = cell as ListViewCell
    cell.textLabel?.text = item.name
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ネットで調べるにも、、、停電かつ、ネットが途切れ途切れ。。。二進も三進もいかん。。
解決したら加筆します。とりあえず保留。（素直にストーリーボードを使うかな。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2015-03-12-pockhara.jpg&#34; alt=&#34;Pokhara street&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>littlist v2.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/littlist-265/</link>
      <pubDate>Wed, 11 Mar 2015 07:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/littlist-265/</guid>
      <description>&lt;p&gt;ちょっとリマインダーをお借りした、ヤドカリ機能を追加しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;追加

&lt;ul&gt;
&lt;li&gt;バックアップを兼ねた、エクスポート&lt;/li&gt;
&lt;li&gt;リマインダーのリスト（※ デフォルトは &amp;ldquo;littlist&amp;rdquo;）からのインポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;変更&lt;/strong&gt;：以前のバージョンでは新規入力のキャンセル時はキャンセルボタンがありましたが、このバージョンより、&lt;strong&gt;シェイク&lt;/strong&gt;で行います。&lt;/li&gt;
&lt;li&gt;DBの構造を整理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やはり入力はコンピューターを使うのが楽です。ウェブサービスを作ったり、それが為のアプリを作るという方法がありますが、どうも、スッキリしない。というより、無理がある。&lt;/p&gt;

&lt;p&gt;間にリマンダーを挟みますが、簡易な方法として悪くないと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;取込み&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;littlist にて＋のボタンより取り込む&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;書出し&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;ホーム＞設定＞littlist より、書出しのスウィッチを&lt;strong&gt;オン&lt;/strong&gt;にします。&lt;/li&gt;
&lt;li&gt;次回 littlist 起動時に確認アラートが上がり実行します。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ リストのデフォルトは ”&lt;strong&gt;littlist&lt;/strong&gt;&amp;rdquo; になっています。ホーム＞設定＞littlistより変更できます。&lt;/p&gt;

&lt;p&gt;※ 簡単な重複のチェックをしてます。取り込んで、右側のバーの色を変更しなければ、重複チェックの項目として扱われます。（再度取り込んでも重複と見なされて取り込みされません）&lt;/p&gt;

&lt;p&gt;バックアップはついでというか、、折角なので、、、控えめに追加しました。本当はDBの移行がうまく行かなかったのでバージョンアップ時での利用を考え追加したのだが、問題は解決したので、将来的に消すか残すかちょっと考えてます。&lt;/p&gt;

&lt;p&gt;このアプリも最近アップデートしているアプリと同様にiOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tapas v1.6.5</title>
      <link>http://goozenlab.com/blog/2015/03/tapas-165/</link>
      <pubDate>Wed, 11 Mar 2015 03:00:00 +0545</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2015/03/tapas-165/</guid>
      <description>&lt;p&gt;iOS6/7 ユーザーには最後のアップデートになります。&lt;/p&gt;

&lt;p&gt;次期メジャーアップデート向けての準備も兼ねた、マイナーアップデートです。
iOS8ユーザーの方にはアップデートを推奨します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DBの調整&lt;/li&gt;
&lt;li&gt;iOS8での通知許可の設定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;よろしくお願いします。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>