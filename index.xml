<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>goozenlab</title>
    <link>http://goozenlab.com/</link>
    <description>Recent content on goozenlab</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>goozenlab@gmail.com (jin)</managingEditor>
    <webMaster>goozenlab@gmail.com (jin)</webMaster>
    <lastBuildDate>Thu, 15 Sep 2016 08:30:00 +0700</lastBuildDate>
    <atom:link href="http://goozenlab.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>NSRegularExpression</title>
      <link>http://goozenlab.com/blog/2016/09/nsregularexpression/</link>
      <pubDate>Thu, 15 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/nsregularexpression/</guid>
      <description>&lt;p&gt;NSRegularExpressionでのパターンマッチングでドツボ。（NSStringが出てきたりしてちょっと厄介な感じがあります。）&lt;/p&gt;

&lt;p&gt;(a)でのmdファイルのパースでちょっとはまりました。強調部分の抜き出しのとこで、nilが戻ってくる。小一時間ぐらいネットをふらつくも手がかりなし。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let pattern = &amp;quot;^(\\*\\*|__)(.*)(\\*\\*|__)$&amp;quot;

let regex = try? NSRegularExpression(pattern: pattern,
                                     options: NSRegularExpressionOptions.CaseInsensitive)
let matches = regex!.firstMatchInString(text,
                                        options: [],
                                        range: NSMakeRange(0, patternStr.utf16.count))
if let match = matches {
            title = (text as NSString).substringWithRange(match.rangeAtIndex(2))
		...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、しらみ潰しで削ったり変更したりして、どうにか、たどり着いたのが、&amp;rdquo;^&amp;ldquo;（行頭）を削除。で、動くようになりました。&amp;rdquo;^&amp;ldquo;の必要は無いのだけれども、動かなかった理由はわからず。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let pattern = &amp;quot;(\\*\\*|__)(.*)(\\*\\*|__)$&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>リスタリアを公開</title>
      <link>http://goozenlab.com/blog/2016/09/open-listaria/</link>
      <pubDate>Thu, 15 Sep 2016 07:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/open-listaria/</guid>
      <description>&lt;p&gt;買物リストアプリのリトリストを、久しぶりのアップデートと共に、ギットハブに公開しました。&lt;/p&gt;

&lt;p&gt;アプリは最近はほとんどが外食の毎日のため、使用機会がほとんどなく、アップデートも３年前を最後に放置状態。ちょうど先日アップルから30日以内に新しいバージョンを上げないとアップルストアーから消しますよとのメールが届いたのを機に、このままお蔵入りにしてしまおうと思ってました。&lt;/p&gt;

&lt;p&gt;しかし折角作ったものですから、ブログをホストしてもらっているギットハブに恩返しとして公開しようと思うようになり。予定になかったのですが、急遽Swiftに移行作業をしました。&lt;/p&gt;

&lt;p&gt;ちょっとビギナー感満載のソースコードではありますが、、、デザインや機能など、バランスの取れているアプリだと思います。&lt;/p&gt;

&lt;p&gt;簡単なソフトです。プログラムの基本的な所はわりと網羅していますし、これからiOS開発を勉強する方々には、ちょっと落として中のコードを見たり、いじったりするにも良いかなと、、（私の勉強方法）割と良い教材になるのではと、思ってます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-13-listaria-180.png&#34; alt=&#34; listaria 180&#34; /&gt;&lt;/p&gt;

&lt;p&gt;良いアイディアがあったら、どしどしコメントのほど、&lt;/p&gt;

&lt;p&gt;ぼやき：今日の夕方の飛行機で日本に一時帰国をするんですが、なんか気が重い。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>listaria v1.8.0</title>
      <link>http://goozenlab.com/blog/2016/09/listaria-180/</link>
      <pubDate>Wed, 14 Sep 2016 13:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/listaria-180/</guid>
      <description>&lt;p&gt;使い込むほど馴染んでくる（多分）経年変化が楽しめる、育てるショッピングリスト、リスタリアを、&lt;/p&gt;

&lt;p&gt;ひさーーーしぶりにアップデート、Swiftならんは100%リリースです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-13-icon-listaria.png&#34; alt=&#34; icon listaria &#34; /&gt;&lt;/p&gt;

&lt;p&gt;たまに落ちますが、原因がちょっと掴めず、リリースに踏み切りました。&lt;/p&gt;

&lt;p&gt;ちょうど先日アップルから30日以内に新しいバージョンを上げないとアップルストアーから消しますよとのメールが届いたので良いタイミングのアップデートになりました。しかしながら、新しい機能はありません。ちょっと色合いが変わった程度です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-13-listaria-180.png&#34; alt=&#34; listaria 180&#34; /&gt;&lt;/p&gt;

&lt;p&gt;しかし、ソースコードを少し綺麗にして、近く&lt;strong&gt;ギットハブに公開&lt;/strong&gt;します。（オープンソース化第二弾）&lt;/p&gt;

&lt;p&gt;最近はほとんどが外食の毎日なので、自分で使うことがほとんど無くなってしまい、新しい機能も思いつきませんでした。アイディアなどある方は、ご気軽にコメントをください。&lt;/p&gt;

&lt;p&gt;ぼやき：ウェスタンデジタルの外付けハードディスクが蟻の巣になっていました。ふったら出てくるわ出てくるわ。。。びっくりして、コンクリーの床に落としてまうし。。。開けてみたら、卵だらけやし。。よほど居心地が良かったようですな。。。とりあえず、壊れていないようのので良かった。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ブロック表記</title>
      <link>http://goozenlab.com/blog/2016/09/block-3ways/</link>
      <pubDate>Mon, 12 Sep 2016 09:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/block-3ways/</guid>
      <description>

&lt;p&gt;３つの記述方法があるようです、毎回ブロックにぶち当たると作業が止まるのでメモとして残す。&lt;/p&gt;

&lt;p&gt;ブロックでっせ！と、こんな感じで出てきます、&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-11-block-enumerateLines.png&#34; alt=&#34; block-enumerateLines &#34; /&gt;&lt;/p&gt;

&lt;p&gt;ダブルクリックで、意味がわからなくなる。この前置詞 &lt;code&gt;in&lt;/code&gt; ちゅーのが曲者、どこの中じゃ？。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-11-block-enumerateLines-click.png&#34; alt=&#34; block-enumerateLines-click&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;その一&#34;&gt;その一&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;addressString.enumerateLines ({
    (line: String, inout stop: Bool) -&amp;gt; () in
    
    print(line)
})
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;trailing-closure-syntax-を抜いてます&#34;&gt;Trailing closure syntax：（）を抜いてます。&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;addressString.enumerateLines {
    (line: String, inout stop: Bool) in
    
    print(line)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;xcodeの簡易バージョン&#34;&gt;XCodeの簡易バージョン&lt;/h2&gt;

&lt;p&gt;これが一番意味がつかめないのですが、最初に出てきたときによく見ろということですな。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;addressString.enumerateLines {
    (line, stop) in
    
    println(line)
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>unwindからアンワインド</title>
      <link>http://goozenlab.com/blog/2016/09/unwind-unwind/</link>
      <pubDate>Mon, 12 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/unwind-unwind/</guid>
      <description>&lt;p&gt;早くも、unwindからアンワインドします。&lt;/p&gt;

&lt;p&gt;何が問題だったかというと、メインテーブルビューからプッシュして他のテーブルビューへ、そしてモーダルビューを表示。そのモーダルビューをアンワインドをしたいのだけれども、&lt;code&gt;@IBAction func unwind___XXX___&lt;/code&gt; のアンワインドコードを入れても無視される。&lt;/p&gt;

&lt;p&gt;いろいろ試してみた所、メインテーブルビューには戻ることはできる。しかし、一気に戻ることになってしまう。たぶん、ナビケーションバーの構造のせいだと思うのだけど、解決方法が見つからず。。&lt;/p&gt;

&lt;p&gt;結局使えないセグウェのアンワインド、以前からのデレゲートのタイプに変更する。&lt;/p&gt;

&lt;p&gt;ストーリーボード。。も〜使わん。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ohayo v2.9.2</title>
      <link>http://goozenlab.com/blog/2016/09/ohayo-292/</link>
      <pubDate>Sat, 10 Sep 2016 08:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/ohayo-292/</guid>
      <description>

&lt;p&gt;気になっていた、ステータスバーを非表示に、メッセージの修正。快眠時間前の起床時に快眠ノーティス音の解除。（快眠音のノーティスは動いているはずですが、私爆睡野郎なので、音に気がつくのが一週間に一回ぐらい、ちょっと本当に毎日動いているか不安。寝起きは良いんですけどね。。）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-07-ohayo-292.png&#34; alt=&#34;ohayo-292&#34; /&gt;&lt;/p&gt;

&lt;p&gt;と、マイナーアップグレードです。ちょっと飛行機のアイコンがなくなって悲しくもあるのはたぶん私だけでしょう。。。&lt;/p&gt;

&lt;p&gt;機能的に新しいことが思いつきません、何かご希望、ご要望がありましたら、気軽にリクエストしてください。&lt;/p&gt;

&lt;h1 id=&#34;change-log&#34;&gt;Change Log&lt;/h1&gt;

&lt;h2 id=&#34;2-9-2-2016-09-10-chaingmai&#34;&gt;[2.9.2] - 2016-09-10 @ Chaingmai&lt;/h2&gt;

&lt;h3 id=&#34;fixed&#34;&gt;FIxed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;快眠時間前の起床時に快眠ノーティス音の解除&lt;/li&gt;
&lt;li&gt;起床後のメッセージの修正。&lt;br /&gt;
（毎日使っているのに気がつきませんでした。。&amp;rdquo;How&amp;rsquo;s meditaion&amp;rdquo;って他のアプリのものの変更忘れ。。。）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;changed&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ステータスバーを非表示&lt;/li&gt;
&lt;li&gt;睡眠時間表示の調整（少し大きく、太くしました）&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>open.sati</title>
      <link>http://goozenlab.com/open/sati/</link>
      <pubDate>Sat, 10 Sep 2016 00:00:00 +0000</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/open/sati/</guid>
      <description>

&lt;h1 id=&#34;目次&#34;&gt;目次&lt;/h1&gt;

&lt;p&gt;アプリも買う時代から作る時代に移ってきていると思います。
XCodeも無償で提供されてますし、XCode7より、実機へのインストールもAppleIDがあれば、有料のプログラムに登録しないでもできるようになりました。
自分に必要なものを自分の思うように作って使うという環境がもう既に整っています。&lt;/p&gt;

&lt;h2 id=&#34;準備&#34;&gt;準備&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;ダウンロード：&lt;code&gt;git clone git:xxx.xxxx.xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;実機で動かすための方法&lt;/li&gt;
&lt;li&gt;XCodeのちょっとした使い方&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;全体の構造&#34;&gt;全体の構造&lt;/h2&gt;

&lt;p&gt;何がどのように使われているかの説明。全体が把握できるとコードを読むのがかなり楽になります。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;メインビュー：構成は以下のようになっています。

&lt;ol&gt;
&lt;li&gt;背景：透明度の入った画像を表示&lt;/li&gt;
&lt;li&gt;瞑想回数ラベル&lt;/li&gt;
&lt;li&gt;右左のボタン&lt;/li&gt;
&lt;li&gt;上部

&lt;ol&gt;
&lt;li&gt;日付ラベル：日付をフォーマットして表示&lt;/li&gt;
&lt;li&gt;タイムライン：音の鳴るタイミングを表示、静寂モード時には月のマークを表示&lt;/li&gt;
&lt;li&gt;ボタン：静寂モードのスウィッチとして&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;中部：３つのコンポーネントを重なって配置

&lt;ol&gt;
&lt;li&gt;カスタムビュー：瞑想時間パイ&lt;/li&gt;
&lt;li&gt;カスタムビュー：最近の状況グラフ（時間パイと円の隙間に表示）&lt;/li&gt;
&lt;li&gt;ボタン：設定画面に移動&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;下部

&lt;ol&gt;
&lt;li&gt;カスタムビュー：履歴バー&lt;/li&gt;
&lt;li&gt;ボタン：履歴画面に移動&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;設定ビュー：シンプルなテーブル式の構成&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;UIView：ヘッダービュー

&lt;ol&gt;
&lt;li&gt;タイトル&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;カスタムビュー：メイン画面のカスタムクラスの流用&lt;/li&gt;
&lt;li&gt;スライダー：瞑想時間設定&lt;/li&gt;
&lt;li&gt;セグメント：背景画像の選択&lt;/li&gt;
&lt;li&gt;スィッチ：静かモード&lt;/li&gt;
&lt;li&gt;セグメント：終了音の選択&lt;/li&gt;
&lt;li&gt;UIView：フッター

&lt;ol&gt;
&lt;li&gt;ボタン：戻る&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;履歴ビュー：テーブルビュー&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;UIView：ヘッダービュー

&lt;ol&gt;
&lt;li&gt;タイトル&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;テーブルビュー：瞑想履歴の表示

&lt;ol&gt;
&lt;li&gt;カスタムテーブルセル：&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;UIView：フッター

&lt;ol&gt;
&lt;li&gt;ボタン：戻る&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;インターフェイス&#34;&gt;インターフェイス&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;ボタン&lt;/li&gt;
&lt;li&gt;レーベル&lt;/li&gt;
&lt;li&gt;テキストフィールド&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;デザイン&#34;&gt;デザイン&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;レイアウト&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;おまけ-関連するブログポスト&#34;&gt;おまけ：関連するブログポスト&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://goozenlab.com/blog/2016/09/github-open-sati/&#34;&gt;ギットハブ公開前の作業&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://goozenlab.com/blog/2016/09/app-icon-naming/&#34;&gt;アイコンとネーミング&lt;/a&gt;

&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>iPhone7</title>
      <link>http://goozenlab.com/blog/2016/09/iphone7/</link>
      <pubDate>Fri, 09 Sep 2016 13:15:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/iphone7/</guid>
      <description>&lt;p&gt;斬新さの無い発表会でした。ちょっと夜半に目が覚めて、ネットをチェックしたら、終盤の一部、気持ちの悪いパフォーマンスが流れてて、、、一気に眠気が飛びました。&lt;/p&gt;

&lt;p&gt;ジェットブラックも良いですが、装飾品の会社では無いのだから、もっとテクノロジーに力を入れて貰いたい。そして、代わり映えの無いデザイン、この一年（というか、ここ数年）デザインチームは何をしているのか？仕事が私には見えません。&lt;/p&gt;

&lt;p&gt;どうも、これではたぶん新しいマックブックプロも！お待ちかねのピンクゴールドが出ました！みたいな、マイナーアップグレードのみであまり期待できそうもない。。あーー期待が大きいだけに、出てもいないのになんか残念な気分。&lt;/p&gt;

&lt;p&gt;iPhoneもAppleWatchも日本Suica対応バージョンらしく、海外のApple Payは使えず。（こうゆうのは&lt;strong&gt;今更&lt;/strong&gt;やめてもらいたい。。）&lt;/p&gt;

&lt;p&gt;ということで、&lt;/p&gt;

&lt;p&gt;iPhoneは4Sをもう1年引っ張る。（私の中では最高傑作の携帯端末、バッテリーがへたっているも問題なし。）&lt;br /&gt;
アップルウォッチも今回は買う予定でいたけれど、
世界対応にならないことには要りません。&lt;/p&gt;

&lt;p&gt;しかも、&lt;strong&gt;高い&lt;/strong&gt;です。コモディティー化とか言われてたけど、高級機はそんなに値落ちしない感じ。金持ちはいっぱいいるってことだわな。&lt;/p&gt;

&lt;p&gt;とにかく、お次はマックブックプロ。ジェットブラックでよろしく。&lt;/p&gt;

&lt;p&gt;はよ、なるはやで、たのんます。&lt;br /&gt;
（バッテリーの持ちが10時間ぐらいであれば、文句を言わずに買い換えます。）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>unWind segway</title>
      <link>http://goozenlab.com/blog/2016/09/segway-unwind/</link>
      <pubDate>Fri, 09 Sep 2016 08:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/segway-unwind/</guid>
      <description>&lt;p&gt;今までは、移行先のデレゲートで処理を行っていた事を、便利そうなSegueのunWindでやってみようと思いました。しかしながら、XCodeのストーリーボードでいろいろ探しても、どこにもそれらしくものが見つかりません。使うのやめようかとも思いましたが、調べました。簡単にどこかでコントロールクリックすればできると思ってましたが、違いました。&lt;/p&gt;

&lt;p&gt;使いたい例は、ListVC（リストViewController)からセグウェイでDetailVCに行き、DetailVCにて編集終了後、unWindするという流れ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ListVCからDetailVCにセグウェイを設定（コントロールドラッグ）&lt;/li&gt;
&lt;li&gt;ListVCに下記のコードを追加&lt;/li&gt;
&lt;li&gt;DetailVCのexitをクリック、コネクションインスペクターにコードで追加したファンクションが&lt;strong&gt;表示&lt;/strong&gt;される&lt;/li&gt;
&lt;li&gt;リンクをボタンなりに繋ぐ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-08-segway-unwind.png&#34; alt=&#34; segway-unwind&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ListVCに追加したコードは、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@IBAction func unwind___XXX___(unwindSegue: UIStoryboardSegue, towardsViewController subsequentVC: UIViewController) または (unwindSegue: UIStoryboardSegue)
 {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;いろいろ試したところ、&lt;code&gt;@IBAction func unwind___XXX___&lt;/code&gt; が入っていれば認識されるよう&lt;code&gt;___XXX___&lt;/code&gt;の部分は必要なものに置き換えてください。引数も&lt;code&gt;(unwindSegue: UIStoryboardSegue)&lt;/code&gt;が入っていれば問題は無いようですが、こちらも追加・変更可能のようです。&lt;/p&gt;

&lt;p&gt;あとListVCでデーターを処理して、以前からのデレゲートでの処理と同じになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@IBAction func unwindFromDetailView(unwindSegue: UIStoryboardSegue) {

	// 処理
	let title = unwindSegue.sourceViewController.title
	
	.........
	
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;XCode7では、unwind&amp;hellip;をタイプすると下記のコードを書き出してくれますが動きません。中途半端だ、、ちょっと数時間、嫌〜〜な気分になりました。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;override func unwindForSegue(unwindSegue: UIStoryboardSegue, towardsViewController subsequentVC: UIViewController) {
        &amp;lt;#code#&amp;gt;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;やっぱり、ストーリーボードは好きになれません。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cosper v1.9.3</title>
      <link>http://goozenlab.com/blog/2016/09/cosper-193/</link>
      <pubDate>Thu, 08 Sep 2016 08:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/cosper-193/</guid>
      <description>

&lt;p&gt;固定だったcosperのコスパ総額表示: &lt;a href=&#34;http://goozenlab.com/blog/2016/09/cosper-display/&#34;&gt;記事&lt;/a&gt; を選択可能にしました。きつきつの表示を嫌う方はオフにできます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-01-cosper-display.png&#34; alt=&#34;cosper display&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;change-log&#34;&gt;Change Log&lt;/h1&gt;

&lt;h2 id=&#34;1-9-3-2016-09-08-chiangmai&#34;&gt;[1.9.3] - 2016-09-08 @ ChiangMai&lt;/h2&gt;

&lt;h3 id=&#34;fix&#34;&gt;Fix&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;セルの消去時など、動きがスムースで無いところを調整しました。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;add&#34;&gt;Add&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;金額表示設定の追加：デフォルトは下記画像のように総額表示のみの設定になっています。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-06-cosper-193.png&#34; alt=&#34; cosper-193 &#34; /&gt;&lt;/p&gt;

&lt;p&gt;おまけ：クリーンインストール後、プロビジョンがグジャグジャになってるな。Revokeしたのがまちがいか、、とりあえず、XCodeにお任せでFixして行ってみる。問題があればビルドや、アプストアップ時に問題になるので様子見。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>アイコンとネーミング</title>
      <link>http://goozenlab.com/blog/2016/09/app-icon-naming/</link>
      <pubDate>Wed, 07 Sep 2016 12:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/app-icon-naming/</guid>
      <description>

&lt;p&gt;アプリを作る最初の一歩。XCodeでプロジェクを新規、で・・・・。アプリを作ろうと思って最初につまずくところ、アプリの名前。&lt;/p&gt;

&lt;p&gt;個人的にアイコン作りと、アプリのネーミングを考えたりするのは好きですが、頭を悩ますところでもあります。
別に新しいことはないと思いますが、自分がどのようにしたのか、ちょっと書いてみたいと思います。（あとで変更は可能なのですが、私は名前が決まらないと、なんか居心地が悪いというか、、）&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-06-app-icon-naming.png&#34; alt=&#34; app icon naming&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;naming&#34;&gt;Naming&lt;/h2&gt;

&lt;p&gt;理想的に、パッと目に入るような名前だと最高なのですが、、、。&lt;/p&gt;

&lt;p&gt;私のアプリの名前のつけ方は簡単に書くと、「作るソフトの機能に関連する言葉を広げていって、いじってみたり、語呂を何かと合わせてみたりして、いくつかに絞り、最終的に響きの良いものを選ぶ」かな、後々パッと浮かんだことは残念ながら無いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;liitlist：”little + list” もしくはminimalistてきな ”little + ist” から&lt;/li&gt;
&lt;li&gt;doop：duplicationを捻って、向かいから見てもdoop、１回転してもdoop。リサイクル管理系のアプリ（エネループも頭にあったかな。）&lt;/li&gt;
&lt;li&gt;ohaYo：睡眠ログアプリ。Yが大文字なのがこだわり&lt;/li&gt;
&lt;li&gt;ippuku：「俺働きすぎ？一体いつ一服できんだ？」とアプリを作る時にあった想いから&lt;/li&gt;
&lt;li&gt;コスパ：シンプルにコストパフォーマンスより&lt;/li&gt;
&lt;li&gt;tapas：マルチキッチンタイマー、ご存知スペイン料理のおつまみの総称（次点は、タンドリーチキンを変化させて「ダンドリーキッチン」だったかな。）&lt;/li&gt;
&lt;li&gt;sati：瞑想アプリなので、パーリー語（仏教用語：念、気づき）より&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;外国語を使うとなんとなくオシャレになる。今度は漢字を使った漢なソフトでも作るかな。&lt;/p&gt;

&lt;p&gt;自分でいいなと思ったアプリ名とか商品名をリストしてみて、その共通項や特徴を見つけてみることも良い助けになると思います。&lt;/p&gt;

&lt;p&gt;拙作のなかでの傑作ネーミングは、doop littlist と (a) だと、他のソフトは割とありきたりのネーミング、平均点。&lt;/p&gt;

&lt;p&gt;※ (a) はアイディアの元になっているファイルの表記方法からとっていて、結局そのプランはダメになってしまったんですが、
日本語にすると、かっこえー（格好えー）になる。&lt;/p&gt;

&lt;h2 id=&#34;icon&#34;&gt;Icon&lt;/h2&gt;

&lt;p&gt;アプリの顔です。個人製作のアプリということを考慮すると割に出来の良い方だと思います。センスも大事だとは思いますが、ちょっとしたルールでそれなりに仕上がると思います。無理しすぎないことが割と重要でないかと、、&lt;/p&gt;

&lt;p&gt;個人的に注意していること&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;なるべく、アプリで使っているコンポーネントから、親和性&lt;/li&gt;
&lt;li&gt;アプリで使っている色、白バックでも黒バックでも問題ないように、&lt;/li&gt;
&lt;li&gt;フォントは雰囲気に合ったもの&lt;/li&gt;
&lt;li&gt;グリッドに合わせる（人間の目って割と精巧で、ずれていると違和感を感じます。）&lt;/li&gt;
&lt;li&gt;シンプルかつシンプル&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;色は自分で使う色を絞り込んでまとめています。全部で20色ぐらいのパレットになっています。&lt;/p&gt;

&lt;p&gt;数年前の、iOS8よりフラットデザインになってアイコンデザインを結構変えました。それまで、使っていたグラデーションもすごく微妙な感じにして、全体的にシンプルにしました。良い変更例は下記のオハヨのケース。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-06-app-icon-ohayo.png&#34; alt=&#34; app-icon-ohayo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;私のお気に入りは、littlist、doopかな。（littlistは最初からずっと同じデザイン、自画自賛アイコン。）&lt;/p&gt;

&lt;p&gt;ちなみに、リスタリアというソフトでは、数字のところにバージョンナンバーが、そして、買い物リストのアプリなので、果物の名前をバージョンごと違うものを入れています。バーコードも適当ではありません。スキャナーで読み取ることもできます。ちょっとしたお遊び。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-06-app-icon-listaria.png&#34; alt=&#34; app-icon-listaria &#34; /&gt;&lt;/p&gt;

&lt;p&gt;ちなみにアイコン制作に使っているアプリは、以前はアドビのFireworksで、今はAffinity Designerを使ってます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>サティを公開</title>
      <link>http://goozenlab.com/blog/2016/09/open-sati/</link>
      <pubDate>Tue, 06 Sep 2016 09:30:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/open-sati/</guid>
      <description>&lt;p&gt;簡単な履歴機能などがついた瞑想タイマーアプリ、サティをギットハブに公開 &lt;a href=&#34;https://github.com/goozenlab/sati&#34;&gt;Link @ github&lt;/a&gt; しました。ということは、恥ずかしながらオープンソースにしたということです。ライセンスは無難に、MITライセンスにしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-06-open.sati-main.png&#34; alt=&#34; open.sati &#34; /&gt;&lt;/p&gt;

&lt;p&gt;プログラマーでない独学万年日曜プログラマーが作ったアプリなので、ある意味、初心者の方には読みやすいコードになっていると思います。別の言い方ですと、幼稚なコードとも言えます。。&lt;/p&gt;

&lt;p&gt;XCodeも無償で提供されてますし、XCode7より、実機へのインストールもAppleIDがあれば、有料のプログラムに登録しないでもできるようになりました。
自分に必要なものを自分の思うように作って使うという環境がもう既に整っています。&lt;/p&gt;

&lt;p&gt;これからアプリを作ってみたいと思っている人たちへの最初の数歩のお役に立てればと思って公開に踏み切りました。&lt;/p&gt;

&lt;p&gt;細かいコードや製作時に考えたことなどについて少しづつ書いてまとめたいと思ってます。&lt;/p&gt;

&lt;p&gt;とりあえず新しく&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;メモ追加欄を瞑想終了後のムード選択欄に追加&lt;/li&gt;
&lt;li&gt;履歴ページにて、瞑想追加ボタンとビュー&lt;/li&gt;
&lt;li&gt;設定画面のスタティックビュー化&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;が先追加したいことのリスト。タイミングを見て追加作成したいと思います。&lt;/p&gt;

&lt;p&gt;※公開の方法などは&lt;a href=&#34;http://goozenlab.com/blog/2016/09/github-open-sati/&#34;&gt;こちら&lt;/a&gt;にて書きましたので関心のある方は参照のほど。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ギットハブ公開</title>
      <link>http://goozenlab.com/blog/2016/09/github-open-sati/</link>
      <pubDate>Tue, 06 Sep 2016 07:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/github-open-sati/</guid>
      <description>

&lt;p&gt;ギットハブ公開に向けて行ったこと。XCodeでのプロジェクト設定とこれからの管理について。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;問題点&lt;/strong&gt;：ギットハブに公開するプロジェクトには、バンドルアイデンティファイヤ、AppleIDを入れたくない。そして、アプストアーに公開するにはコードサインをしなくてはいけない。（アイデンティファイヤ、AppleIDが必要）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解決案&lt;/strong&gt;：二つのプロジェクトと共有コードの形での運用&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;一つ目のプロジェクトは、作業用。ギットハブと連動して作業をします。個人情報入れないでも、シミュレーターでアプリを動かすことができます。&lt;/p&gt;

&lt;p&gt;もう一つは、アプストアービルド、デプロイ用。プロジェクトファイル以外は、上のプロジェクトからファイルをリンクします。（コピーではなく、シンボリックリンクにみたいなもの？）このプロジェクトには、アプストアーに登録するための情報を入れておきます。ギットは使いません。&lt;/p&gt;

&lt;h2 id=&#34;作業&#34;&gt;作業&lt;/h2&gt;

&lt;p&gt;サティを公開するための行った作業をちょっと詳しく。まずは今まで作業していたフォルダーを一気にコピー。&lt;/p&gt;

&lt;p&gt;一つを、open.sati (公開用） もう一つを sati (デプロイ用）にします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-folder.png&#34; alt=&#34; open.sati folders &#34; /&gt;&lt;/p&gt;

&lt;p&gt;ともにフレッシュスタートということで、ディレクトリー内にある .git　ディレクトリーを削除します。隠れファイルなので、ターミナルから &lt;code&gt;rm -rf .git/&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-remove-git.png&#34; alt=&#34; remove git &#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;sati-アプストアー-実機検証用&#34;&gt;sati：アプストアー、実機検証用&lt;/h3&gt;

&lt;p&gt;satiの中のファイルはフロジェクトファイル、info.plist以外、全て捨ててしまいます。&lt;/p&gt;

&lt;p&gt;プロジェクト内は真っ赤になります。一気に消してしまいます。&lt;/p&gt;

&lt;p&gt;そして、open.sati のフォルダーからファイルをまとめてドラッグ＆ドロップ。ダイアリグが出ます。コピーのチェックは外します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-import-files.png&#34; alt=&#34; open.sati  import-files&#34; /&gt;&lt;/p&gt;

&lt;p&gt;残念ながら、&lt;code&gt;Localizable.strings&lt;/code&gt; がうまく引き継がれません。（多分ローカライズされたnibファイルなども引き継がれないと思います。）コマンドオプション＋ドラッグのエイリアスでファイルを持ってくるもNG。しかし、XCode上でファイルを一旦 open.sati よりコピーして消し、ターミナルで リンクを &lt;code&gt;ln -s&lt;/code&gt; でリンクしてあげれば読み込みます。なんか中途半端ですが動きます。ディレクトリーはこんな感じになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-folder-list.png&#34; alt=&#34; folder listing &#34; /&gt;&lt;/p&gt;

&lt;p&gt;そして、README や LICENCE 等、ターゲットに入れないファイルをメンバーから外します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-target-check.png&#34; alt=&#34; target-check &#34; /&gt;&lt;/p&gt;

&lt;p&gt;で、ビルドの設定などは引き継がれたままなので実機でもアプストア用のビルドなども今まで通り動きました。（アップロードはしていませんが、多分大丈夫だと思います。）&lt;/p&gt;

&lt;p&gt;こちらのプロジェクトでは、ファイルをいじらないようにします。あくまでも、ビルドと実機テストようにします。&lt;/p&gt;

&lt;h3 id=&#34;open-sati-ギットハブ-作業用&#34;&gt;open.sati：ギットハブ、作業用&lt;/h3&gt;

&lt;p&gt;まずプロジェクトファイルを開けて、公開したくないものを抜きます。そして、リンクしているファイルがないかチェック。（私は、ビルド時にローカルからのファイルを参照しているところがあるので、その設定も抜きます。デプロイ用についていれば問題はない。）
幾つかのファイルは他のアプリと共有しているので、こっちのプロジェクトにコピーをします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-identity.png&#34; alt=&#34; open.sati-identity&#34; /&gt;&lt;/p&gt;

&lt;p&gt;一通りチェックを終えたら、シミュレーターで動くかチェックします。&lt;/p&gt;

&lt;p&gt;これで、作業はギットハブのプロジェクトで行う。ギットハブと共有しているプロジェクトでもシミュレーターで動かせることができ、検証機で動かしたい時とアプストアーにアップする時は別のプロジェクトですれば良い。デプロイ用はほとんど手を入れる必要はない、はず。&lt;/p&gt;

&lt;p&gt;そして、公開します。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;追記&lt;/strong&gt;：
READMEとライセンスはプロジェクトと同じ階層に置いておきましょう。ギットハブではそのREADが読み込まれ表示されます。&lt;/p&gt;

&lt;h2 id=&#34;ギットハブに公開&#34;&gt;ギットハブに公開&lt;/h2&gt;

&lt;p&gt;公開をするには、ギットハブに載っている方法で行います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-git-add.png&#34; alt=&#34; open.sati git add&#34; /&gt;&lt;/p&gt;

&lt;p&gt;まずはギットの初期化、その後、ファイルを追加して、コミットします。（ちょっとREADMEに何を書けばいいか悩みましたが、）９月６日のくろ～の日に公開。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-05-open.sati-initial-setup.png&#34; alt=&#34; open.sati-initial-setup &#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;duvel:open.sati jin$ git init
duvel:open.sati jin$ git add .
duvel:open.sati jin$ git commit -m &amp;quot;Initial Commit&amp;quot;
duvel:open.sati jin$ git remote add origin git@github.com:goozenlab/sati.git
duvel:open.sati jin$ git push -u origin master
Warning: Permanently added the RSA host key for IP address &#39;[192.30.253.122]:443&#39; to the list of known hosts.
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;鍵の設定でエラーが出ますが、作ってある公開鍵をコピーしギットハブの設定より新しい鍵の追加設定をします。&lt;a href=&#34;https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/&#34;&gt;参照&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-06-open.sati.ssh-key.png&#34; alt=&#34; /open.sati.ssh-key&#34; /&gt;&lt;/p&gt;

&lt;p&gt;で再度挑戦、こんどはうまくいきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;duvel:open.sati jin$ git push -u origin master
Warning: Permanently added the RSA host key for IP address &#39;[192.30.253.123]:443&#39; to the list of known hosts.
Counting objects: 155, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (149/149), done.
Writing objects: 100% (155/155), 10.10 MiB | 39.00 KiB/s, done.
Total 155 (delta 37), reused 0 (delta 0)
remote: Resolving deltas: 100% (37/37), done.
To git@github.com:goozenlab/sati.git
 * [new branch]      master -&amp;gt; master
Branch master set up to track remote branch master from origin.
duvel:open.sati jin$
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;伴う追加作業&#34;&gt;伴う追加作業&lt;/h2&gt;

&lt;p&gt;sati.xcodeprojで引き継げないところは、個別に変更する必要があります。（ビルド番号など）
このプロジェクトの場合、ビルド終了時走らせているスクリプトも少し変更します。
少しだけ、リリース時に手を入れないといけないことがあります。&lt;/p&gt;

&lt;h2 id=&#34;これから&#34;&gt;これから、&lt;/h2&gt;

&lt;p&gt;これで終了です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-06-open.sati-github-initital.png&#34; alt=&#34; /open.sati-github-initital&#34; /&gt;&lt;/p&gt;

&lt;p&gt;で、、、READMEを入れる場所を間違えた。。がまあいいでしょう。次回コミット時に変更します。&lt;/p&gt;

&lt;p&gt;ただし、作業用のプロジェクトで新しいファイルが追加された時は別途そのファイルをデプロイ用でも追加する作業が必要になります。まぁ、ビルドが通らなくなるのでわかると思いますが、、、&lt;/p&gt;

&lt;p&gt;とりあえず。こんな感じで当分は行ってみます。&lt;/p&gt;

&lt;p&gt;もし他に良い方法があったら、教えてください。（なーーんかありそうな感じ。）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>littlist v2.8.0</title>
      <link>http://goozenlab.com/blog/2016/09/littlist-280/</link>
      <pubDate>Mon, 05 Sep 2016 10:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/littlist-280/</guid>
      <description>

&lt;p&gt;Swift移植シリーズ第八弾、終盤突入。９月になってしまったので、最後の方は強引に合わせ技で作業を終えました。処理にばたつきが見られる。。&lt;/p&gt;

&lt;p&gt;追加の機能はありませんが、 リマインダーからのインポート方法が変更になりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://goozenlab.com/images/2016-09-02-littlist-280.png&#34; alt=&#34;littlist 2.8.0&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;リマインダーからのインポートは、ナビゲーションバーの右の＋ボタンの長押しになります。&lt;/li&gt;
&lt;li&gt;インポートされたイベントの右バーのに色が付きます。&lt;/li&gt;
&lt;li&gt;読み込みリスト名の設定などは設定より行います。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：この長押しは、&lt;strong&gt;メイン画面の時にのみ有効&lt;/strong&gt;になっています。カテゴリー表示時に有効にしてしまうと、インポートしたイベントがすべて表示されないのでこのような形を取っています。そして、重複チェックは、インポート色のついたイベントのみに行われます。&lt;/p&gt;

&lt;h1 id=&#34;change-log&#34;&gt;Change Log&lt;/h1&gt;

&lt;h2 id=&#34;2-8-0-100-swift-release-2016-09-05-chiangmai&#34;&gt;[2.8.0 - 100% Swift release] - 2016-09-05 @ ChiangMai&lt;/h2&gt;

&lt;h3 id=&#34;changed&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iOS8以降でのサポート&lt;/li&gt;
&lt;li&gt;バーの色、選択時の背景色を変更 （ダークモードが少しカッコよくなったと、）&lt;/li&gt;
&lt;li&gt;文字が少し大きくなる（私の老眼が進行しているわけではない。）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;added&#34;&gt;Added&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;追加ボタンの長押し：インポート機能&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;remove&#34;&gt;Remove&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;新規追加ダイアログからインポートボタンを削除&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注：新しい言語のswiftへの書き直しのため、不具合等があると思います。お気付きのことがあったら連絡のほどよろしくお願いいたします。&lt;/p&gt;

&lt;p&gt;近くリリースされる、iOS10にて不具合が無い事を祈りつつ。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Podsを使う</title>
      <link>http://goozenlab.com/blog/2016/09/use-pods/</link>
      <pubDate>Sat, 03 Sep 2016 07:00:00 +0700</pubDate>
      <author>goozenlab@gmail.com (jin)</author>
      <guid>http://goozenlab.com/blog/2016/09/use-pods/</guid>
      <description>&lt;p&gt;XCode7.3.1にて先日インストール&lt;a href=&#34;http://goozenlab.com/blog/2016/09/install-pods/&#34;&gt;（記事）&lt;/a&gt;したポッドを使います。これがびっくり簡単で驚きました。&lt;/p&gt;

&lt;p&gt;ただ、ヘッダーをインポートするだけ！です。ブリッジがどうだこうだみたいのを作らないといけないと思っていたので拍子抜け。素晴らしい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import UIKit
import CoreData

import ReachabilitySwift
import MBProgressHUD
import SwiftyDropbox

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でも、なんか、XCodeが半落ち状態になることが頻発するようになった。。&lt;/p&gt;

&lt;p&gt;ちなみに、Podfileはこんな感じです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;project &#39;(a).xcodeproj&#39;
platform :ios, &#39;8.0&#39;

target &#39;(a)&#39; do
  use_frameworks!

  # Pods for (a)
  pod &#39;ReachabilitySwift&#39;
  pod &#39;MBProgressHUD&#39;
  pod &#39;SwiftyDropbox&#39;
  
end
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>